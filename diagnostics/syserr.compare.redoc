[section#syserr.compare
    [:en] Comparison operator functions
    [:zh_CN] 比较运算符函数
]

[%@lib@member operator==[!error_code]]
[codeblock:declaration]
bool operator==(const error_code& lhs, const error_code& rhs) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock]
lhs.category() == rhs.category() && lhs.value() == rhs.value()
[codeblock:end]
[div:end]

[%@lib@member operator==[!error_condition]]
[%@lib@member operator==[!error_code]]
[codeblock:declaration]
bool operator==(const error_code& lhs, const error_condition& rhs) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock]
lhs.category().equivalent(lhs.value(), rhs) || rhs.category().equivalent(lhs, rhs.value())
[codeblock:end]
[div:end]

[%@lib@member operator==[!error_condition]]
[codeblock:declaration]
bool operator==(const error_condition& lhs, const error_condition& rhs) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock]
lhs.category() == rhs.category() && lhs.value() == rhs.value()
[codeblock:end]
[div:end]

[%@lib@member operator<=>[!error_code]]
[codeblock:declaration]
strong_ordering operator<=>(const error_code& lhs, const error_code& rhs) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
if (auto c = lhs.category() <=> rhs.category(); c != 0) return c;
return lhs.value() <=> rhs.value();
[codeblock:end]
[div:end]

[%@lib@member operator<=>[!error_condition]]
[codeblock:declaration]
strong_ordering operator<=>(const error_condition& lhs, const error_condition& rhs) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock]
if (auto c = lhs.category() <=> rhs.category(); c != 0) return c;
return lhs.value() <=> rhs.value();
[codeblock:end]
[div:end]
