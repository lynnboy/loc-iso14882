[section#syserr.errcondition.overview
    [:en] Class [`error_condition] overview
    [:zh_CN] 类 [`error_condition] 概要
]

[para]
[:en]
The class [`error_condition] describes an object used to hold values identifying
error conditions.
[:zh_CN]
[`error_condition] 类描述了用于保持识别错误条件的值的对象。

[enter:note]
[:en]
[`error_condition] values are portable abstractions, while [`error_code] values
([#syserr.errcode]) are implementation specific.
[:zh_CN]
[`error_condition] 的值是可移植的抽象，而 [`error_code] 的值
（[#syserr.errcode]）是特定于实现的。
[exit:note]

[%@library error_condition]
[codeblock:synopsis]
namespace std {
  class error_condition {
  public:
    // [:en] [#syserr.errcondition.constructors], constructors
    // [|:zh_CN] [#syserr.errcondition.constructors]，构造函数
    error_condition() noexcept;
    error_condition(int val, const error_category& cat) noexcept;
    template<class ErrorConditionEnum>
      error_condition(ErrorConditionEnum e) noexcept;

    // [:en] [#syserr.errcondition.modifiers], modifiers
    // [|:zh_CN] [#syserr.errcondition.modifiers]，改动函数
    void assign(int val, const error_category& cat) noexcept;
    template<class ErrorConditionEnum>
      error_condition& operator=(ErrorConditionEnum e) noexcept;
    void clear() noexcept;

    // [:en] [#syserr.errcondition.observers], observers
    // [|:zh_CN] [#syserr.errcondition.observers]，探察函数
    int value() const noexcept;
    const error_category& category() const noexcept;
    string message() const;
    explicit operator bool() const noexcept;

  private:
    int val_;                   // [=Expos]
    const error_category* cat_; // [=Expos]
  };
}
[codeblock:end]
