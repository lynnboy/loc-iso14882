[section#syserr.errcondition.constructors
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@library error_condition[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
error_condition() noexcept;
[codeblock:end]

[begin:description]
[para:ensures]
[:en] [`val_ == 0] and [`cat_ == &generic_category()].
[:zh_CN] [`val_ == 0] 并且 [`cat_ == &generic_category()]。
[end:description]

[%@library error_condition[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
error_condition(int val, const error_category& cat) noexcept;
[codeblock:end]

[begin:description]
[para:ensures]
[:en] [`val_ == val] and [`cat_ == &cat].
[:zh_CN] [`val_ == val] 并且 [`cat_ == &cat]。
[end:description]

[%@library error_condition[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
template<class ErrorConditionEnum>
  error_condition(ErrorConditionEnum e) noexcept;
[codeblock:end]

[begin:description]
[para:constraints]
[:en] [`is_error_condition_enum_v<ErrorConditionEnum>] is [`true].
[:zh_CN] [`is_error_condition_enum_v<ErrorConditionEnum>] 为 [`true]。

[para:ensures]
[:en] [`*this == make_error_condition(e)].
[:zh_CN] [`*this == make_error_condition(e)]。
[end:description]
