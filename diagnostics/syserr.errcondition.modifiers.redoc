[section#syserr.errcondition.modifiers
    [:en] Modifiers
    [:zh_CN] 改动函数
]

[%@lib@member assign[!error_condition]]
[codeblock:declaration]
void assign(int val, const error_category& cat) noexcept;
[codeblock:end]

[div:description]
[para:ensures]
[:en] [`val_ == val] and [`cat_ == &cat].
[:zh_CN] [`val_ == val] 并且 [`cat_ == &cat]。
[div:end]

[%@lib@member operator=[!error_condition]]
[codeblock:declaration]
template<class ErrorConditionEnum>
  error_condition& operator=(ErrorConditionEnum e) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_error_condition_enum_v<ErrorConditionEnum>] is [`true].
[:zh_CN] [`is_error_condition_enum_v<ErrorConditionEnum>] 为 [`true]。

[para:ensures]
[:en] [`*this == make_error_condition(e)].
[:zh_CN] [`*this == make_error_condition(e)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member clear[!error_condition]]
[codeblock:declaration]
void clear() noexcept;
[codeblock:end]

[div:description]
[para:ensures]
[:en] [`value() == 0] and [`category() == generic_category()].
[:zh_CN] [`value() == 0] 并且 [`category() == generic_category()]。
[div:end]
