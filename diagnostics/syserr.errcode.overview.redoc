[section#syserr.errcode.overview
    [:en] Overview
    [:zh_CN] 概要
]

[para]
[:en]
The class [`error_code] describes an object used to hold error code values, such
as those originating from the operating system or other low-level application
program interfaces.
[:zh_CN]
[`error_code] 类描述了用于持有错误号码值的对象，比如源自操作系统或其他下层应用
程序接口的错误号码。

[begin:note]
[:en]
Class [`error_code] is an adjunct to error reporting by exception.
[:zh_CN]
类 [`error_code] 是对异常所报告的错误的附加功能。
[end:note]

[%@library error_code]
[codeblock:synopsis]
namespace std {
  class error_code {
  public:
    // [:en] [#syserr.errcode.constructors], constructors \
       [:zh_CN] [#syserr.errcode.constructors]，构造函数：
    error_code() noexcept;
    error_code(int val, const error_category& cat) noexcept;
    template<class ErrorCodeEnum>
      error_code(ErrorCodeEnum e) noexcept;

    // [:en] [#syserr.errcode.modifiers], modifiers \
       [:zh_CN] [#syserr.errcode.modifiers]，改动函数：
    void assign(int val, const error_category& cat) noexcept;
    template<class ErrorCodeEnum>
        error_code& operator=(ErrorCodeEnum e) noexcept;
    void clear() noexcept;

    // [:en] [#syserr.errcode.observers], observers \
       [:zh_CN] [#syserr.errcode.observers]，探察函数：
    int value() const noexcept;
    const error_category& category() const noexcept;
    error_condition default_error_condition() const noexcept;
    string message() const;
    explicit operator bool() const noexcept;

  private:
    int val_;                   // [=expos]
    const error_category* cat_; // [=expos]
  };

  // [:en] [#syserr.errcode.nonmembers], non-member functions \
     [:zh_CN] [#syserr.errcode.nonmembers]，非成员函数：
  error_code make_error_code(errc e) noexcept;

  template<class charT, class traits>
    basic_ostream<charT,traits>&
      operator<<(basic_ostream<charT, traits>& os, const error_code& ec);
}
[codeblock:end]
