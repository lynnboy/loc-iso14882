[section#class.compare.secondary
    [:en] Secondary comparison operators
    [:zh_CN] 次级比较运算符
]
[:en]
[%operator[!inequality[!defaulted]]]
[%operator[!relational[!defaulted]]]
[:zh_CN]
[%运算符[!不相等～[!预置的]]]
[%运算符[!关系～[!预置的]]]

[para]
[:en]
[%operator[!comparison[!secondary]]]
A [+secondary comparison operator] is a relational operator ([#expr.rel]) or the
[`!=] operator.
[:zh_CN]
[%运算符[!比较～[!次级～]]]
[+次级比较运算符]为关系运算符（[#expr.rel]）或 [`!=] 运算符。

[:en]
A defaulted operator function ([#over.binary]) for a secondary comparison
operator [`@] shall have a declared return type [`bool].
[:zh_CN]
对某个次级运算符 [`@] 的预置的运算符函数（[#over.binary]）应当声明具有返回类型
[`bool]。

[para]
[:en]
The operator function with parameters [`x] and [`y] is defined as deleted if
[:zh_CN]
以下情况下将具有形参 [`x] 和 [`y] 的运算符函数定义为弃置的：

[list]
[item]
[:en] a first overload resolution ([#over.match]), as applied to [`x @ y],
[:zh_CN] 第一次重载决议（[#over.match]）（如同对 [`x @ y] 所实施的）
[list]
[item]
[:en@~] does not result in a usable candidate, or
[:zh_CN@~] 无法得到一个可用候选，或者
[item]
[:en@~] the selected candidate is not a rewritten candidate, or
[:zh_CN@~] 由所选中的候选函数不是重写候选，或者
[list:end]

[item]
[:en] a second overload resolution for the expression resulting from the
interpretation of [`x @ y] using the selected rewritten candidate ([#over.match.oper])
does not result in a usable candidate
(for example, that expression might be [`(x <=> y) @ 0]), or
[:zh_CN] 对使用所选中的重写候选（[#over.match.oper]）来判读 [`x @ y] 所得到的
表达式进行的第二次重载决议，无法得到一个可用候选
（例如，该表达式可能是 [`(x <=> y) @ 0]），或者

[item]
[:en] [`x @ y] cannot be implicitly converted to [`bool].
[:zh_CN] [`x @ y] 不能隐式转换为 [`bool]。
[list:end]

[:en] In any of the two overload resolutions above, the defaulted operator
function is not considered as a candidate for the [`@] operator.
[:zh_CN] 以上两次重载决议中，都不把预置的运算符函数当作 [`@] 运算符的候选。

[:en] Otherwise, the operator function yields [`x @ y].
[:zh_CN] 否则，该运算符函数产生 [`x @ y]。

[para]
[begin:example]
[codeblock]
struct HasNoLessThan { };

struct C {
  friend HasNoLessThan operator<=>(const C&, const C&);
  bool operator<(const C&) const = default;             // [:en] OK, function is deleted \
                                                        [:zh_CN] OK，函数被弃置
};
[codeblock:end]
[end:example]

