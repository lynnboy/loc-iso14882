[section#class.compare.secondary
    [:en] Secondary comparison operators
    [:zh_CN] 次级比较运算符
]
[:en]
[%operator[!inequality[!defaulted]]]
[%operator[!relational[!defaulted]]]
[:zh_CN]
[%运算符[!不相等～[!预置的]]]
[%运算符[!关系～[!预置的]]]

[para]
[:en]
[%operator[!comparison[!secondary]]]
A [+secondary comparison operator] is a relational operator ([#expr.rel]) or the
[`!=] operator.
[:zh_CN]
[%运算符[!比较～[!次级～]]]
[+次级比较运算符]为关系运算符（[#expr.rel]）或 [`!=] 运算符。

[:en]
A defaulted operator function ([#over.binary]) for a secondary comparison
operator [`@] shall have a declared return type [`bool].
[:zh_CN]
对某个次级运算符 [`@] 的预置的运算符函数（[#over.binary]）应当声明具有返回类型
[`bool]。

[para]
[:en]
The operator function with parameters [`x] and [`y] is defined as deleted if
[:zh_CN]
以下情况下将具有形参 [`x] 和 [`y] 的运算符函数定义为弃置的：

[list]
[item]
[:en]
overload resolution ([#over.match]), as applied to [`x @ y], does not result in
a usable candidate, or
[:zh_CN]
重载决议（[#over.match]）（如同对 [`x @ y] 所实施的）无法得到一个可用候选，或者

[item]
[:en]
the candidate selected by overload resolution is not a rewritten candidate.
[:zh_CN]
由重载决议所选中的候选函数不是重写候选。
[list:end]

[:en]
Otherwise, the operator function yields [`x @ y].
[:zh_CN]
否则，该运算符函数产生 [`x @ y]。

[:en]
The defaulted operator function is not considered as a candidate in the overload
resolution for the [`@] operator.
[:zh_CN]
预置的运算符函数在针对 [`@] 运算符的重载决议中不被当做是候选。

[para]
[begin:example]
[codeblock]
struct HasNoLessThan { };

struct C {
  friend HasNoLessThan operator<=>(const C&, const C&);
  bool operator<(const C&) const = default;             // [:en] OK, function is deleted \
                                                           [:zh_CN] OK，函数被弃置
};
[codeblock:end]
[end:example]

