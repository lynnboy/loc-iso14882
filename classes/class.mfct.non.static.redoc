[section#class.mfct.non.static
    [:en] Nonstatic member functions
    [:zh_CN] 非静态成员函数
]

[%  [:en] member function[!non-static]
    [:zh_CN] 成员函数[!非静态～] ]

[para]
[:en]
A non-static member function may be called for an object of its class type,
or for an object of a class derived ([#class.derived]) from its class type,
using the class member access syntax ([#expr.ref], [#over.match.call]).
[:zh_CN]
可以对类类型的对象，或者对其类的派生类类型（[#class.derived]）的对象使用类成员
访问语法（[#expr.ref]，[#over.match.call]）来调用其非静态成员函数。

[:en]
A non-static member function may also be called directly using the function call
syntax ([#expr.call], [#over.match.call]) from within its class or a class
derived from its class, or a member thereof, as described below.
[:zh_CN]
在其类或其类的派生类，或其成员函数之中，非静态成员函数还可以直接使用函数调用语法
（[#expr.call]，[#over.match.call]）进行调用，如下所述。

[para]
[begin:note]
[:en]
[%member function[!const]]
[%member function[!volatile]]
[%member function[!const volatile]]
An implicit object member function can be declared with [~cv-qualifier]s, which
affect the type of the [`:key this] pointer ([#expr.prim.this]), and/or a
[~ref-qualifier] ([#dcl.fct]); both affect overload resolution
([#over.match.funcs]).
[:zh_CN]
[%成员函数[!const]]
[%成员函数[!volatile]]
[%成员函数[!const volatile]]
隐式对象成员函数可以声明为带有 [~cv-限定符]，它们影响 [`:key this] 指针的类型
（[#expr.prim.this]），以及一个[~引用限定符]（[#dcl.fct]）；它们均会影响重载决议
（[#over.match.funcs]）。
[end:note]

[para]
[:en]
An implicit object member function may be declared virtual ([#class.virtual]) or
pure virtual ([#class.abstract]).
[:zh_CN]
隐式对象成员函数可被声明为虚函数（[#class.virtual]）或纯虚函数（[#class.abstract]）。
