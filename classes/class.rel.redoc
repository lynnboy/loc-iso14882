[section#class.rel
    [:en] Relational operators
    [:zh_CN] 关系运算符
]
[:en]
[%operator[!relational[!defaulted]]]
[:zh_CN]
[%运算符[!关系～[!预置的]]]

[para]
[:en]
A defaulted relational ([#expr.rel]) operator function for some operator [`@]
shall have a declared return type [`bool].
[:zh_CN]
对某个运算符 [`@] 的预置的关系（[#expr.rel]）运算符函数应当声明具有返回类型
[`bool]。

[para]
[:en]
The operator function with parameters [`x] and [`y] is defined as deleted if
[:zh_CN]
以下情况下将具有形参 [`x] 和 [`y] 的运算符函数定义为弃置的：

[list]
[item]
[:en]
overload resolution ([#over.match]), as applied to [`x <=> y], does not result
in a usable function, or
[:zh_CN]
如同对 [`x <=> y] 所实施的重载决议（[#over.match]），无法得到一个可用函数，或者

[item]
[:en]
the operator [`@] cannot be applied to the return type of [`x <=> y].
[:zh_CN]
无法对 [`x <=> y] 的结果类型运用运算符 [`@]。
[list:end]

[:en]
Otherwise, the operator function yields [`x <=> y @ 0].
[:zh_CN]
否则，该运算符函数产生 [`x <=> y @ 0]。

[para]
[begin:example]
[codeblock]
struct C {
  friend std::strong_equality operator<=>(const C&, const C&);
  bool operator<(const C&) const = default;             // [:en] OK, function is deleted \
                                                           [:zh_CN] OK，函数被弃置
};
[codeblock:end]
[end:example]

