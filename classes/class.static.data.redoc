[section#class.static.data
    [:en] Static data members
    [:zh_CN] 静态数据成员

[%  [:en] member data[!static]
    [:zh_CN] 成员数据[!静态～] ]
]

[para]
[:en]
A static data member is not part of the subobjects of a class.
[:zh_CN]
静态数据成员并不属于类的子对象。

[:en]
If a static data member is declared [`thread_local] there is one copy of the
member per thread.
[:zh_CN]
若静态数据成员被声明为 [`thread_local]，则每个线程都有该成员的一个副本。

[:en]
If a static data member is not declared [`thread_local] there is one copy of
the data member that is shared by all the objects of the class.
[:zh_CN]
若静态数据成员未被声明为 [`thread_local]，则该数据成员的一个副本由这个类的所有
对象所共享。

[para]
[:en]
A static data member shall not be [`mutable] ([#dcl.stc]).
[:zh_CN]
静态数据成员不能为 [`mutable]（[#dcl.stc]）。

[:en]
A static data member shall not be a direct member ([#class.mem]) of an unnamed
([#class.pre]) or local ([#class.local]) class or of a (possibly indirectly)
nested class ([#class.nest]) thereof.
[:zh_CN]
静态数据成员不能是无名（[#class.pre]）或局部（[#class.local]）类，或者其（可能
间接的）嵌套类（[#class.nest]）的直接成员（[#class.mem]）。

[para]
[:en]
[%initialization[!static member]] [%definition[!static member]]
The declaration of a non-inline static data member in its class definition is
not a definition and may be of an incomplete type other than [=cv] [`void].
[:zh_CN]
[%初始化[!静态成员]] [%定义式[!静态成员]]
非内联的静态数据成员在其类定义式中的声明式并不是定义式，并且可以具有除了
[=cv] [`void] 之外的不完整类型。

[begin:note]
[:en]
[%operator use[!scope resolution]]
The [~initializer] in the definition of a static data member is in the scope of
its class ([#basic.scope.class]).
[:zh_CN]
[%运算符[!使用作用域解析～]]
静态数据成员的定义式中的[~初始化式]处于其类的作用域（[#basic.scope.class]）之中。
[end:note]

[begin:example]
[codeblock]
class process {
  static process* run_chain;
  static process* running;
};

process* process::running = get_main();
process* process::run_chain = running;
[codeblock:end]

[:en]
The definition of the static data member [`run_chain] of class [`process]
inhabits the global scope; the notation [`process::run_chain] indicates that the
member [`run_chain] is a member of class [`process] and in the scope of class
[`process].
[:zh_CN]
类 [`process] 的静态数据成员 [`run_chain] 的定义式居于全局作用域；记号
[`process::run_chain] 指明了成员 [`run_chain] 是类 [`process] 的成员并处于类
[`process] 的作用域中。

[:en]
In the static data member definition, the [~initializer] expression refers to
the static data member [`running] of class [`process].
[:zh_CN]
在静态数据成员的定义式中，[~初始化式]表达式指代类 [`process] 的静态数据成员
[`running]。
[end:example]

[para:~]
[begin:note]
[:en]
Once the static data member has been defined, it exists even if no objects of
its class have been created.
[:zh_CN]
一旦定义了静态数据成员，则即使未创建过其类的对象它也存在。

[begin:example]
[:en]
In the example above, [`run_chain] and [`running] exist even if no objects of
class [`process] are created by the program.
[:zh_CN]
在上例中，即使在程序中并未创建类 [`process] 的对象，[`run_chain] 和 [`running]
也存在。
[end:example]

[:en]
The initialization and destruction of static data members is described in
[#basic.start.static], [#basic.start.dynamic], and [#basic.start.term].
[:zh_CN]
[#basic.start.static]，[#basic.start.dynamic]，和 [#basic.start.term] 中描述了
静态数据成员的初始化和销毁。
[end:note]

[para]
[:en]
If a non-volatile non-inline [`const] static data member is of integral or
enumeration type, its declaration in the class definition can specify a
[~brace-or-equal-initializer] in which every [~initializer-clause] that is an
[~assignment-expression] is a constant expression ([#expr.const]).
[:zh_CN]
若一个非 volatile 非内联的 [`const] 静态数据成员是整型或枚举类型，则它在类定义式
中的声明式可以指定[~花括号或等号初始化式]，其中的每个是[~赋值表达式]的
[~初始化式子句]均为常量表达式（[#expr.const]）。

[:en]
The member shall still be defined in a namespace scope if it is odr-used
([#basic.def.odr]) in the program and the namespace scope definition shall not
contain an [~initializer].
[:zh_CN]
若在程序中 ODR 式使用（[#basic.def.odr]）该成员，则它仍需进行定义，且其命名空间
作用域的定义式不能包含[~初始化式]。

[:en]
The declaration of an inline static data member (which is a definition) may
specify a [~brace-or-equal-initializer].
[:zh_CN]
内联静态数据成员的声明式（即为定义式）可以指定一个[~花括号或等号初始化式]。

[:en]
If the member is declared with the [`constexpr] specifier, it may be redeclared
in namespace scope with no initializer (this usage is deprecated; see
[#depr.static.constexpr]).
[:zh_CN]
如果成员声明时带有 [`constexpr] 说明符，则可以在命名空间中对其进行不带有初始化式
的重复声明（这种用法是被摒弃的；参见 [#depr.static.constexpr]）。

[:en]
Declarations of other static data members shall not specify a
[~brace-or-equal-initializer].
[:zh_CN]
其他的静态数据成员的声明式不能指定[~花括号或等号初始化式]。

[para]
[begin:note]
[:en]
There is exactly one definition of a static data member that is odr-used
([#basic.def.odr]) in a valid program.
[:zh_CN]
合法程序中被 ODR 式使用（[#basic.def.odr]）的静态数据成员的定义式恰好有一个。
[end:note]

[para]
[begin:note]
[:en]
Static data members of a class in namespace scope have the linkage of the name
of the class ([#basic.link]).
[:zh_CN]
命名空间作用域中的类的静态数据成员具有其所在类的名字的连接（[#basic.link]）。
[end:note]
