[section#class.compare.default
    [:en] Defaulted comparison operator functions
    [:zh_CN] 预置比较运算符函数
]

[para]
[:en]
A defaulted comparison operator function ([#expr.spaceship], [#expr.rel],
[#expr.eq]) for some class [`C] shall be a non-template function declared in the
[~member-specification] of [`C] that is
[:zh_CN]
对于类 [`C] 预置的比较运算符函数（[#expr.spaceship]，[#expr.rel]，[#expr.eq]）
应当是在 [`C] 的[~成员说明]中所声明的非模板函数，为

[list]
[item]
[:en] a non-static member of [`C] having one parameter of type [`const C&], or
[:zh_CN] 带有一个 [`const C&] 类型的形参的 [`C] 的非静态成员，或者为
[item]
[:en] a friend of [`C] having two parameters of type [`const C&].
[:zh_CN] 带有两个 [`const C&] 类型的形参的 [`C] 的友元。
[list:end]

[para]
[:en]
A three-way comparison operator for a class type [`C] is a [+structural
comparison operator[%operator[!structural comparison]]][%structural comparison
operator[%operator[!structural comparison]]] if it is defined as defaulted in
the definition of [`C], and all three-way comparison operators it invokes are
structural comparison operators.
[:zh_CN]
如果类类型 [`C] 的三路比较运算符在 [`C] 的定义式中定义为预置的，并且其所调用的
所有三路比较运算符都是结构化比较运算符，则它是[+结构化比较运算符[%运算符
[!结构化比较～]]][%结构化比较运算符[%运算符[!结构化比较～]]]。

[:en]
A type [`T] has [+strong structural equality[%equality[!strong structural]]]
[%strong structural equality[%equality[!strong structural]]] if, for a glvalue
[`x] of type [`const T], [`x <=> x] is a valid expression of type
[`std::strong_ordering] or [`std::strong_equality] and either does not invoke a
three-way comparison operator or invokes a structural comparison operator.
[:zh_CN]
对于类型 [`T]，如果对于 [`const T] 类型的泛左值 [`x]，[`x <=> x] 是
[`std::strong_ordering] 或 [`std::strong_equality] 类型的有效表达式，并且它
不会调用三路比较运算符或者调用结构化比较运算符，则类型 [`T] 具有[+强结构化相等性
[%相等性[!强结构化～]]][%强结构化相等性[%相等性[!强结构化～]]]。
