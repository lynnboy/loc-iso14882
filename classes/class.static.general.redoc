[section#class.static.general
    [:en] General
    [:zh_CN] 概述

[:en]
[%member[!static]]
[:zh_CN]
[%成员[!静态～]]
]

[para]
[:en]
A static member [`s] of class [`X] may be referred to using the [~qualified-id]
expression [`X::s]; it is not necessary to use the class member access syntax
([#expr.ref]) to refer to a static member.
[:zh_CN]
类 [`X] 的静态成员 [`s]，可以用[~限定标识]表达式 [`X::s] 指代；不必用类成员访问
语法（[#expr.ref]）来指代静态成员。

[:en]
A static member may be referred to using the class member access syntax, in
which case the object expression is evaluated.
[:zh_CN]
类成员访问语法可以指代静态成员，此种情况下其对象表达式亦被求值。

[begin:example]
[codeblock]
struct process {
  static void reschedule();
};
process& g();

void f() {
  process::reschedule();        // [:en] OK: no object necessary \
                                   [:zh_CN] OK：不需要对象
  g().reschedule();             // [:en] [`g()] is called \
                                   [:zh_CN] 调用了 [`g()]
}
[codeblock:end]
[end:example]

[para]
[:en]
Static members obey the usual class member access rules ([#class.access]).
[:zh_CN]
静态成员遵循通常的类成员访问规则（[#class.access]）。

[:en]
When used in the declaration of a class member, the [`static] specifier shall
only be used in the member declarations that appear within the
[~member-specification] of the class definition.
[:zh_CN]
当在类成员的声明式中使用 [`static] 说明符时，它只能用在出现于类声明式的
[~成员说明]之中的成员声明式中。

[begin:note]
[:en]
It cannot be specified in member declarations that appear in namespace scope.
[:zh_CN]
不能在出现于命名空间作用域的成员声明式中指定它。
[end:note]
