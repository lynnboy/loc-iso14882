[section#class.eq
    [:en] Equality operator
    [:zh_CN] 相等性运算符
]
[:en]
[%operator[!equality[!defaulted]]]
[:zh_CN]
[%运算符[!相等性～[!预置的]]]

[para]
[:en]
A defaulted equality operator function ([#over.binary]) shall have a declared
return type [`bool].
[:zh_CN]
预置的相等运算符函数（[#over.binary]）应当声明为具有返回类型 [`bool]。

[para]
[:en]
A defaulted [`==] operator function for a class [`C] is defined as deleted
unless, for each [$[`x]_i] in the expanded list of subobjects for an object [`x]
of type [`C], [`x[$_i] == x[$_i]] is usable ([#class.compare.default]).
[:zh_CN]
对某个类 [`C] 预置的 [`==] 运算符函数，除非满足以下条件，否则被定义为弃置的：
对 [`C] 类型的对象 [`x] 的子对象展开列表中的每个 [$[`x]_i]，均有
[`x[$_i] == x[$_i]] 可用（[#class.compare.default]）。

[para]
[:en] The return value of a defaulted [`==] operator function with parameters
[`x] and [`y] is determined by comparing corresponding elements [$[`x]_i] and
[$[`y]_i] in the expanded lists of subobjects for [`x] and [`y] (in increasing
index order) until the first index [$i] where [`x[$_i] == y[$_i]] yields a
result value which, when contextually converted to [`bool], yields [`false].
[:zh_CN] 带有形参 [`x] 和 [`y] 的预置的 [`==] 运算符函数的返回值，其确定方法是通过
对 [`x] 和 [`y] 的子对象展开列表中的对应元素 [$[`x]_i] 和 [$[`y]_i]（按索引增序）
进行比较，直到遇到第一个使得 [`x[$_i] == y[$_i]] 所产生的值按语境转换为 [`bool]
时产生 [`false] 的索引 [$i]。

[:en] The return value is [`false] if such an index exists and [`true] otherwise.
[:zh_CN] 若存在这样的索引则返回值为 [`false]，否则为 [`true]。

[:en]
Otherwise, [`V] is [`false].
[:zh_CN]
否则，[`V] 为 [`false]。

[para]
[begin:example]
[codeblock]
struct D {
  int i;
  friend bool operator==(const D& x, const D& y) = default;
                                                // [:en] OK, returns [`x.i == y.i] \
                                                [:zh_CN] OK，返回 [`x.i == y.i]
};
[codeblock:end]
[end:example]
