[section#class.eq
    [:en] Equality operators
    [:zh_CN] 相等性运算符
]
[:en]
[%operator[!equality[!defaulted]]]
[%operator[!inequality[!defaulted]]]
[:zh_CN]
[%运算符[!相等～[!预置的]]]
[%运算符[!不相等～[!预置的]]]

[para]
[:en]
A defaulted equality operator ([#expr.eq]) function shall have a declared return
type [`bool].
[:zh_CN]
预置的相等运算符（[#expr.eq]）函数应当声明为具有返回类型 [`bool]。

[para]
[:en]
A defaulted [`==] operator function for a class [`C] is defined as deleted
unless, for each [$[`x]_i] in the expanded list of subobjects for an object [`x]
of type [`C], [`x[$_i] == x[$_i]] is a valid expression and contextually
convertible to [`bool].
[:zh_CN]
对某个类 [`C] 预置的 [`==] 运算符函数，除非满足以下条件，否则被定义为弃置的：
对 [`C] 类型的对象 [`x] 的子对象展开列表中的每个 [$[`x]_i]，均有
[`x[$_i] == x[$_i]] 为有效表达式且可按语境转换为 [`bool]。

[para]
[:en]
The return value [`V] of a defaulted [`==] operator function with parameters
[`x] and [`y] is determined by comparing corresponding elements [$[`x]_i] and
[$[`y]_i] in the expanded lists of subobjects for [`x] and [`y] (in increasing
index order) until the first index [$i] where [`x[$_i] == y[$_i]] yields a
result value which, when contextually converted to [`bool], yields [`false].
[:zh_CN]
带有形参 [`x] 和 [`y] 的预置的 [`==] 运算符函数的返回值 [`V]，其确定方法是通过
对 [`x] 和 [`y] 的子对象展开列表中的对应元素 [$[`x]_i] 和 [$[`y]_i]（按索引增序）
进行比较，直到遇到第一个使得 [`x[$_i] == y[$_i]] 所产生的值按语境转换为 [`bool]
时产生 [`false] 的索引 [$i]。

[:en]
If no such index exists, [`V] is [`true].
[:zh_CN]
如果不存在这样的索引，则 [`V] 为 [`true]。

[:en]
Otherwise, [`V] is [`false].
[:zh_CN]
否则，[`V] 为 [`false]。

[para]
[:en]
A defaulted [`!=] operator function for a class [`C] with parameters [`x] and
[`y] is defined as deleted if
[:zh_CN]
某个类 [`C] 的带有形参 [`x] 和 [`y] 的预置 [`!=] 运算符函数，当符合以下情况时被
定义为弃置的：

[list]
[item]
[:en] overload resolution ([#over.match]), as applied to [`x == y], does not
result in a usable function, or
[:zh_CN] 与 [`x == y] 相似所进行的重载决议（[#over.match]）并不得到一个可使用的
函数，或者

[item]
[:en] [`x == y] is not a prvalue of type [`bool].
[:zh_CN] [`x == y] 并非 [`bool] 类型的纯右值。
[list:end]

[:en]
Otherwise, the operator function yields [`!(x == y)].
[:zh_CN]
否则，该运算符函数产生 [`!(x == y)]。

[para]
[begin:example]
[codeblock]
struct D {
  int i;
  friend bool operator==(const D& x, const D& y) = default;
                                                // [:en] OK, returns [`x.i == y.i] \
                                                   [:zh_CN] OK，返回 [`x.i == y.i]
  bool operator!=(const D& z) const = default;  // [:en] OK, returns [`!(*this == z)] \
                                                   [:zh_CN] OK，返回 [`!(*this == z)]
};
[codeblock:end]
[end:example]
