[section#class.spaceship
    [:en] Three-way comparison
    [:zh_CN] 三路比较
]

[:en]
[%operator[!three-way comparison[!defaulted]]]
[:zh_CN]
[%运算符[!三路比较～[!预置的]]]

[para]
[:en]
The [+synthesized three-way comparison[%three-way comparison[!synthesized]]]
[%synthesized three-way comparison[%three-way comparison[!synthesized]]]
for comparison category type [`R] ([#cmp.categories]) of glvalues [`a] and [`b]
of the same type is defined as follows:
[:zh_CN]
对于类型相同的泛左值 [`a] 和 [`b]，针对比较类别类型 [`R]（[#cmp.categories]）的
[+合成三路比较[%三路比较[!合成～]]][%合成三路比较[%三路比较[!合成～]]]定义如下：

[list]
[item]
[:en]
If overload resolution for [`a <=> b] results in a usable function ([#over.match]),
[`static_cast<R>(a <=> b)].
[:zh_CN]
如果为 [`a <=> b] 进行的重载决议结果为一个可用函数（[#over.match]），则为
[`static_cast<R>(a <=> b)]。

[item]
[:en]
Otherwise, if overload resolution for [`a <=> b] finds at least one viable
candidate, the synthesized three-way comparison is not defined.
[:zh_CN]
否则，如果为 [`a <=> b] 进行的重载决议找到了至少一个可行的候选函数，则不定义合成
三路比较。

[item]
[:en]
Otherwise, if [`R] is [`strong_ordering], then
[:zh_CN]
否则，若 [`R] 为 [`strong_ordering]，则为

[codeblock:notation]
a == b ? strong_ordering::equal :
a < b  ? strong_ordering::less :
         strong_ordering::greater
[codeblock:end]

[item]
[:en]
Otherwise, if [`R] is [`weak_ordering], then
[:zh_CN]
否则，若 [`R] 为 [`weak_ordering]，则为

[codeblock:notation]
a == b ? weak_ordering::equivalent :
a < b  ? weak_ordering::less :
         weak_ordering::greater
[codeblock:end]

[item]
[:en]
Otherwise, if [`R] is [`partial_ordering], then
[:zh_CN]
否则，若 [`R] 为 [`partial_ordering]，则为

[codeblock:notation]
a == b ? partial_ordering::equivalent :
a < b  ? partial_ordering::less :
b < a  ? partial_ordering::greater :
         partial_ordering::unordered
[codeblock:end]

[item]
[:en]
Otherwise, if [`R] is [`strong_equality], then
[:zh_CN]
否则，若 [`R] 为 [`strong_equality]，则为

[codeblock:notation]
a == b ? strong_equality::equal : strong_equality::nonequal
[codeblock:end]

[item]
[:en]
Otherwise, if [`R] is [`weak_equality], then
[:zh_CN]
否则，若 [`R] 为 [`weak_equality]，则为

[codeblock:notation]
a == b ? weak_equality::equivalent : weak_equality::nonequivalent
[codeblock:end]

[item]
[:end]
Otherwise, the synthesized three-way comparison is not defined.
[:zh_CN]
否则，不定义合成三路比较。
[list:end]

[begin:note]
[:en]
A synthesized three-way comparison may be ill-formed if overload resolution
finds usable functions that do not otherwise meet the requirements implied by
the defined expression.
[:zh_CN]
如果重载决议所找到的可用函数无法满足由定义的表达式所蕴含的规定时，合成三路比较
可能非良构。
[end:note]

[para]
[:en]
Given an expanded list of subobjects for an object [`x] of type [`C], the type
of the expression [`x][$_i] [`<=>] [`x][$_i] is denoted by [`R][$_i].
[:zh_CN]
给定类型 [`C] 的对象 [`x] 的子对象展开列表，以 [`R][$_i] 代表表达式
“[`x][$_i] [`<=>] [`x][$_i]”的类型。

[:en]
If overload resolution as applied to [`x][$_i] [`<=>] [`x][$_i] does not find a
usable function, then [`R][$_i] is [`void].
[:zh_CN]
如果为“[`x][$_i] [`<=>] [`x][$_i]”所实施的重载决议找到了一个可用函数，则
[`R][$_i] 为 [`void]。

[:en]
If the declared return type of a defaulted three-way comparison operator
function is [`auto], then the return type is deduced as the common comparison
type (see below) of [`R][$_0], [`R][$_1], [$\cdots], [`R][$_{n-1}].
[:zh_CN]
如果预置三路比较运算符函数所声明的返回类型为 [`auto]，则将其返回类型推断为
[`R][$_0], [`R][$_1], [$\cdots], [`R][$_{n-1}] 的一般比较类型（见下文）。

[:en]
If the return type is deduced as [`void], the operator function is defined as
deleted.
[:zh_CN]
如果返回类型被推断为 [`void]，则将该运算符函数定义为弃置的。

[:en]
If the declared return type of a defaulted three-way comparison operator
function is [`R] and the synthesized three-way comparison for comparison
category type [`R] between any objects [`x][$_i] and [`x][$_i] is not defined or
would be ill-formed, the operator function is defined as deleted.
[:zh_CN]
如果预置三路比较运算符函数所声明的返回类型为 [`R]，并且任意对象 [`x][$_i] 和
[`x][$_i] 之间针对比较类别类型 [`R] 的合成三路比较未被定义或是非良构的，则该
运算符函数被定义为弃置的。

[para]
[:en]
The return value [`V] of type [`R] of the defaulted three-way comparison
operator function with parameters [`x] and [`y] of the same type is determined
by comparing corresponding elements [`x][$_i] and [`y][$_i] in the expanded
lists of subobjects for [`x] and [`y] (in increasing index order) until the
first index [$i] where the synthesized three-way comparison for comparison
category type [`R] between [`x][$_i] and [`y][$_i] yields a result value
[`v][$_i] where [`v[$_i] != 0], contextually converted to [`bool], yields
[`true]; [`V] is [`v][$_i].
[:zh_CN]
带有两个相同类型的形参 [`x] 和 [`y] 的预置三路比较运算符函数的类型为 [`R] 的
返回值 [`V]，其确定方式是对 [`x] 和 [`y] 的展开后的子对象列表中的对应元素
[`x][$_i] 和 [`y][$_i]（按索引增序）进行比较，直到遇到第一个使得在 [`x][$_i] 和
[`y][$_i] 之间针对比较类别类型 [`R] 的合成三路比较所产生的结果值 [`v][$_i] 满足
[`v[$_i] != 0] 被按语境转换为 [`bool] 时产生 [`true] 的索引 [$i]；则 [`V] 即为
[`v][$_i]。

[:en]
If no such index exists, [`V] is [`std::strong_ordering::equal] converted to
[`R].
[:zh_CN]
如果没有这样的索引，则 [`V] 为 [`std::strong_ordering::equal] 转换为 [`R] 的
结果。

[para]
[:en]
The [+common comparison type] [`U] of a possibly-empty list of [$n] types
[`T][$_0], [`T][$_1], [$\cdots], [`T][$_{n-1}] is defined as follows:
[:zh_CN]
可能为空的 [$n] 个类型的列表 [`T][$_0], [`T][$_1], [$\cdots], [`T][$_{n-1}] 的
[+公共比较类型]定义如下：

[list]
[item]
[:en]
If any [`T][$_i] is not a comparison category type ([#cmp.categories]), [`U] is
[`void].
[:zh_CN]
如果有任何 [`T][$_i] 不是比较类别类型（[#cmp.categories]），则 [`U] 为 [`void]。

[item]
[:en]
Otherwise, if at least one [`T][$_i] is [`std::weak_equality], or at least one
[`T][$_i] is [`std::strong_equality] and at least one [`T][$_j] is
[`std::partial_ordering] or [`std::weak_ordering], [`U] is [`std::weak_equality]
([#cmp.weakeq]).
[:zh_CN]
否则，如果有至少一个 [`T][$_i] 为 [`std::weak_equality]，或者至少一个 [`T][$_i]
为 [`std::strong_equality] 且至少一个 [`T][$_j] 为 [`std::partial_ordering] 或
[`std::weak_ordering]，则 [`U] 为 [`std::weak_equality]（[#cmp.weakeq]）。

[item]
[:en]
Otherwise, if at least one [`T][$_i] is [`std::strong_equality], [`U] is
[`std::strong_equality] ([#cmp.strongeq]).
[:zh_CN]
否则，如果有至少一个 [`T][$_i] 为 [`std::strong_equality]，则 [`U] 为
[`std::strong_equality]（[#cmp.strongeq]）。

[item]
[:en]
Otherwise, if at least one [`T][$_i] is [`std::partial_ordering], [`U] is
[`std::partial_ordering] ([#cmp.partialord]).
[:zh_CN]
否则，如果有至少一个 [`T][$_i] 为 [`std::partial_ordering]，则 [`U] 为
[`std::partial_ordering]（[#cmp.partialord]）。

[item]
[:en]
Otherwise, if at least one [`T][$_i] is [`std::weak_ordering], [`U] is
[`std::weak_ordering] ([#cmp.weakord]).
[:zh_CN]
否则，如果有至少一个 [`T][$_i] 为 [`std::weak_ordering]，则 [`U] 为
[`std::weak_ordering]（[#cmp.weakord]）。

[item]
[:en]
Otherwise, [`U] is [`std::strong_ordering] ([#cmp.strongord]).
[:zh_CN]
否则，[`U] 为 [`std::strong_ordering]（[#cmp.strongord]）。

[begin:note]
[:en]
In particular, this is the result when [$n] is 0.
[:zh_CN]
特别地，当 [$n] 为 0 时是这个结果。
[end:note]
[list:end]
