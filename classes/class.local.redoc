[section#class.local
    [:en] Local class declarations
    [:zh_CN] 局部类的声明

[:en]
[%declaration[!local class]]
[%definition[!local class]]
[%class[!local][%local class]]
[:zh_CN]
[%声明式[!局部类]]
[%定义式[!局部类]]
[%类[!局部～][%局部类]]
]

[para]
[:en]
A class can be declared within a function definition; such a class is called a
[+:adj local class[%class[!local]]].
[:zh_CN]
可以在函数定义式之中声明类；此种类被称为[+:adj 局部类[%类[!局部～]]]。

[begin:note]
[:en]
A declaration in a local class cannot odr-use ([#basic.def.odr]) a local entity
from an enclosing scope.
[:zh_CN]
局部类之中的声明式不能 ODR 式使用（[#basic.def.odr]）其外围作用域中的局部实体。
[end:note]

[begin:example]
[codeblock]
int x;
void f() {
  static int s ;
  int x;
  const int N = 5;
  extern int q();
  int arr[2];
  auto [y, z] = arr;

  struct local {
    int g() { return x; }       // [:en] error: odr-use of non-odr-usable variable [`x] \
                                   [:zh_CN] 错误：ODR 式使用了不可 ODR 式使用的变量 [`x]
    int h() { return s; }       // OK
    int k() { return ::x; }     // OK
    int l() { return q(); }     // OK
    int m() { return N; }       // [:en] OK: not an odr-use \
                                   [:zh_CN] OK：并非 ODR 式使用
    int* n() { return &N; }     // [:en] error: odr-use of non-odr-usable variable [`N] \
                                   [:zh_CN] 错误：ODR 式使用了不可 ODR 式使用的变量 [`N]
    int p() { return y; }       // [:en] error: odr-use of non-odr-usable structured binding [`y] \
                                   [:zh_CN] 错误：ODR 式使用了不可 ODR 式使用的结构化绑定 [`y]
  };
}

local* p = 0;                   // [:en] error: [`local] not found \
                                   [:zh_CN] 错误：[`local] 未找到
[codeblock:end]
[end:example]

[para]
[:en]
An enclosing function has no special access to members of the local class; it
obeys the usual access rules ([#class.access]).
[:zh_CN]
外围函数没有对局部类成员的特殊访问权；它遵循常规的访问规则（[#class.access]）。

[:en]
[%member function[!local class]]
Member functions of a local class shall be defined within their class
definition, if they are defined at all.
[:zh_CN]
[%成员函数[!局部类]]
如果要定义局部类的成员函数，就应当定义于其类定义式之中。

[para]
[:en]
[%nested class[!local class]]
If class [`X] is a local class a nested class [`Y] may be declared in class [`X]
and later defined in the definition of class [`X] or be later defined in the
same scope as the definition of class [`X].
[:zh_CN]
[%嵌套类[!局部类]]
若类 [`X] 是局部类，则嵌套类 [`Y] 可被声明于类 [`X] 之中并稍后在类 [`X] 的定义式
之中进行定义，或者稍后在与类 [`X] 的定义式相同的作用域之中进行定义。

[:en]
[%restriction[!local class]]
A class nested within a local class is a local class.
[:zh_CN]
[%限制[!局部类]]
局部类中所嵌套的类是局部类。

[para]
[begin:note]
[:en]
[%restriction[!static member local class]]
A local class cannot have static data members ([#class.static.data]).
[:zh_CN]
[%限制[!局部类静态成员]]
局部类不能具有静态数据成员（[#class.static.data]）。
[end:note]
