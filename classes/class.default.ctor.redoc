[section#class.default.ctor
    [:en] Default constructors
    [:zh_CN] 默认构造函数
]

[para]
[:en]
[%constructor[!inheritance of]]
[%constructor[!non-trivial]]
A [+default[%constructor[!default]]][%default[%constructor[!default]]]
constructor for a class [`X] is a constructor of class [`X] for which each
parameter that is not a function parameter pack has a default argument
(including the case of a constructor with no parameters).
[:zh_CN]
[%构造函数[!～的继承]]
[%构造函数[!非平凡～]]
类 [`X] 的[+默认[%构造函数[!默认～]]][%默认[%构造函数[!默认～]]]构造函数，是类
[`X] 的构造函数，其每个不是函数形参包组的形参都带有默认实参（也包括没有形参的
构造函数的情况）。

[:en]
[%implicitly-declared default constructor]
If there is no user-declared constructor for class [`X], a non-explicit
constructor having no parameters is implicitly declared as defaulted
([#dcl.fct.def]).
[:zh_CN]
[%隐式声明的默认构造函数]
如果类 [`X] 没有用户声明的构造函数，则一个没有形参的非 explicit 构造函数将被隐式
声明为预置的（[#dcl.fct.def]）。

[:en]
An implicitly-declared default constructor is an inline public member of its
class.
[:zh_CN]
隐式声明的默认构造函数是其类的内联的公开成员。

[para]
[:en]
A defaulted default constructor for class [`X] is defined as deleted if:
[:zh_CN]
如下情况下类 [`X] 的预置默认构造函数将被定义为弃置的：

[list]
[item]
[:en] [`X] is a union that has a variant member with a non-trivial default
constructor and no variant member of [`X] has a default member initializer,
[:zh_CN] [`X] 为联合体，并包含带有非平凡默认构造函数的可变成员，且 [`X] 中没有
可变成员带有默认成员初始化式，

[item]
[:en] [`X] is a non-union class that has a variant member [`M] with a
non-trivial default constructor and no variant member of the anonymous union
containing [`M] has a default member initializer,
[:zh_CN] [`X] 为非联合体类，并包含带有非平凡默认构造函数的可变成员 [`M]，且包含
[`M] 的匿名联合体中没有可变成员带有默认成员初始化式，

[item]
[:en] any non-static data member with no default member initializer
([#class.mem]) is of reference type,
[:zh_CN] 其中有任何不带有默认成员初始化式（[#class.mem]）的非静态数据成员具有
引用类型，

[item]
[:en] any non-variant non-static data member of const-qualified type (or array
thereof) with no [~brace-or-equal-initializer] is not
const-default-constructible ([#dcl.init]).

[:zh_CN] 其中有任何具有 const-限定的类型（或其数组），且不带有[~花括号或等号初始
化式]的非可变的非静态数据成员，不是可 const 默认构造的（[#dcl.init]）。

[item]
[:en] [`X] is a union and all of its variant members are of const-qualified
type (or array thereof),
[:zh_CN] [`X] 为联合体，且其所有可变成员都具有 const 限定的类型（或其数组），

[item]
[:en] [`X] is a non-union class and all members of any anonymous union member
are of const-qualified type (or array thereof),
[:zh_CN] [`X] 为非联合体类，且其中有任何匿名联合体成员的所有成员都具有 const
限定的类型（或其数组），

[item]
[:en] any potentially constructed subobject, except for a non-static data member
with a [~brace-or-equal-initializer], has class type [`M] (or array thereof) and
either [`M] has no default constructor or overload resolution ([#over.match]) as
applied to find [`M][=']s corresponding constructor results in an ambiguity or
in a function that is deleted or inaccessible from the defaulted default
constructor, or
[:zh_CN] 其中有任何潜在构造的子对象（除了带有[~花括号或等号初始化式]的非静态数据
成员外），具有类类型 [`M]（或其数组），而 [`M] 要么没有默认构造函数，要么查找
[`M] 的相应构造函数的重载决议（[#over.match]）的结果有歧义，或者结果是一个弃置的
函数，或一个从这个预置默认构造函数中无法访问的函数，或者

[item]
[:en] any potentially constructed subobject has a type with a destructor that is
deleted or inaccessible from the defaulted default constructor.
[:zh_CN] 其中有任何潜在构造的子对象所具有的类型中，带有弃置的或从这个预置默认
构造函数中无法访问的析构函数。
[list:end]

[para]
[:en]
A default constructor is [+trivial[%constructor[!default[!trivial]]]] if it is
not user-provided and if:
[:zh_CN]
当默认构造函数不是由用户提供的，且满足如下条件时其即为[+平凡的[%构造函数
[!默认～[!平凡～]]]]：

[list]
[item]
[:en]
its class has no virtual functions ([#class.virtual]) and no virtual base
classes ([#class.mi]), and
[:zh_CN]
该类没有虚函数（[#class.virtual]）且没有虚基类（[#class.mi]），并且

[item]
[:en]
no non-static data member of its class has a default member initializer
([#class.mem]), and
[:zh_CN]
该类没有带有默认成员初始化式（[#class.mem]）的非静态数据成员，并且

[item]
[:en]
all the direct base classes of its class have trivial default constructors, and
[:zh_CN]
该类的所有直接基类都具有平凡的默认构造函数，并且

[item]
[:en]
for all the non-static data members of its class that are of class type (or
array thereof), each such class has a trivial default constructor.
[:zh_CN]
对于该类的所有类类型（或其数组）的非静态数据成员，每个类都具有平凡的默认构造函数
。
[list:end]

[:en]
Otherwise, the default constructor is [+non-trivial[%constructor[!default
[!non-trivial]]]].
[:zh_CN]
否则，该默认构造函数为[+非平凡的[%构造函数[!默认～[!非平凡～]]]]。

[para]
[:en]
A default constructor that is defaulted and not defined as deleted is
[+implicitly defined[%constructor[!implicitly defined]]] when it is odr-used
([#basic.def.odr]) to create an object of its class type ([#intro.object]),
when it is needed for constant evaluation ([#expr.const]), or when it is
explicitly defaulted after its first declaration.
[:zh_CN]
当某个预置的且未被定义为弃置的默认构造函数被 ODR 式使用（[#basic.def.odr]）以
创建该类类型的对象（[#intro.object]）时，它被常量求值所需要（[#expr.const]）时，
或者在其首个声明式之后被显式预置时，它将被[+隐式定义[%构造函数[!隐式定义的～]]]。

[:en]
The implicitly-defined default constructor performs the set of initializations
of the class that would be performed by a user-written default constructor for
that class with no [~ctor-initializer] ([#class.base.init]) and an empty
[~compound-statement].
[:zh_CN]
隐式定义的默认构造函数对该类实施一组初始化，等同于由用户写出的没有[~构造函数初始
化式]（[#class.base.init]）和空的[~复合语句]的默认构造函数所实施的初始化。

[:en]
If that user-written default constructor would be ill-formed, the program is
ill-formed.
[:zh_CN]
若由用户写出的默认构造函数是非良构的，则程序是非良构的。

[:en]
If that user-written default constructor would satisfy the requirements of a
constexpr constructor ([#dcl.constexpr]), the implicitly-defined default
constructor is [`constexpr].
[:zh_CN]
若由用户写出的默认构造函数能够满足 constexpr 构造函数（[#dcl.constexpr]）的规定，
则隐式定义的默认构造函数是 [`constexpr] 的。

[:en]
Before the defaulted default constructor for a class is implicitly defined, all
the non-user-provided default constructors for its base classes and its
non-static data members shall have been implicitly defined.
[:zh_CN]
在对某个类的预置默认构造函数进行隐式定义之前，它的所有基类和非静态数据成员的非
用户提供的默认构造函数都应当是已经被隐式定义的。

[enter:note]
[:en]
An implicitly-declared default constructor has an exception specification
([#except.spec]).
[:zh_CN]
隐式声明的默认构造函数带有异常说明（[#except.spec]）。

[:en]
An explicitly-defaulted definition might have an implicit exception
specification, see [#dcl.fct.def].
[:zh_CN]
显式预置定义式可能有隐含的异常说明，参见 [#dcl.fct.def]。
[exit:note]

[para]
[:en]
[%constructor[!implicitly called]]
Default constructors are called implicitly to create class objects of static,
thread, or automatic storage duration ([#basic.stc.static], [#basic.stc.thread],
[#basic.stc.auto]) defined without an initializer ([#dcl.init]), are called to
create class objects of dynamic storage duration ([#basic.stc.dynamic]) created
by a [~new-expression] in which the [~new-initializer] is omitted ([#expr.new]),
or are called when the explicit type conversion syntax ([#expr.type.conv]) is
used.
[:zh_CN]
[%构造函数[!隐式调用～]]
默认构造函数将被隐式调用以创建具有静态、线程或自动存储期（[#basic.stc.static]，
[#basic.stc.thread]，[#basic.stc.auto]）且定义时没有初始化式（[#dcl.init]）的类
对象，被调用以创建由省略了 [~new-初始化式]的 [~new-表达式]（[#expr.new]）所创建
的具有动态存储期（[#basic.stc.dynamic]）的类对象，或者当使用显式类型转换语法
（[#expr.type.conv]）时被调用。

[:en]
A program is ill-formed if the default constructor for an object is implicitly
used and the constructor is not accessible ([#class.access]).
[:zh_CN]
如果隐式使用了对象的默认构造函数但该构造函数不可访问，则程序非良构
（[#class.access]）。

[para]
[enter:note]
[:en]
[%order of execution[!base class constructor]]
[%order of execution[!member constructor]]
[#class.base.init] describes the order in which constructors for base classes
and non-static data members are called and describes how arguments can be
specified for the calls to these constructors.
[:zh_CN]
[%执行顺序[!基类构造函数]]
[%执行顺序[!成员构造函数]]
[#class.base.init] 说明基类和非静态数据成员的构造函数的调用顺序，并说明如何指定
这些构造函数调用的实参。
[exit:note]
