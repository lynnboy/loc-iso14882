[section#class.default.ctor
    [:en] Default constructors
    [:zh_CN] 默认构造函数
]

[para]
[:en] [%constructor[!inheritance of]] [%constructor[!non-trivial]]
A [+:adj default[!constructor]] constructor for a class [`X] is a constructor of
class [`X] for which each parameter that is not a function parameter pack has a
default argument (including the case of a constructor with no parameters).
[:zh_CN] [%构造函数[!～的继承]] [%构造函数[!非平凡～]]
类 [`X] 的[+:adj 默认[!构造函数]]构造函数，是类 [`X] 的构造函数，其每个不是函数
形参包组的形参都带有默认实参（也包括没有形参的构造函数的情况）。

[:en] [%implicitly-declared default constructor]
If there is no user-declared constructor or constructor template for class [`X],
a non-explicit constructor having no parameters is implicitly declared as
defaulted ([#dcl.fct.def]).
[:zh_CN] [%隐式声明的默认构造函数]
如果类 [`X] 没有用户声明的构造函数或构造函数模板，则将隐式声明一个没有形参的非显式构造函数为
预置的（[#dcl.fct.def]）。

[:en] An implicitly-declared default constructor is an inline public member of
its class.
[:zh_CN] 隐式声明的默认构造函数是其类的内联的公开成员。

[para]
[:en] A defaulted default constructor for class [`X] is defined as deleted if
[:zh_CN] 如下情况下类 [`X] 的预置默认构造函数将被定义为弃置的：

[list]
[item]
[:en] any non-static data member with no default member initializer ([#class.mem])
is of reference type,
[:zh_CN] 其中有任何不带有默认成员初始化式（[#class.mem]）的非静态数据成员具有引用类型，

[item]
[:en] [`X] is a non-union class and any non-variant non-static data member of
const-qualified type (or possibly multidimensional array thereof) with no
[~brace-or-equal-initializer] is not const-default-constructible ([#dcl.init]),
[:zh_CN] 其中 [`X] 为非联合体类，且有任何具有 const 限定的类型（或其可能多维的数组），且
不带有[~花括号或等号初始化式]的非可变的非静态数据成员，不是可 const 默认构造的（[#dcl.init]），

[item]
[:en] any non-variant potentially constructed subobject, except for a non-static
data member with a [~brace-or-equal-initializer], has class type [`M]
(or possibly multidimensional array thereof) and overload resolution ([#over.match])
as applied to find [`M][=']s corresponding constructor does not result in a
usable candidate ([#over.match.general]), or
[:zh_CN] 其中有任何非变体的潜在构造的子对象（除了带有[~花括号或等号初始化式]的非静态数据
成员）具有类类型 [`M]（或其可能多维的数组），而查找 [`M] 的对应构造函数的重载决议（[#over.match]）
的结果并非是个可用候选（[#over.match.general]），或者

[item]
[:en] any potentially constructed subobject [$S] has class type [`M] (or possibly
multidimensional array thereof), [`M] has a destructor that is deleted or
inaccessible from the defaulted default constructor, and either [$S] is
non-variant or [$S] has a default member initializer.
[:zh_CN] 其中有任何潜在构造的子对象 [$S] 具有类类型 [`M]（或其可能多维的数组），[`M]
带有弃置的或从这个预置默认构造函数中无法访问的析构函数，且或者 [$S] 非变体，或者 [$S]
带有默认成员初始化式。
[list:end]

[para]
[:en] A default constructor for a class [`X] is [+trivial[%constructor[!default
[!trivial]]]] if it is not user-provided and if
[:zh_CN] 当类 [`X] 的默认构造函数不是由用户提供的，且满足如下条件时，其即为[+平凡的
[%构造函数[!默认～[!平凡～]]]]：

[list]
[item]
[:en] [`X] has no virtual functions ([#class.virtual]) and no virtual base
classes ([#class.mi]), and
[:zh_CN] [`X] 没有虚函数（[#class.virtual]）且没有虚基类（[#class.mi]），并且

[item]
[:en] no non-static data member of [`X] has a default member initializer
([#class.mem]), and
[:zh_CN] [`X] 没有带有默认成员初始化式（[#class.mem]）的非静态数据成员，并且

[item]
[:en] all the direct base classes of [`X] have trivial default constructors, and
[:zh_CN] [`X] 的所有直接基类都具有平凡的默认构造函数，并且

[item]
[:en] either [`X] is a union or for all the non-variant non-static data members
of [`X] that are of class type (or array thereof), each such class has a trivial
default constructor.
[:zh_CN] 或者 [`X] 是联合体，或者对于 [`X] 的所有类类型（或其数组）的非变体非静态数据成员，
每个类都具有平凡的默认构造函数。
[list:end]

[:en] Otherwise, the default constructor is [+non-trivial[%constructor[!default
[!non-trivial]]]].
[:zh_CN] 否则，该默认构造函数为[+非平凡的[%构造函数[!默认～[!非平凡～]]]]。

[para]
[:en] If a default constructor of a union-like class [`X] is trivial, then for
each union [`U] that is either [`X] or an anonymous union member of [`X],
if the first variant member, if any, of [`U] has implicit-lifetime type ([#basic.types.general]),
the default constructor of [`X] begins the lifetime of that member
if it is not the active member of its union.
[:zh_CN] 如果一个联合体式的类 [`X] 的默认构造函数是平凡的，则对于要么是 [`X]，要么是 [`X]
的匿名联合体成员的每个联合体 [`U]，如果 [`U] 的第一个变体成员（如果有）具有隐式生存期类型（[#basic.types.general]），
那么若它不是其联合体的活跃成员，则 [`X] 的默认构造函数将开始该成员的生存期。

[begin:note]
[:en] It is already the active member if [`U] was value-initialized.
[:zh_CN] 当 [`U] 被值初始化时，它已然是活跃成员。
[end:note]

[:en] Otherwise, an implicitly-defined ([#dcl.fct.def.default]) default constructor
performs the set of initializations of the class that would be performed by a
user-written default constructor for that class with no [~ctor-initializer] ([#class.base.init])
and an empty [~compound-statement].
[:zh_CN] 否则，隐式定义的（[#dcl.fct.def.default]）默认构造函数对该类实施一组初始化，
等同于由用户写出的没有[~构造函数初始化式]（[#class.base.init]）和空的[~复合语句]
的默认构造函数所实施的初始化。

[:en] If that user-written default constructor would be ill-formed, the program
is ill-formed.
[:zh_CN] 若由用户写出的默认构造函数是非良构的，则程序是非良构的。

[:en] If that user-written default constructor would be constexpr-suitable
([#dcl.constexpr]), the implicitly-defined default constructor is [`:key constexpr].
[:zh_CN] 若由用户写出的默认构造函数适于 constexpr（[#dcl.constexpr]），则隐式定义
的默认构造函数是 [`:key constexpr] 的。

[:en] Before the defaulted default constructor for a class is implicitly defined,
all the non-user-provided default constructors for its base classes and its
non-static data members are implicitly defined.
[:zh_CN] 在对某个类的预置默认构造函数进行隐式定义之前，它的所有基类和非静态数据成员
的非用户提供的默认构造函数都已经被隐式定义。

[begin:note]
[:en] An implicitly-declared default constructor has an exception specification
([#except.spec]).
[:zh_CN] 隐式声明的默认构造函数带有异常说明（[#except.spec]）。

[:en] An explicitly-defaulted definition might have an implicit exception
specification, see [#dcl.fct.def].
[:zh_CN] 显式预置定义式可能有隐含的异常说明，参见 [#dcl.fct.def]。
[end:note]

[para]
[begin:note]
[:en] [%constructor[!implicitly invoked]]
A default constructor is implicitly invoked to initialize a class object when no
initializer is specified ([#dcl.init.general]).
[:zh_CN] [%构造函数[!隐式调用～]]
没有指定初始化式的类对象进行初始化时将隐式调用默认构造函数（[#dcl.init.general]）。

[:en] Such a default constructor needs to be accessible ([#class.access]).
[:zh_CN] 要求这种构造函数可以访问（[#class.access]）。
[end:note]

[para]
[begin:note]
[:en]
[%order of execution[!base class constructor]]
[%order of execution[!member constructor]]
[#class.base.init] describes the order in which constructors for base classes
and non-static data members are called and describes how arguments can be
specified for the calls to these constructors.
[:zh_CN]
[%执行顺序[!基类构造函数]]
[%执行顺序[!成员构造函数]]
[#class.base.init] 说明基类和非静态数据成员的构造函数的调用顺序，并说明如何指定
这些构造函数调用的实参。
[end:note]
