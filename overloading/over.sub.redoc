[section#over.sub
    [:en] Subscripting
    [:zh_CN] 下标

[:en]
[%subscripting operator[!overloaded]]
[%overloading[!subscripting operator]]
[:zh_CN]
[%下标运算符[!重载～]]
[%重载[!～下标运算符]]
]

[para]
[:en]
A [+:adj subscripting operator function[%subscripting[!operator function]]]
is a function named [`[`:key operator]`[`]] that is a non-static member function
with exactly one parameter.
[:zh_CN]
[+:adj 下标运算符函数[%下标[!运算符函数]]]是名为 [`[`:key operator]`[`]] 的函数，
它是具有恰好一个形参的非静态成员函数。

[:en]
For an expression of the form
[:zh_CN]
对于如下形式的表达式
[syntax:explanation]
[~postfix-expression] [``[] [~expr-or-braced-init-list] [``]]
[syntax:end]
[:en@~]
the operator function is selected by overload resolution ([#over.match.oper]).
[:zh_CN@~]
通过重载决议选择运算符函数（[#over.match.oper]）。

[:en]
If a member function is selected, the expression is interpreted as
[:zh_CN]
如果选中了一个成员函数，则该表达式被解释为
[syntax:explanation]
[~postfix-expression] [`.] [`:key oeprator] [``[][``]] [`(] [~:opt expr-or-braced-init-list] [`)]
[syntax:end]

[para]
[begin:example]
[codeblock]
struct X {
  Z operator[](std::initializer_list<int>);
};
X x;
x[{1,2,3}] = 7;                 // [:en] OK: meaning [`x.[`operator]`[`]({1,2,3})] \
                                   [:zh_CN] OK：涵义为 [`x.[`operator]`[`]({1,2,3})]
int a[10];
a[{1,2,3}] = 7;                 // [:en] error: built-in subscript operator \
                                   [:zh_CN] 错误：内建下标运算符
[codeblock:end]
[end:example]
