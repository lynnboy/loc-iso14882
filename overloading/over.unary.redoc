[section#over.unary
    [:en] Unary operators
    [:zh_CN] 一元运算符

[:en]
[%unary operator[!overloaded]]
[%overloading[!unary operator]]
[:zh_CN]
[%一元运算符[!重载～]]
[%重载[!～一元运算符]]
]

[para]
[:en]
A [+:adj prefix unary operator function[%prefix unary [!operator function]]] is
a function named [`[`:key operator]@] for a prefix [~unary-operator] [`@]
([#expr.unary.op]) that is either a non-static member function ([#class.mfct])
with no parameters or a non-member function with one parameter.
[:zh_CN]
对于前置[~一元运算符] [`@]，[+:adj 前置一元运算符函数[%前置一元[!运算符函数]]]是
名为 [`[`:key operator]@] 的函数，且它或者为不带形参的非静态成员函数
（[#class.mfct]），或者为带有一个形参的非成员函数。

[:en]
[%unary operator[!interpretation of]]
For a [~unary-expression] of the form [`@ [~cast-expression]], the operator
function is selected by overload resolution ([#over.match.oper]).
[:zh_CN]
[%一元运算符[!～的解释]]
对于形式为 [`@ [~强制转换表达式]]的[~一元表达式]，通过重载决议选择运算符函数
（[#over.match.oper]）。

[:en]
If a member function is selected, the expression is interpreted as
[:zh_CN]
如果选中了一个成员函数，则表达式被解释为
[syntax:explanation]
[~cast-expression] [`.] [`:key operator] [`@] [`(][`)]
[syntax:end]

[:en]
Otherwise, if a non-member function is selected, the expression is interpreted
as
[:zh_CN]
否则，如果选中了一个非成员函数，则表达式被解释为
[syntax:explanation]
[`:key operator] [`@] [`(] [~cast-expression] [`)]
[syntax:end]

[begin:note]
[:en]
The operators [`++] and [`--] ([#expr.pre.incr]) are described in [#over.inc].
[:zh_CN]
[#over.inc] 中说明运算符 [`++] 和 [`--]（[#expr.pre.incr]）。
[end:note]

[para]
[:en]
The unary and binary forms of the same operator are considered to have the same
name.
[:zh_CN]
相同运算符的一元和二元形式被认为具有相同的名字。

[begin:note]
[:en]
Consequently, a unary operator can hide a binary operator from an enclosing
scope, and vice versa.
[:zh_CN]
因此，一元运算符可以隐藏外围作用域中的二元运算符，反之亦然。
[end:note]
