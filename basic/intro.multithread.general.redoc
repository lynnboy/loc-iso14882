[section#intro.multithread.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] A [+thread of execution] (also known as a [+thread]) is a single flow of
control within a program, including the initial invocation of a specific top-level
function, and recursively including every function invocation subsequently
executed by the thread.
[:zh_CN] [+执行线程]（又称[+线程]）是程序中单独的控制流，它包括对某个特定的顶层函数的
起始调用，以及递归地包括该线程随后所执行的每个函数调用。

[begin:note]
[:en] When one thread creates another, the initial call to the top-level function
of the new thread is executed by the new thread, not by the creating thread.
[:zh_CN] 当一个线程创建另一个线程时，对新线程的顶层函数的起始调用，是被新线程而不是
创建它的线程所执行的。
[end:note]

[:en] Every thread in a program can potentially use every object and function in
a program.[#:fn]
[:zh_CN] 程序中的每个线程均潜在地可以使用程序中的每个对象和函数[#:fn]。

[note:foot]
[:en] An object with automatic or thread storage duration ([#basic.stc]) is
associated with one specific thread, and can be accessed by a different thread
only indirectly through a pointer or reference ([#basic.compound]).
[:zh_CN] 具有自动或线程存储期（[#basic.stc]）的对象与某个特定线程相关联，而其他线程
仅能通过指针或引用（[#basic.compound]）间接地进行访问。
[note:end]

[:en] Under a hosted implementation, a [=Cpp] program can have more than one
thread running concurrently.
[:zh_CN] 在宿主式实现中，[=Cpp] 程序可以具有多个同时运行的线程。

[:en] The execution of each thread proceeds as defined by the remainder of this document.
[:zh_CN] 每个线程都按照本文档其余部分的定义来执行。

[:en] The execution of the entire program consists of an execution of all of its threads.
[:zh_CN] 整个程序的执行则由它的所有线程的执行构成。

[begin:note]
[:en] Usually the execution can be viewed as an interleaving of all its threads.
[:zh_CN] 通常可以将其执行过程视为它的所有线程的交错执行。

[:en] However, some kinds of atomic operations, for example, allow executions
inconsistent with a simple interleaving, as described below.
[:zh_CN] 然而，（比如）某些种类的原子性操作，允许其执行并不符合单纯的交错执行，如下所述。
[end:note]

[:en] [%implementation[!freestanding]]
Under a freestanding implementation, it is [?impldef number of threads in a
program under a freestanding implementation] whether a program can have more
than one thread of execution.
[:zh_CN] [%实现[!自立式]]
在自立式实现中，程序是否可以具有多个执行线程是[?impldef 自立式实现下程序中的线程数]。

[para]
[:en] For a signal handler that is not executed as a result of a call to the
[`std::raise] function, it is unspecified which thread of execution contains the
signal handler invocation.
[:zh_CN] 若信号处理函数的执行并非是由对 [`std::raise] 函数的调用所造成的，则由哪个
执行线程包含对信号处理函数的调用是未指明的。
