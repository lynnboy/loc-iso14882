[section#class.qual
    [:en] Class members
    [:zh_CN] 类成员
]

[:en]
[%lookup[!class member]]
[:zh_CN]
[%查找[!类成员]]

[para]
[:en]
In a lookup for a qualified name [$N] whose lookup context is a class [$C]
in which function names are not ignored,[#:fn]
[:zh_CN]
对查找语境为某个类 [$C] 的限定名 [$N] 进行的不忽略函数名的查找中[#:fn]，

[note:foot]
[:en]
Lookups in which function names are ignored include names appearing in a
[~nested-name-specifier], an [~elaborated-type-specifier], or a
[~base-specifier].
[:zh_CN]
忽略函数名的查找，包括[~嵌套名说明符]，[~详述类型说明符]，或者[~基类说明符]中所
出现的名字。
[note:end]

[list]
[item]
[:en@~]
if the search finds the injected-class-name of [`C] ([#class.pre]), or
[:zh_CN@~]
若其搜索找到了 [`C] 的注入类名（[#class.pre]），或者

[item]
[:en@~]
if [$N] is dependent and is the terminal name of a [~using-declarator]
([#namespace.udecl]) that names a constructor,
[:zh_CN@~]
若 [$N] 待决且为某个指名构造函数的 [~using-声明符]的终端名（[#namespace.udecl]），
[list:end]

[:en@~]
[$N] is instead considered to name the constructor of class [`C].
[:zh_CN@~]
则 [$N] 被当作指名类 [`C] 的构造函数名。

[:en]
Such a constructor name shall be used only in the [~declarator-id] of a
(friend) declaration of a constructor or in a [~using-declaration].
[:zh_CN]
只能在构造函数的（友元）声明式的[~声明符标识]中，或者在 [~using-声明式]中使用
这种构造函数名。

[begin:example]
[codeblock]
struct A { A(); };
struct B: public A { B(); };

A::A() { }
B::B() { }

B::A ba;            // [:en] object of type [`A] \
                       [:zh_CN] [`A] 类型的对象
A::A a;             // [:en] error: [`A::A] is not a type name \
                       [:zh_CN] 错误：[`A::A] 不是类型名
struct A::A a2;     // [:en] object of type [`A] \
                       [:zh_CN] [`A] 类型的对象
[codeblock:end]
[end:example]
