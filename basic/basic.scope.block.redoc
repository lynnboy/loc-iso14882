[section#basic.scope.block
    [:en] Block scope
    [:zh_CN] 块作用域
]

[:en]
[%local scope [%scope[!block]]]
[:zh_CN]
[%局部作用域 [%作用域[!块]]]

[para]
[:en]
Each
[:zh_CN]
以下各项

[list]
[item]
[:en@~]
selection or iteration statement ([#stmt.select], [#stmt.iter]),
[:zh_CN@~]
选择或循环语句（[#stmt.select]，[#stmt.iter]），
[item]
[:en@~]
substatement of such a statement,
[:zh_CN@~]
这种语句的子语句，
[item]
[:en@~]
[%scope[![~handler]]] [~handler] ([#except.pre]), or
[:zh_CN@~]
[%作用域[![~处理器]]] [~处理器]（[#except.pre]），或者
[item]
[:en@~]
compound statement ([#stmt.block]) that is not the [~compound-statement] of a
[~handler]
[:zh_CN@~]
并非[~处理器]的[~复合语句]的复合语句（[#stmt.block]）
[list:end]

[:en@~]
introduces a [+:adj block[!scope]] that includes that statement or [~handler].
[:zh_CN@~]
均引入一个包含该语句或[~处理器]的[+:adj 块[!作用域]]。

[begin:note]
[:en]
A substatement that is also a block has only one scope.
[:zh_CN]
同样是块语句的子语句仅有一个作用域。
[end:note]

[:en]
A variable that belongs to a block scope is a [+block variable].
[:zh_CN]
属于某个块作用域的变量是[+块变量]。

[begin:example]
[codeblock]
int i = 42;
int a[10];

for (int i = 0; i < 10; i++)
  a[i] = i;

int j = i;          // [`j = 42]
[codeblock:end]
[end:example]

[para]
[:en]
If a declaration that is not a name-independent declaration and whose target
scope is the block scope [$S] of a
[:zh_CN]
如果目标作用域为

[list]
[item]
[:en@~]
[~compound-statement] of a [~lambda-expression], [~function-body], or
[~function-try-block],
[:zh_CN@~]
[~lambda-表达式]，[~函数体]，或[~函数-try-块]的[~复合语句]，或
[item]
[:en@~]
substatement of a selection or iteration statement that is not itself
a selection or iteration statement, or
[:zh_CN@~]
选择或循环语句的子语句，其自身并非选择或循环语句，或
[item]
[:en@~]
[~handler] of a [~function-try-block]
[:zh_CN@~]
[~函数-try-块]的[~处理器]
[list:end]
[:en@~]
potentially conflicts with a declaration whose target scope is the parent scope
of [$S], the program is ill-formed.
[:zh_CN@~]
的块作用域 [$S] 的并非名字独立的声明式，与某个目标作用域为 [$S] 的父作用域的
声明式潜在冲突，则程序非良构。

[begin:example]
[codeblock]
if (int x = f()) {
  int x;            // [:en] error: redeclaration of [`x] \
                    [:zh_CN] 错误：[`x] 的重复声明
}
else {
  int x;            // [:en] error: redeclaration of [`x] \
                    [:zh_CN] 错误：[`x] 的重复声明
}
[codeblock:end]
[end:example]
