[section#basic.scope.param
    [:en] Function parameter scope
    [:zh_CN] 函数形参作用域
]

[para]
[:en]
[%scope[!function parameter]]
[%scope[!function prototype][%scope[!function parameter]]]
[%parameter[!scope of]]
A function parameter (including one appearing in a [~lambda-declarator]) or
function-local predefined variable ([#dcl.fct.def]) has
[+function parameter scope].
[:zh_CN]
[%作用域[!函数形参～]]
[%作用域[!函数原型～][%作用域[!函数形参～]]]
[%形参[!～的作用域]]
函数形参（包括出现在[~lambda-声明符]中的那些）或函数局部预定义变量
（[#dcl.fct.def]）具有[+函数形参作用域]。

[:en]
The potential scope of a parameter or function-local predefined variable begins
at its point of declaration.
[:zh_CN]
形参或函数局部预定义变量的潜在作用域开始于其声明点。

[:en]
If the nearest enclosing function declarator is not the declarator of a function
definition, the potential scope ends at the end of that function declarator.
[:zh_CN]
如果最内层外围函数声明符并非函数定义式的声明符，则其潜在作用域在该函数声明符的
末尾处结束。

[:en]
Otherwise, if the function has a [~function-try-block] the potential scope ends
at the end of the last associated handler.
[:zh_CN]
否则，若函数具有[~函数-try-块]，则其潜在作用域结束于其所关联的最后一个处理器的
末尾。

[:en]
Otherwise the potential scope ends at the end of the outermost block of the
function definition.
[:zh_CN]
否则，其潜在作用域结束于函数定义式的最外层语句块的末尾。

[:en]
A parameter name shall not be redeclared in the outermost block of the
function definition nor in the outermost block of any handler associated with a
[~function-try-block].
[:zh_CN]
在函数定义式的最外层语句块，或在[~函数-try-块]所关联的任何处理器的最外层语句块中，
都不能重复声明任何形参名。
