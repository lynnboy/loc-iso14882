[section#basic.scope.contract
    [:en] Contract-assertion scope
    [:zh_CN] 契约断言作用域
]

[para]
[:en] Each contract assertion ([#basic.contract]) [$C] introduces a
[+:adj contract-assertion[!scope]] that includes [$C].
[:zh_CN] 每个契约断言（[#basic.contract]）[$C] 均引入一个包含 [$C] 的[+:adj 契约断言[!作用域]]。

[para]
[:en] If a [~result-name-introducer] ([#dcl.contract.res]) that is not
name-independent ([#basic.scope.scope]) and whose enclosing postcondition
assertion is associated with a function [`F] potentially conflicts with
a declaration whose target scope is
[:zh_CN] 如果某个[~结果名引入符]（[#dcl.contract.res]）不是名字独立的（[#basic.scope.scope]），
且其外围后条件断言与某个函数 [`F] 相关联，而该函数可能与某个目标作用域为

[list]
[item]
[:en@~] the function parameter scope of [`F] or
[:zh_CN@~] [`F] 的函数形参作用域，或
[item]
[:en@~] if associated with a [~lambda-declarator], the nearest enclosing lambda
scope of the precondition assertion ([#expr.prim.lambda]),
[:zh_CN@~] 当与 [~lambda-声明符]相关联时，为前条件断言（[#expr.prim.lambda]）的最近
外围 lambda 作用域
[list:end]

[:en@~] the program is ill-formed.
[:zh_CN@~] 的声明式相冲突，则程序非良构。
