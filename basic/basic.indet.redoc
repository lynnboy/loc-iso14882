[section#basic.indet
    [:en] Indeterminate values
    [:zh_CN] 不确定的值
]

[para]
[:en]
[%value[!indeterminate]]
[%indeterminate value]
When storage for an object with automatic or dynamic storage duration
is obtained, the object has an [+:adj indeterminate[!value]]
and if no initialization is performed for the object, that object retains an
indeterminate value until that value is replaced ([#expr.ass]).
[:zh_CN]
[%值[!不确定～]]
[%不确定值]
具有自动或动态存储期的对象获取到存储时，该对象具有[+:adj 不确定[!值]]，而若不为
该对象进行任何初始化，则该对象维持一个不确定值，直到该值被替换（[#expr.ass]）。

[begin:note]
[:en]
Objects with static or thread storage duration are zero-initialized,
see [#basic.start.static].
[:zh_CN]
具有静态或线程存储期的对象进行零初始化，参见 [#basic.start.static]。
[end:note]

[para]
[:en]
If an indeterminate value is produced by an evaluation, the behavior is
undefined except in the following cases:
[:zh_CN]
一旦某次求值产生了一个不确定的值，则除以下情况之外其行为都是未定义的：

[list]
[item]
[:en] If an indeterminate value of unsigned ordinary character type
([#basic.fundamental]) or [`std::byte] type ([#cstddef.syn]) is produced by the
evaluation of:
[:zh_CN] 如果无符号的普通字符类型（[#basic.fundamental]）或 [`std::byte] 类型
（[#cstddef.syn]）的不确定的值是由以下各种求值所产生的：

[list]
[item]
[:en@~] the second or third operand of a conditional expression ([#expr.cond]),
[:zh_CN@~] 条件表达式的第二或第三个操作数（[#expr.cond]），
[item]
[:en@~] the right operand of a comma expression ([#expr.comma]),
[:zh_CN@~] 逗号表达式的第二个操作数（[#expr.comma]），
[item]
[:en@~] the operand of a cast or conversion ([#conv.integral],
[#expr.type.conv], [#expr.static.cast], [#expr.cast]) to an unsigned ordinary
character type or [`std::byte] type ([#cstddef.syn]), or
[:zh_CN@~] 向无符号普通字符类型或 [`std::byte] 类型（[#cstddef.syn]）进行的转型
或转换（[#conv.integral]，[#expr.type.conv]，[#expr.static.cast]，[#expr.cast]）
的操作数，或者
[item]
[:en@~] a discarded-value expression ([#expr.context]),
[:zh_CN@~] 弃值表达式（[#expr.context]），
[list:end]

[:en@~] then the result of the operation is an indeterminate value.
[:zh_CN@~] 则该运算的结果是不确定的值。

[item]
[:en]
If an indeterminate value of unsigned ordinary character type or [`std::byte]
type is produced by the evaluation of the right operand of a simple assignment
operator ([#expr.ass]) whose first operand is an lvalue of unsigned ordinary
character type or [`std::byte] type, an indeterminate value replaces the value
of the object referred to by the left operand.
[:zh_CN]
如果无符号的普通字符类型或 [`std::byte] 类型的不确定的值是由简单赋值运算符
（[#expr.ass]）的右操作数的求值所产生的，且第一个操作数是无符号的普通字符类型或
[`std::byte] 类型的左值，则该不确定的值就取代由这个操作数所指代的对象的值。

[item]
[:en]
If an indeterminate value of unsigned ordinary character type is produced by the
evaluation of the initialization expression when initializing an object of
unsigned ordinary character type, that object is initialized to an indeterminate
value.
[:zh_CN]
如果无符号的普通字符类型的不确定的值是在对某个无符号的普通字符类型的对象进行
初始化时由初始化表达式的求值所产生的，则该对象被初始化为不确定的值。

[item]
[:en]
If an indeterminate value of unsigned ordinary character type or [`std::byte]
type is produced by the evaluation of the initialization expression when
initializing an object of [`std::byte] type, that object is initialized to an
indeterminate value.
[:zh_CN]
如果无符号普通字符类型或 [`std::byte] 类型的不确定的值是在对某个 [`std::byte]
类型的对象进行初始化时由初始化表达式的求值所产生的，则该对象被初始化为不确定的值。
[list:end]

[begin:example]
[codeblock]
int f(bool b) {
  unsigned char c;
  unsigned char d = c;          // [:en] OK, [`d] has an indeterminate value \
                                [:zh_CN] OK，[`d] 具有不确定的值
  int e = d;                    // [:en] undefined behavior \
                                [:zh_CN] 未定义行为
  return b ? d : 0;             // [:en] undefined behavior if [`b] is [`true] \
                                [:zh_CN] 若 [`b] 为 [`true] 则为未定义行为
}
[codeblock:end]
[end:example]
