[section#basic.lookup
    [:en] Name lookup
    [:zh_CN] 名字查找

[%:begin#scope.namelookup.and
    [:en] scope [!name lookup and]
    [:zh_CN] 作用域 [!名字查找与～]
]
[%:begin#lookup.name
    [:en] lookup [!name]
    [:zh_CN] 查找 [!名字～]
]
]

[para]
[:en]
The name lookup rules apply uniformly to all names (including [~typedef-name]s
([#dcl.typedef]), [~namespace-name]s ([#basic.namespace]), and [~class-name]s
([#class.name])) wherever the grammar allows such names in the context discussed
by a particular rule.
[:zh_CN]
名字查找规则统一地应用于所有名字（包括 [~typedef-名]（[#dcl.typedef]），[~命名
空间名]（[#basic.namespace]），以及[~类名]（[#class.name]）等），只要根据特定
规则所考察的语境中这种名字被文法所接受。

[:en]
Name lookup associates the use of a name with a set of declarations
([#basic.def]) of that name.
[:zh_CN]
名字查找将名字的运用和该名字的一组声明式（[#basic.def]）关联起来。

[:en]
The declarations found by name lookup shall either all denote the same entity
or shall all denote functions or function templates; in the latter case, the
declarations are said to form a set of overloaded functions ([#over.load]).
[:zh_CN]
名字查找所找到的各个声明式，要么应当都代表了相同的实体，要么应当都代表的是函数
或函数模板；后一种情况中，称这些声明式构成一个重载函数集合（[#over.load]）。

[:en]
Overload resolution ([#over.match]) takes place after name lookup has succeeded.
[:zh_CN]
在名字查找成功后进行重载决议（[#over.match]）。

[:en]
The access rules ([#class.access]) are considered only once name lookup and
function overload resolution (if applicable) have succeeded.
[:zh_CN]
仅当名字查找和函数重载决议（如果适用）成功后，才考察访问规则（[#class.access]）。

[:en]
Only after name lookup, function overload resolution (if applicable) and access
checking have succeeded are the semantic properties introduced by the name[=']s
declaration and its reachable ([#module.reach]) redeclarations used further in
expression processing ([#expr]).
[:zh_CN]
仅当名字查找、函数重载决议（如果适用）和访问检查都成功后，才能在表达式的处理过程
中进一步使用由该名字的声明式及其可达的（[#module.reach]）重复声明式所引入的各项
语义性质（[#expr]）。

[para]
[:en]
A name [=lq]looked up in the context of an expression[=rq] is looked up in the
scope where the expression is found.
[:zh_CN]
“在某表达式的语境中查找”一个名字，即在出现该表达式的作用域中进行查找。

[para]
[:en]
The injected-class-name of a class ([#class]) is also considered to be a member
of that class for the purposes of name hiding and lookup.
[:zh_CN]
当进行名字隐藏和查找时，类的注入类名（[#class]）同样被当作该类的成员。

[para]
[begin:note]
[:en]
[#basic.link] discusses linkage issues.
[:zh_CN]
[#basic.link] 讨论了连接问题。

[:en]
The notions of scope, point of declaration and name hiding are discussed in
[#basic.scope].
[:zh_CN]
作用域、声明点和名字隐藏在 [#basic.scope] 中讨论。
[end:note]

[include basic.lookup.unqual]

[include basic.lookup.argdep]

[include basic.lookup.qual]

[include basic.lookup.elab]

[include basic.lookup.classref]

[include basic.lookup.udir]

[%:end#lookup.name]
[%:end#scope.namelookup.and]
