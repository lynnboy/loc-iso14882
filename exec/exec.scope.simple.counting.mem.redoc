[section#exec.scope.simple.counting.mem
    [:en] Members
    [:zh_CN] 成员
]

[%@lib@member get_token[!execution::simple_counting_scope]]
[codeblock:declaration]
token get_token() noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] An object [`t] of type [`simple_counting_scope::token] such that
[`t.[*scope] == this] is [`true].
[:zh_CN] 一个 [`simple_counting_scope::token] 类型的对象 [`t]，使得
[`t.[*scope] == this] 为 [`true]。
[div:end]

[%@lib@member close[!execution::simple_counting_scope]]
[codeblock:declaration]
void close() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] If [*state] is
[:zh_CN] 如果 [*state] 为
[list]
[item]
[:en@~] [*unused], then changes [*state] to [*unused-and-closed];
[:zh_CN@~] [*unused]，则将 [*state] 改为 [*unused-and-closed]；
[item]
[:en@~] [*open], then changes [*state] to [*closed];
[:zh_CN@~] [*open]，则将 [*state] 改为 [*closed]；
[item]
[:en@~] [*open-and-joining], then changes [*state] to [*closed-and-joining];
[:zh_CN@~] [*open-and-joining]，则将 [*state] 改为 [*closed-and-joining]；
[item]
[:en@~] otherwise, no effects.
[:zh_CN@~] 否则，没有效果。
[list:end]

[para:ensures]
[:en] Any subsequent call to [`[*try-associate]()] on [`*this] returns [`false].
[:zh_CN] 任何 [`*this] 上对 [`[*try-associate]()] 的后继调用都返回 [`false]。
[div:end]

[%@lib@member join[!execution::simple_counting_scope]]
[codeblock:declaration]
[[redoc("`:c>")]]sender auto join() noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`[*make-sender]([*scope-join-t](), this)].
[:zh_CN] [`[*make-sender]([*scope-join-t](), this)]。
[div:end]

[%@lib@member [*try-associate][!execution::simple_counting_scope]]
[codeblock:declaration]
bool [[redoc("*>")]]try-associate() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] If [*count] is equal to [`max_associations], then no effects.
[:zh_CN] 如果 [*count] 等于 [`max_associations]，则没有效果。

[:en] Otherwise, if [*state] is
[:zh_CN] 否则，如果 [*state] 是
[list]
[item]
[:en@~] [*unused], then increments [*count] and changes [*state] to [*open];
[:zh_CN@~] [*unused]，则增加 [*count] 并将 [*state] 改为 [*open]；
[item]
[:en@~] [*open] or [*open-and-joining], then increments [*count];
[:zh_CN@~] [*open] 或 [*open-and-joining]，则增加 [*count]；
[item]
[:en@~] otherwise, no effects.
[:zh_CN@~] 否则，没有效果。
[list:end]

[para:returns]
[:en] [`true] if [*count] was incremented, [`false] otherwise.
[:zh_CN] 如果增加了 [*count] 则返回 [`true]，否则返回 [`false]。
[div:end]

[%@lib@member [*disassociate][!execution::simple_counting_scope]]
[codeblock:declaration]
void [[redoc("*>")]]disassociate() noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [*count] is greater than zero.
[:zh_CN] [*count] 大于零。

[para:effects]
[:en] Decrements [*count].
[:zh_CN] 减小 [*count]。

[:en] If [*count] is zero after decrementing and [*state] is [*open-and-joining]
or [*closed-and-joining], changes [*state] to [*joined] and
calls [`[*complete]()] on all objects registered with [`*this].
[:zh_CN] 如果 [*count] 减小后为零且 [*state] 为 [*open-and-joining] 或
[*closed-and-joining]，则将 [*state] 改为 [*joined]，并在 [`*this] 上注册的所有对象
上调用 [`[*complete]()]。

[begin:note]
[:en] Calling [`[*complete]()] on any registered object can cause [`*this] to be destroyed.
[:zh_CN] 在任意注册对象上调用 [`[*complete]()] 可能会导致 [`*this] 被销毁。
[end:note]
[list:end]

[%@lib@member [*start-join-sender][!execution::simple_counting_scope]]
[codeblock:declaration]
template<class State>
  bool [[redoc("*>")]]start-join-sender(State& st) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] If [*state] is
[:zh_CN] 如果 [*state] 是
[list]
[item]
[:en@~] [*unused], [*unused-and-closed], or [*joined], then changes [*state] to
[*joined] and returns [`true];
[:zh_CN@~] [*unused]、[*unused-and-closed] 或 [*joined]，则将 [*state] 改为
[*joined] 并返回 [`true]；
[item]
[:en@~] [*open] or [*open-and-joining], then changes [*state] to [*open-and-joining],
registers [`st] with [`*this] and returns [`false];
[:zh_CN@~] [*open] 或 [*open-and-joining]，则将 [*state] 改为 [*open-and-joining]，
将 [`st] 注册到 [`*this] 并返回 [`false]；
[item]
[:en@~] [*closed] or [*closed-and-joining], then changes [*state] to
[*closed-and-joining], registers [`st] with [`*this] and returns [`false];
[:zh_CN@~] [*closed] 或 [*closed-and-joining]，则将 [*state] 改为
[*closed-and-joining]，将 [`st] 注册到 [`*this] 并返回 [`false]；
[list:end]
[div:end]
