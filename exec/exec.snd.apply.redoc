[section#exec.snd.apply
    [`execution::apply_sender]
]

[%@lib apply_sender]
[codeblock:declaration]
namespace std::execution {
  template<class Domain, class Tag, [[redoc("`:c>")]]sender Sndr, class... Args>
    constexpr decltype(auto) apply_sender(Domain dom, Tag, Sndr&& sndr, Args&&... args)
      noexcept([[redoc("[=seebelow]")]]);
}
[codeblock:end]

[div:description]
[para]
[:en] Let [$e] be the expression
[:zh_CN] 若表达式
[codeblock]
dom.apply_sender(Tag(), std::forward<Sndr>(sndr), std::forward<Args>(args)...)
[codeblock:end]
[:en@~] if that expression is well-formed; otherwise,
[:zh_CN] 良构，则令 [$e] 为该表达式；否则令其为
[codeblock]
default_domain().apply_sender(Tag(), std::forward<Sndr>(sndr), std::forward<Args>(args)...)
[codeblock:end]

[para:constraints]
[:en] The expression [$e] is well-formed.
[:zh_CN] 表达式 [$e] 良构。

[para:returns]
[:en] [$e].
[:zh_CN] [$e]。

[para:remarks]
[:en] The exception specification is equivalent to [`noexcept([$e])].
[:zh_CN] 异常说明等价于 [`noexcept([$e])]。
[div:end]
