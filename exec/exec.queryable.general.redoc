[section#exec.queryable.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] A [+:adj queryable[!object]] is a read-only collection of key/value pair
where each key is a customization point object known as a [+query object].
[:zh_CN] [+:adj 可查询[!对象]]是键值对的只读集合，其中每个键都是一个被称为
[+查询对象]的定制化点对象。

[:en] A [+query] is an invocation of a query object with a queryable object as
its first argument and a (possibly empty) set of additional arguments.
[:zh_CN] [+查询]是，以某个可查询对象为首个实参和（可能为空的）一组额外实参，对某个
查询对象的调用。

[:en] A query imposes syntactic and semantic requirements on its invocations.
[:zh_CN] 查询对其调用的语法和语义有所要求。

[para]
[:en] Let [`q] be a query object, let [`args] be a (possibly empty) pack of
subexpressions, let [`env] be a subexpression that refers to a queryable object
[`o] of type [`O], and let [`cenv] be a subexpression referring to [`o] such
that [`decltype((cenv))] is [`const O&].
[:zh_CN] 令 [`q] 为查询对象，令 [`args] 为（可能为空的）子表达式包组，令 [`env]
为指代某个 [`O] 类型的可查询对象 [`o] 的子表达式，并令 [`cenv] 为指代 [`o] 的
子表达式，使得 [`decltype((cenv))] 为 [`const O&]。

[:en] The expression [`q(env, args...)] is equal to ([#concepts.equality])
the expression [`q(cenv, args...)].
[:zh_CN] 表达式 [`q(env, args...)] 等于（[#concepts.equality]）表达式
[`q(cenv, args...)]。

[para]
[:en] The type of a query expression cannot be [`void].
[:zh_CN] 查询表达式的类型不能为 [`void]。

[para]
[:en] The expression [`q(env, args...)] is equality-preserving ([#concepts.equality])
and does not modify the query object or the arguments.
[:zh_CN] 表达式 [`q(env, args...)] 维持相等性（[#concepts.equality]），且不会
修改查询对象或各实参。

[para]
[:en] If the expression [`env.query(q, args...)] is well-formed,
then it is expression-equivalent to [`q(env, args...)].
[:zh_CN] 如果表达式 [`env.query(q, args...)] 良构，那么它按表达式等价于
[`q(env, args...)]。

[para]
[:en] Unless otherwise specified,
the result of a query is valid as long as the queryable object is valid.
[:zh_CN] 除非另行规定，否则只要可查询对象有效查询的结果就有效。
