[section#exec.queryable.concept
    [:en] [`queryable] concept
    [:zh_CN] [`queryable] 概念
]

[codeblock:synopsis]
namespace std {
  template<class T>
    concept [[redoc("*:c@def>")]]queryable = [[redoc("`:c>")]]destructible<T>;   // [=expos]
}
[codeblock:end]

[para]
[:en] The exposition-only [*:c queryable] concept specifies
the constraints on the types of queryable objects.
[:zh_CN] 仅用于阐释的概念 [*:c queryable] 指定针对可调用对象类型的约束。

[para]
[:en] Let [`env] be an object of type [`Env].
[:zh_CN] 令 [`env] 为 [`Env] 类型的对象。

[para]
[:en] The type [`Env] models queryable if for each callable object [`q] and
a pack of subexpressions [`args], if [`requires { q(env, args...) }] is [`true]
then [`q(env, args...)] meets any semantic requirements imposed by [`q].
[:zh_CN] 如果对于每个可调用对象 [`q] 和子表达式包组 [`args]，只要
[`requires { q(env, args...) }] 为 [`true] 则 [`q(env, args...)] 就满足 [`q]
蕴含的语义要求，那么类型 [`Env] 构成 [*:c queryable]。
