[section#stmt.label
    [:en] Labeled statement
    [:zh_CN] 带标号语句
[:en] [%statement[!labeled]]
[:zh_CN] [%语句[!带标号～]]
]

[para]
[:en]
[%statement[!labeled]]
[%[`:][!label specifier]]
A statement can be labeled.
[:zh_CN]
[%语句[!带标号～]]
[%[`:][!标号说明符]]
语句可以带有标号。

[syntax]
[rule labeled-statement [:zh_CN] 带标号语句 ]
    [| [~:opt attribute-specifier-seq] identifier [`:] statement ]
    [| [~:opt attribute-specifier-seq] [`:key case] constant-expression [`:] statement ]
    [| [~:opt attribute-specifier-seq] [`:key default] [`:] statement ]
[rule:end]
[syntax:end]

[:en]
The optional [~attribute-specifier-seq] appertains to the label.
[:zh_CN]
可选的[~特性说明符序列]属于标号。

[:en]
The only use of a label with an [~identifier] is as the target of a
[%statement[![`goto]]] [`goto].
[:zh_CN]
带有[~标识符]的标号仅能用作 [%语句[![`goto]]] [`goto] 的目标。

[:en]
[%label[!scope of]]
No two labels in a function shall have the same [~identifier].
[:zh_CN]
[%标号[!～的作用域]]
一个函数中不能有两个具有相同[~标识符]的标号。

[:en]
A label can be used in a [`goto] statement before its introduction by a
[~labeled-statement].
[:zh_CN]
在[~带标号语句]引入一个标号之前，就可以在 [`goto] 语句中使用它。

[:en]
[%name space[!label]]
Labels have their own name space and do not interfere with other identifiers.
[:zh_CN]
[%命名空间[!标号的～]]
标号有它自己的命名空间，并不与其他标识符相干扰。

[begin:note]
[:en]
A label can have the same name as another declaration in the same scope or a
[~template-parameter] from an enclosing scope.
[:zh_CN]
标号可以和相同作用域中的其他声明，或者其外围作用域的某个[~模板形参]具有相同的名字。

[:en]
Unqualified name lookup ([#basic.lookup.unqual]) ignores labels.
[:zh_CN]
无限定名查找（[#basic.lookup.unqual]）忽略标号。
[end:note]

[para]
[:en]
[%label[![`case]]]
[%label[![`default]]]
Case labels and default labels shall occur only in [`:key switch] statements.
[:zh_CN]
[%标号[![`case]]]
[%标号[![`default]]]
case 标号和 default 标号只能出现在 [`:key switch] 语句中。
