[section#stmt.iter.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en]
Iteration statements specify looping.
[:zh_CN]
循环语句指定循环。

[:en]
[%statement[![`while]]]
[%statement[![`do]]]
[%statement[![`for]]]
[:zh_CN]
[%语句[![`while]]]
[%语句[![`do]]]
[%语句[![`for]]]

[syntax]
[rule iteration-statement [:zh_CN] 循环语句 ]
    [| [`:key while] [`(] condition [`)] statement ]
    [| [`:key do] statement [`:key while] [`(] expression [`)] [`;] ]
    [| [`:key for] [`(] init-statement [~:opt condition] [`;] [~:opt expression] [`)] statement ]
    [| [`:key for] [`(] [~:opt init-statement] for-range-declaration [`:] for-range-initializer [`)] statement ]
[rule:end]

[rule for-range-declaration [:zh_CN] for-范围声明式 ]
    [| [~:opt attribute-specifier-seq] decl-specifier-seq declarator ]
    [| [~:opt attribute-specifier-seq] decl-specifier-seq [~:opt ref-qualifier]
        [``[] identifier-list [``]] ]
[rule:end]

[rule for-range-initializer [:zh_CN] for-范围初始化式 ]
    [| expr-or-braced-init-list ]
[rule:end]
[syntax:end]

[:en]
See [#dcl.meaning] for the optional [~attribute-specifier-seq] in a
[~for-range-declaration].
[:zh_CN]
关于[~for-范围声明式]中的[~特性说明符序列]，参见 [#dcl.meaning]。

[begin:note]
[:en]
A [~init-statement] ends with a semicolon.
[:zh_CN]
[~初始化语句]以分号结尾。
[end:note]

[para]
[:en]
[%scope[![~iteration-statement]]]
The substatement in an [~iteration-statement] implicitly defines a block scope
([#basic.scope]) which is entered and exited each time through the loop.
[:zh_CN]
[%作用域[![~循环语句]的～]]
[~循环语句]中的子语句隐式定义了一个块作用域（[#basic.scope]），循环每次经过时都
进入和退出该作用域。

[:en]
If the substatement in an [~iteration-statement] is a single statement and not a
[~compound-statement], it is as if it was rewritten to be a
[~compound-statement] containing the original statement.
[:zh_CN]
若[~循环语句]中的子语句是单个语句而不是[~复合语句]，则如同把它重写为包含该原语句
的[~复合语句]一样。

[begin:example]
[codeblock]
while (--x >= 0)
  int i;
[codeblock:end]

[:en]
can be equivalently rewritten as
[:zh_CN]
可被等价地重写为

[codeblock]
while (--x >= 0) {
  int i;
}
[codeblock:end]

[:en]
Thus after the [`:key while] statement, [`i] is no longer in scope.
[:zh_CN]
故在 [`:key while] 语句之后，[`i] 不再处于作用域中。
[end:example]
