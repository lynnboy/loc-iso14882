[section#stmt.while
    [:en] The [`:key while] statement
    [:zh_CN] [`:key while] 语句

[:en]
[%statement[![`while]]]
[:zh_CN]
[%语句[![`while]]]
]

[para]
[:en] In the [`:key while] statement, the substatement is executed repeatedly
until the value of the condition ([#stmt.pre]) becomes [`false].
[:zh_CN] [`:key while] 语句中，子语句被重复执行，直到其条件的值（[#stmt.pre]）
变为 [`false]。

[:en] The test takes place before each execution of the substatement.
[:zh_CN] 测试发生于子语句的每次执行之前。

[para]
[:en]
[%statement[!declaration in [`while]]]
A [`:key while] statement is equivalent to
[:zh_CN]
[%语句[![`while]～中的声明式]]
[`:key while] 语句等价于

[syntax:explanation@indented]
[*label] [`:]
[`{]
    [`:key if] [`(] [~condition] [`)] [`{]
        [~statement]
        [`:key goto] [*label] [`;]
    [`}]
[`}]
[syntax:end]

[begin:note]
[:en] The variable created in the condition is destroyed and created with each
iteration of the loop.
[:zh_CN] 在条件中所创建的变量，在每次循环重复时进行销毁和创建。

[begin:example]
[codeblock]
struct A {
  int val;
  A(int i) : val(i) { }
  ~A() { }
  operator bool() { return val != 0; }
};
int i = 1;
while (A a = i) {
  // ...
  i = 0;
}
[codeblock:end]

[:en] In the while-loop, the constructor and destructor are each called twice,
once for the condition that succeeds and once for the condition that fails.
[:zh_CN] 在 while 循环中，构造函数和析构函数各自被调用两次，一次于条件成功时，
一次于条件失败时。
[end:example]
[end:note]
