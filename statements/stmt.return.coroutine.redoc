[section#stmt.return.coroutine
    [:en] The [`:key co_return] statement
    [:zh_CN] [`:key co_return] 语句
[:]
[%[`co_return]]
[%  [:en] coroutine return[%[`co_return]]
    [:zh_CN] 协程返回[%[`co_return]] ]
]

[syntax]
[rule coroutine-return-statement [:zh_CN] 协程返回语句 ]
    [| [`:key co_return] [~:opt expr-or-braced-init-list] [`;] ]
[rule:end]
[syntax:end]

[para]
[:en] A [`:key co_return] statement transfers control to the caller or resumer
of a coroutine ([#dcl.fct.def.coroutine]).
[:zh_CN]  [`:key co_return] 语句将控制转移到协程的调用方或恢复方
（[#dcl.fct.def.coroutine]）。

[:en] A coroutine shall not enclose a [`return] statement ([#stmt.return]).
[:zh_CN] 协程不能包含 [`return] 语句（[#stmt.return]）。

[begin:note]
[:en] For this determination, it is irrelevant whether the [`return] statement
is enclosed by a discarded statement ([#stmt.if]).
[:zh_CN] 对于进行这项判定，无关于 [`return] 语句是否包含在弃用语句中（[#stmt.if]）。
[end:note]

[para]
[:en] The [~expr-or-braced-init-list] of a [`:key co_return] statement is called its operand.
[:zh_CN] [`:key co_return] 语句的[~表达式或花括号初始化列表]称为其操作数。

[:en] Let [^p] be an lvalue naming the coroutine promise object ([#dcl.fct.def.coroutine]).
[:zh_CN] 令 [^p] 为指名协程承诺对象（[#dcl.fct.def.coroutine]）的左值。

[:en] A [`:key co_return] statement is equivalent to:
[:zh_CN] [`:key co_return] 语句等价于：

[syntax:explanation]
[`{] [^S][`;] [`:key goto] [*final-suspend][`;] [`}]
[syntax:end]

[:en@~] where [*final-suspend] is the exposition-only label defined in
[#dcl.fct.def.coroutine] and [^S] is defined as follows:
[:zh_CN@~] 其中 [*final-suspend] 为在 [#dcl.fct.def.coroutine] 中仅为阐释目的
所定义的标号，而 [^S] 的定义如下：

[list]
[item]
[:en] If the operand is a [~braced-init-list] or an expression of non-[`:key void]
type, [^S] is [^p][`.return_value([~expr-or-braced-init-list])].
[:zh_CN] 如果操作数是一个[~花括号初始化列表]或一个非 [`:key void] 类型的表达式，
则 [^S] 为“[^p][`.return_value([~expr-or-braced-init-list])]”。

[:en] The expression [^S] shall be a prvalue of type [`:key void].
[:zh_CN] 表达式 [^S] 应当是 [`:key void] 类型的纯右值。

[item]
[:en] Otherwise, [^S] is the [~compound-statement]
[`{] [~:opt expression] [`;] [^p][`.return_void(); }].
[:zh_CN] 否则，[^S] 为[~复合语句]“[`{] [~:opt expression] [`;] [^p][`.return_void(); }]”。

[:en] The expression [^p][`.return_void()] shall be a prvalue of type [`:key void].
[:zh_CN] 表达式 [^p][`.return_void()] 应当是 [`:key void] 类型的纯右值。
[list:end]

[para]
[:en] If a search for the name [`return_void] in the scope of the promise type
finds any declarations, flowing off the end of a coroutine[=']s [~function-body]
is equivalent to a [`:key co_return] with no operand; otherwise flowing off the
end of a coroutine[=']s [~function-body] results in undefined behavior.
[:zh_CN] 如果在承诺类型的作用域中搜索名字 [`return_void] 找到了任何声明式，则
控制流出协程的[~函数体]的末尾，等价于没有操作数的 [`:key co_return]；否则控制
流出协程的[~函数体]的末尾导致未定义行为。
