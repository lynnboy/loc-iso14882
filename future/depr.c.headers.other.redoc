[section#depr.c.headers.other
    [:en] Other C headers
    [:zh_CN] 其他 C 头文件
]

[para]
[:en] Every C header other than [`<complex.h>], [`<iso646.h>], [`<stdalign.h>],
[`<stdbool.h>], and [`<tgmath.h>], each of which has a name of the form
[%header[!C]][`[*name].h], behaves as if each name placed in the standard
library namespace by the corresponding [`c[*name]] header is placed within the
global namespace scope, except for the functions described in [#sf.cmath], the
declaration of [`std::byte] ([#cstddef.syn]), and the functions and function
templates described in [#support.types.byteops].
[:zh_CN] 除了 [`<complex.h>]、[`<iso646.h>]、[`<stdalign.h>]、[`<stdbool.h>] 和
[`<tgmath.h>] 之外的每个 C 头文件，其名字具有形式 [%头文件[!C]][`[*name].h]，
其行为如同将由对应的 [`c[*name]] 头文件所放入到标准程序库命名空间中的各个名字，
都放入到全局命名空间作用域中，但排除 [#sf.cmath] 中所描述的函数，[`std::byte] 的
声明式（[#cstddef.syn]），以及在 [#support.types.byteops] 中所描述的各函数和
函数模板。

[:en] It is unspecified whether these names are first declared or defined within
namespace scope ([#basic.scope.namespace]) of the namespace [`std] and are then
injected into the global namespace scope by explicit [~using-declaration]s
([#namespace.udecl]).
[:zh_CN] 是否将这些名字首先在命名空间 [`std] 的命名空间作用域
（[#basic.scope.namespace]）中声明或定义，然后再通过显式 [~using-声明式]
（[#namespace.udecl]）将它们注入到全局命名空间作用域，是未指明的。

[para]
[begin:example]
[%@header cstdlib]
[%@header stdlib.h]
[:en] The header [?libheader cstdlib] assuredly provides its declarations and
definitions within the namespace [`std].
[:zh_CN] 头文件 [?libheader cstdlib] 确定会在命名空间 [`std] 中提供其声明式和
定义式。

[:en] It may also provide these names within the global namespace.
[:zh_CN] 它可能也在全局命名空间中提供这些名字。

[:en] The header [?libheader stdlib.h] assuredly provides the same declarations
and definitions within the global namespace, much as in the C Standard.
[:zh_CN] 头文件 [?libheader stdlib.h] 确定会在全局命名空间中提供相同的声明式和
定义式，与其在 C 标准中非常相似。

[:en] It may also provide these names within the namespace [`std].
[:zh_CN] 它可能也在命名空间 [`std] 中提供这些名字。
[end:example]
