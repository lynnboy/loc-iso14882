[section#depr.strstreambuf.cons
    [:en] [`strstreambuf] constructors
    [:zh_CN] [`strstreambuf] 构造函数
]

[%@lib@ctor strstreambuf]
[codeblock:declaration]
explicit strstreambuf(streamsize alsize_arg);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes the base class with [`streambuf()].
[:zh_CN] 以 [`streambuf()] 初始化其基类。

[:en] The postconditions of this function are indicated in
[#:tab#depr.strstreambuf.cons.sz].
[:zh_CN] 这个函数的后条件在 [#:tab#depr.strstreambuf.cons.sz] 中给出。
[div:end]

[table:listing@shape=?x1@fill=column#depr.strstreambuf.cons.sz
    [:en] [`strstreambuf(streamsize)] effects
    [:zh_CN] [`strstreambuf(streamsize)] 的效果
    
    [|
        [:en] Element
        [:zh_CN] 元素 ]
    [|  [:en] Value
        [:zh_CN] 值 ]
]
[|] [`strmode]
[|] [`dynamic]
[-]
[|] [`alsize]
[|] [`alsize_arg]
[-]
[|] [`palloc]
[|] [:en] a null pointer
    [:zh_CN] 空指针
[-]
[|] [`pfree]
[|] [:en] a null pointer
    [:zh_CN] 空指针
[table:end]

[%@lib@ctor strstreambuf]
[codeblock:declaration]
strstreambuf(void* (*palloc_arg)(size_t), void (*pfree_arg)(void*));
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes the base class with [`streambuf()].
[:zh_CN] 以 [`streambuf()] 初始化其基类。

[:en] The postconditions of this function are indicated in
[#:tab#depr.strstreambuf.cons.alloc].
[:zh_CN] 这个函数的后条件在 [#:tab#depr.strstreambuf.cons.alloc] 中给出。
[div:end]

[table:listing@shape=?x1@fill=column#depr.strstreambuf.cons.alloc
    [:en] [`strstreambuf(void* (*)(size_t), void (*)(void*))] effects
    [:zh_CN] [`strstreambuf(void* (*)(size_t), void (*)(void*))] 的效果
    
    [|
        [:en] Element
        [:zh_CN] 元素 ]
    [|  [:en] Value
        [:zh_CN] 值 ]
]
[|] [`strmode]
[|] [`dynamic]
[-]
[|] [`alsize]
[|] [:en] an [%unspecified] unspecified value
    [:zh_CN] [%未指明的]未指明的值
[-]
[|] [`palloc]
[|] [`palloc_arg]
[-]
[|] [`pfree]
[|] [`pfree_arg]
[table:end]

[%@lib@ctor strstreambuf]
[codeblock:declaration]
strstreambuf(char* gnext_arg, streamsize n, char* pbeg_arg = nullptr);
strstreambuf(signed char* gnext_arg, streamsize n,
             signed char* pbeg_arg = nullptr);
strstreambuf(unsigned char* gnext_arg, streamsize n,
             unsigned char* pbeg_arg = nullptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes the base class with [`streambuf()].
[:zh_CN] 以 [`streambuf()] 初始化其基类。

[:en] The postconditions of this function are indicated in
[#:tab#depr.strstreambuf.cons.ptr].
[:zh_CN] 这个函数的后条件在 [#:tab#depr.strstreambuf.cons.ptr] 中给出。

[table:listing@shape=?x1@fill=column#depr.strstreambuf.cons.ptr
    [:en] [`strstreambuf(charT*, streamsize, charT*)] effects
    [:zh_CN] [`strstreambuf(charT*, streamsize, charT*)] 的效果
    
    [|
        [:en] Element
        [:zh_CN] 元素 ]
    [|  [:en] Value
        [:zh_CN] 值 ]
]
[|] [`strmode]
[|] [`dynamic]
[-]
[|] [`alsize]
[|] [:en] an [%unspecified] unspecified value
    [:zh_CN] [%未指明的]未指明的值
[-]
[|] [`palloc]
[|] [:en] a null pointer
    [:zh_CN] 空指针
[-]
[|] [`pfree]
[|] [:en] a null pointer
    [:zh_CN] 空指针
[table:end]

[para]
[:en] [`gnext_arg] shall point to the first element of an array object whose
number of elements [`N] is determined as follows:
[:zh_CN] [`gnext_arg] 应当指向数组对象的第一个元素，其元素个数 [`N] 确定如下：

[list]
[item]
[:en] If [`n > 0], [`N] is [`n].
[:zh_CN] 如果 [`n > 0]，则 [`N] 为 [`n]。
[item]
[%@lib strlen]
[:en] If [`n == 0], [`N] is [`std::strlen(gnext_arg)].
[:zh_CN] 如果 [`n == 0]，则 [`N] 为 [`std::strlen(gnext_arg)]。
[item]
[:en] If [`n < 0], [`N] is [`INT_MAX].[#:fn]
[:zh_CN] 如果 [`n < 0]，则 [`N] 为 [`INT_MAX][#:fn]。

[note:foot]
[%@lib strlen]
[:en] The function signature [`strlen(const char*)] is declared in
[?libheader@ref cstring].
[:zh_CN] 函数签名 [`strlen(const char*)] 在 [?libheader@ref cstring] 中定义。

[:en] The macro [`INT_MAX] is defined in [?libheader@ref climits].
[:zh_CN] 宏 [`INT_MAX] 在 [?libheader@ref climits] 中定义。
[note:end]
[list:end]

[para]
[:en] If [`pbeg_arg] is a null pointer, the function executes:
[:zh_CN] 若 [`pbeg_arg] 为空指针，则函数执行：

[codeblock]
setg(gnext_arg, gnext_arg, gnext_arg + N);
[codeblock:end]

[para]
[:en] Otherwise, the function executes:
[:zh_CN] 否则，函数执行：

[codeblock]
setg(gnext_arg, gnext_arg, pbeg_arg);
setp(pbeg_arg,  pbeg_arg + N);
[codeblock:end]
[div:end]

[%@lib@ctor strstreambuf]
[codeblock:declaration]
strstreambuf(const char* gnext_arg, streamsize n);
strstreambuf(const signed char* gnext_arg, streamsize n);
strstreambuf(const unsigned char* gnext_arg, streamsize n);
[codeblock:end]

[div:description]
[para:effects]
[:en] Behaves the same as [`strstreambuf((char*)gnext_arg,n)], except that the
constructor also sets [`constant] in [`strmode].
[:zh_CN] 行为与 [`strstreambuf((char*)gnext_arg,n)] 相同，但该构造函数还在
[`strmode] 中设置 [`constant]。
[div:end]

[%@lib@dtor strstreambuf]
[codeblock:declaration]
virtual ~strstreambuf();
[codeblock:end]

[div:description]
[para:effects]
[:en] Destroys an object of class [`strstreambuf].
[:zh_CN] 销毁类 [`streambuf] 的对象。

[:en] The function frees the dynamically allocated array object only if
[`(strmode & allocated) != 0] and [`(strmode & frozen) == 0].
[:zh_CN] 仅当 [`(strmode & allocated) != 0] 且 [`(strmode & frozen) == 0] 时，
该函数释放动态分配的数组对象。

[:en] ([#depr.strstreambuf.virtuals] describes how a dynamically allocated array
object is freed.)
[:zh_CN] （[#depr.strstreambuf.virtuals] 描述动态分配的数组对象是如何释放的。）
[div:end]
