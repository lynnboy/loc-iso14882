[section#depr.meta.types
    [:en] Deprecated type traits
    [:zh_CN] 被摒弃的类型特征
]

[para]
[:en] The header [?libheader@ref#meta.type.synop type_traits] has the following
addition:
[:zh_CN] 头文件 [?libheader@ref#meta.type.synop type_traits] 有下列添加声明：

[%@lib is_literal_type]
[codeblock:synopsis]
namespace std {
  template<class T> struct is_pod;
  template<class T> inline constexpr bool is_pod_v = is_pod<T>::value;
}
[codeblock:end]

[para]
[:en] The behavior of a program that adds specializations for any of the
templates defined in this subclause is undefined, unless explicitly permitted by
the specification of the corresponding template.
[:zh_CN] 除非由相应模板的说明所明确允许，否则为本子条款中所定义的任何模板添加
特化式的程序的行为是未定义的。

[codeblock:declaration]
template<class T> struct is_pod;
[codeblock:end]

[div:description]
[para:requires]
[:en] [`remove_all_extents_t<T>] shall be a complete type or [=cv] [`void].
[:zh_CN] [`remove_all_extents_t<T>] 应当是完整类型或者 [=cv] [`void]。

[para]
[:en] [`is_pod<T>] is a [^:oc UnaryTypeTrait] ([#meta.rqmts]) with a base
characteristic of [`true_type] if [`T] is a POD type, and [`false_type]
otherwise.
[:zh_CN] [`is_pod<T>] 是一种 [^:oc UnaryTypeTrait]（[#meta.rqmts]），当 [`T] 为
POD 类型时，其基础特征为 [`true_type]，否则为 [`false_type]。

[:] [%POD]
[:en] A POD class is a class that is both a trivial class and a standard-layout
class, and has no non-static data members of type non-POD class (or array
thereof).
[:zh_CN] POD 类是既为平凡类也为标准布局类的类，且它没有非 POD 类（或其数组）类型
的非静态数据成员。

[:en] A POD type is a scalar type, a POD class, an array of such a type, or a
cv-qualified version of one of these types.
[:zh_CN] POD 类型是标量类型，POD 类，以及这些类型的数组，或者这些类型之一的 cv
限定的版本。

[para]
[begin:note]
[:en] It is unspecified whether a closure type ([#expr.prim.lambda.closure]) is
a POD type.
[:zh_CN] 闭包类型（[#expr.prim.lambda.closure]）是否是 POD 类型是未指明的。
[end:note]
[div:end]
