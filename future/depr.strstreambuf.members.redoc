[section#depr.strstreambuf.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@lib@member freeze[!strstreambuf]]
[codeblock:declaration]
void freeze(bool freezefl = true);
[codeblock:end]

[div:description]
[para:effects]
[:en] If [`strmode & dynamic] is nonzero, alters the freeze status of the
dynamic array object as follows:
[:zh_CN] 如果 [`strmode & dynamic] 非零，则按如下改动动态数组对象的冻结状态：

[list]
[item]
[:en] If [`freezefl] is [`true], the function sets [`frozen] in [`strmode].
[:zh_CN] 若 [`freezefl] 为 [`true]，则该函数在 [`strmode] 中设置 [`frozen]。

[item]
[:en] Otherwise, it clears [`frozen] in [`strmode].
[:zh_CN] 否则，它在 [`strmode] 中清除 [`frozen]。
[list:end]
[div:end]

[%@lib@member str[!strstreambuf]]
[codeblock:declaration]
char* str();
[codeblock:end]

[div:description]
[para:effects]
[:en] Calls [`freeze()], then returns the beginning pointer for the input
sequence, [`gbeg].
[:zh_CN] 调用 [`freeze()]，然后返回输入序列的开始指针 [`gbeg]。

[para:remarks]
[:en] The return value can be a null pointer.
[:zh_CN] 返回值可能是空指针。
[div:end]

[%@lib@member pcount[!strstreambuf]]
[codeblock:declaration]
int pcount() const;
[codeblock:end]

[div:description]
[para:effects]
[:en] If the next pointer for the output sequence, [`pnext], is a null pointer,
returns zero.
[:zh_CN] 如果输出序列的后继指针 [`pnext] 为空指针，则返回零。

[:en] Otherwise, returns the current effective length of the array object as the
next pointer minus the beginning pointer for the output sequence, [`pnext - pbeg].
[:zh_CN] 否则，返回塑造对象的当前有效长度，为输出序列的后继指针减去开始指针
[`pnext - pbeg]。
[div:end]
