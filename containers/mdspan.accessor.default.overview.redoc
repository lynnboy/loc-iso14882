[section#mdspan.accessor.default.overview
    [:en] Overview
    [:zh_CN] 概述
]

[codeblock:synopsis]
namespace std {
  template<class ElementType>
  struct default_accessor {
    using offset_policy = default_accessor;
    using element_type = ElementType;
    using reference = ElementType&;
    using data_handle_type = ElementType*;

    constexpr default_accessor() noexcept = default;
    template<class OtherElementType>
      constexpr default_accessor(default_accessor<OtherElementType>) noexcept;
    constexpr reference access(data_handle_type p, size_t i) const noexcept;
    constexpr data_handle_type offset(data_handle_type p, size_t i) const noexcept;
  };
}
[codeblock:end]

[para]
[:en] [`default_accessor] meets the accessor policy requirements.
[:zh_CN] [`default_accessor] 满足访问器策略的规定。

[para]
[:en] [`ElementType] is required to be a complete object type that is neither an
abstract class type nor an array type.
[:zh_CN] [`ElementType] 要求为一种既不是抽象类类型也不是数组类型的完整对象类型。

[para]
[:en] Each specialization of [`default_accessor] is a trivially copyable type
that models [`:c semiregular].
[:zh_CN] [`default_accessor] 的每个特例均为可平凡复制类型且构成 [`:c semiregular]。

[para]
[:en] [$`[0, n)] is an accessible range for an object [`p] of type
[`data_handle_type] and an object of type [`default_accessor] if and only if
[=range(p,p + [$n])] is a valid range.
[:zh_CN] 当且仅当 [=range(p,p + [$n])] 为有效范围时，[$`[0, n)] 是对
[`data_handle_type] 类型的对象 [`p] 和 [`default_accessor] 类型的对象的可访问
范围。
