[section#set.modifiers
    [:en] Modifiers
    [:zh_CN] 改动函数
]

[%@lib@member insert[!set]]
[codeblock:declaration]
template<class K> pair<iterator, bool> insert(K&& x);
template<class K> iterator insert(const_iterator hint, K&& x);
[codeblock:end]

[div:description]
[para:constraints]
[:en] The [~qualified-id] [`Compare::is_transparent] is valid and denotes a type.
[:zh_CN] [~限定标识] [`Compare::is_transparent] 有效并代表一个类型。

[:en] For the second overload, [`is_convertible_v<K&&, const_iterator>] and
[`is_convertible_v<K&&, iterator>] are both [`false].
[:zh_CN] 对于第一种重载，[`is_convertible_v<K&&, const_iterator>] 和
[`is_convertible_v<K&&, iterator>] 均为 [`false]。

[para:expects]
[:en] [`value_type] is [^:oc EmplaceConstructible] into [`set] from
[`std::forward<K>(x)].
[:zh_CN] [`value_type] 以 [`std::forward<K>(x)] 向 [`set] 中
[^:oc EmplaceConstructible]。

[para:effects]
[:en] If the set already contains an element that is equivalent to [`x],
there is no effect.
[:zh_CN] 如果该集合中已经存在与 [`x] 等价的元素，则没有效果。

[:en] Otherwise, let [`r] be [`equal_range(x)].
[:zh_CN] 否则，令 [`r] 为 [`equal_range(x)]。

[:en] Constructs an object [`u] of type [`value_type] with [`std::forward<K>(x)].
[:zh_CN] 以 [`std::forward<K>(x)] 构造一个 [`value_type] 类型的对象 [`u]。

[:en] If [`equal_range(u) == r] is [`false], the behavior is undefined.
[:zh_CN] 如果 [`equal_range(u) == r] 为 [`false]，则其行为未定义。

[:en] Inserts [`u] into [`*this].
[:zh_CN] 将 [`u] 插入 [`*this] 中。

[para:returns]
[:en] For the first overload, the [`bool] component of the returned pair is
[`true] if and only if the insertion took place.
[:zh_CN] 对于第一种重载，当且仅当发生了插入时，所返回的对偶的 [`bool] 成分为 [`true]。

[:en] The returned iterator points to the set element that is equivalent to [`x].
[:zh_CN] 所返回的迭代器指向等价于 [`x] 的集合元素。

[para:complexity]
[:en] Logarithmic.
[:zh_CN] 对数阶。
[div:end]
