[section#span.iterators
    [:en] Iterator support
    [:zh_CN] 迭代器支持
]

[%@library span[!iterator]]
[%@library iterator[!span]]
[%@library span[!const_iterator]]
[%@library const_iterator[!span]]
[codeblock:declaration]
using iterator = [[redoc("?impdefx [:en] type of [`span::iterator]"
                                  "[:zh_CN] [`span::iterator] 的类型")]];
using const_iterator = [[redoc("?impdefx [:en] type of [`span::const_iterator]"
                                        "[:zh_CN] [`span::const_iterator] 的类型")]];
[codeblock:end]

[para]
[:en] The types model [`:c contiguous_iterator] ([#iterator.concept.contiguous]),
meet the [^:oc RandomAccessIterator] requirements ([#random.access.iterators]),
and meet the requirements for constexpr iterators
([#iterator.requirements.general]).
[:zh_CN] 这些类型构成 [`:c contiguous_iterator]（[#iterator.concept.contiguous]），
满足 [^:oc RandomAccessIterator] 的规定（[#random.access.iterators]），并满足
对于 constexpr 迭代器（[#iterator.requirements.general]）的规定。

[:en] All requirements on container iterators ([#container.requirements] apply
to [`span::iterator] and [`span::const_iterator] as well.
[:zh_CN] 对容器迭代器的所有规定（[#container.requirements]）也都适用于
[`span::iterator] 和 [`span::const_iterator]。

[%@library span[!begin]]
[%@library begin[!span]]
[codeblock:declaration]
constexpr iterator begin() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] An iterator referring to the first element in the span.
[:zh_CN] 指代 [`span] 的第一个元素的迭代器。

[:en] If [`empty()] is [`true], then it returns the same value as [`end()].
[:zh_CN] 如果 [`empty()] 为 [`true]，则其返回与 [`end()] 相同的值。
[end:description]

[%@library span[!end]]
[%@library end[!span]]
[codeblock:declaration]
constexpr iterator end() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] An iterator which is the past-the-end value.
[:zh_CN] 越过末尾位置的迭代器值。
[end:description]

[%@library span[!rbegin]]
[%@library rbegin[!span]]
[codeblock:declaration]
constexpr reverse_iterator rbegin() const noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return reverse_iterator(end());]
[:zh_CN] 等价于：[`return reverse_iterator(end());]
[end:description]

[%@library span[!rend]]
[%@library rend[!span]]
[codeblock:declaration]
constexpr reverse_iterator rend() const noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return reverse_iterator(begin());]
[:zh_CN] 等价于：[`return reverse_iterator(begin());]
[end:description]

[%@library span[!cbegin]]
[%@library cbegin[!span]]
[codeblock:declaration]
constexpr const_iterator cbegin() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] A constant iterator referring to the first element in the span.
[:zh_CN] 指代 [`span] 的第一个元素的常量迭代器。

[:en] If [`empty()] is [`true], then it returns the same value as [`cend()].
[:zh_CN] 如果 [`empty()] 为 [`true]，则其返回与 [`cend()] 相同的值。
[end:description]

[%@library span[!cend]]
[%@library cend[!span]]
[codeblock:declaration]
constexpr const_iterator cend() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] An iterator which is the past-the-end value.
[:zh_CN] 越过末尾位置的常量迭代器值。
[end:description]

[%@library span[!crbegin]]
[%@library crbegin[!span]]
[codeblock:declaration]
constexpr const_reverse_iterator crbegin() const noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return reverse_iterator(cend());]
[:zh_CN] 等价于：[`return reverse_iterator(cend());]
[end:description]

[%@library span[!crend]]
[%@library crend[!span]]
[codeblock:declaration]
constexpr const_reverse_iterator crend() const noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return reverse_iterator(cbegin());]
[:zh_CN] 等价于：[`return reverse_iterator(cbegin());]
[end:description]

