[section#unord.set.cnstr
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@lib@ctor unordered_set]
[codeblock:declaration]
constexpr unordered_set() : unordered_set(size_type([[redoc("[=seebelow]")]])) { }
constexpr explicit unordered_set(size_type n, const hasher& hf = hasher(),
                                 const key_equal& eql = key_equal(),
                                 const allocator_type& a = allocator_type());
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an empty [`unordered_set] using the specified hash function,
key equality predicate, and allocator, and using at least [`n] buckets.
[:zh_CN] 构造一个空的 [`unordered_set]，并使用指定的散列函数、键相等性谓词和
分配器，并使用至少 [`n] 个桶。

[:en] For the default constructor, the number of buckets is [?impldef default
number of buckets in [`unordered_set]].
[:zh_CN] 对于默认构造函数，桶的数量是[?impldef [`unordered_set] 中的默认桶数]。

[:en] [`max_load_factor()] returns [`1.0].
[:zh_CN] [`max_load_factor()] 返回 [`1.0]。

[para:complexity]
[:en] Constant.
[:zh_CN] 常量。
[div:end]

[%@lib@ctor unordered_set]
[codeblock:declaration]
template<class InputIterator>
  constexpr unordered_set(InputIterator f, InputIterator l,
                size_type n = [[redoc("[=seebelow]")]], const hasher& hf = hasher(),
                const key_equal& eql = key_equal(),
                const allocator_type& a = allocator_type());
template<[[redoc("*:c>")]]container-compatible-range<value_type> R>
  constexpr unordered_multiset(from_range_t, R&& rg,
                               size_type n = [[redoc("[=seebelow]")]], const hasher& hf = hasher(),
                               const key_equal& eql = key_equal(),
                               const allocator_type& a = allocator_type());
constexpr unordered_set(initializer_list<value_type> il,
                        size_type n = [[redoc("[=seebelow]")]], const hasher& hf = hasher(),
                        const key_equal& eql = key_equal(),
                        const allocator_type& a = allocator_type());
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an empty [`unordered_set] using the specified hash function,
key equality predicate, and allocator, and using at least [`n] buckets.
[:zh_CN] 构造一个空的 [`unordered_set]，并使用指定的散列函数、键相等性谓词和
分配器，并使用至少 [`n] 个桶。

[:en] If [`n] is not provided, the number of buckets is [?impldef default
number of buckets in [`unordered_set]].
[:zh_CN] 如果未提供 [`n]，则桶的数量是[?impldef [`unordered_set] 中的默认桶数]。

[:en] Then inserts elements from the range [=range(f,l)], [`rg], or [`il], respectively.
[:zh_CN] 然后分别插入范围 [=range(f,l)]，[`rg]，或 [`il] 中的元素。

[:en] [`max_load_factor()] returns [`1.0].
[:zh_CN] [`max_load_factor()] 返回 [`1.0]。

[para:complexity]
[:en] Average case linear, worst case quadratic.
[:zh_CN] 平均情况为线性，最差情况为平方阶。
[div:end]
