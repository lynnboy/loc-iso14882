[section#flat.multimap.overview
    [:en] Overview
    [:zh_CN] 概要
]

[%@lib flat_multimap]
[para]
[:en] A [`flat_multimap] is a container adaptor that provides an associative
container interface that supports equivalent keys (i.e., possibly containing
multiple copies of the same key value) and provides for fast retrieval of values
of another type [`T] based on the keys.
[:zh_CN] [`flat_multimap] 是一种提供关联容器的接口的容器适配器，支持等价键（即
可能包含同一个键值的多个副本），并提供基于键的对另一个类型 [`T] 的值的快速检索。

[:en] [`flat_multimap] supports iterators that meet the [^:oc InputIterator]
requirements and model the [`:c random_access_iterator] concept
([#iterator.concept.random.access]).
[:zh_CN] [`flat_multimap] 支持的迭代器满足 [^:oc InputIterator] 的规定，并构成
[`:c random_access_iterator] 概念（[#iterator.concept.random.access]）。

[para]
[:en] A [`flat_multimap] meets all of the requirements for a container
([#container.reqmts]) and for a reversible container ([#container.rev.reqmts]),
plus the optional container requirements ([#container.opt.reqmts]).
[:zh_CN] [`flat_multimap] 满足容器（[#container.reqmts]）和可反向容器
（[#container.rev.reqmts]）的所有规定，加上可选的容器规定（[#container.opt.reqmts]）。

[:en] [`flat_multimap] meets the requirements of an associative container
([#associative.reqmts]), except that:
[:en] [`flat_multimap] 满足关联容器的规定（[#associative.reqmts]），但：

[list]
[item]
[:en] it does not meet the requirements related to node handles ([#container.node]),
[:zh_CN] 它不满足与节点句柄有关的规定（[#container.node]），
[item]
[:en] it does not meet the requirements related to iterator invalidation, and
[:zh_CN] 它不满足与迭代器失效有关的规定，并且
[item]
[:en] the time complexity of the operations that insert or erase a single element
from the map is linear, including the ones that take an insertion position iterator.
[:zh_CN] 从映射中插入或擦除单个元素的操作（包括接受插入位置迭代器的操作）的时间复杂度是线性的。
[list:end]

[begin:note]
[:en] A [`flat_multimap] does not meet the additional requirements of an
allocator-aware container ([#container.alloc.reqmts]).
[:zh_CN] [`flat_multimap] 不满足迭代器感知容器的额外规定（[#container.alloc.reqmts]）。
[end:note]

[para]
[:en] A [`flat_multimap] also provides most operations described in
[#associative.reqmts] for equal keys.
[:zh_CN] [`flat_multimap] 还提供 [#associative.reqmts] 所描述的大多数等价键的操作。

[:en] This means that a [`flat_multimap] supports the [`a_eq] operations in
[#associative.reqmts] but not the [`a_uniq] operations.
[:zh_CN] 这意味着 [`flat_multimap] 支持 [#associative.reqmts] 中的 [`a_eq] 的操作，
但不支持 [`a_uniq] 的操作。

[:en] For a [`flat_multimap<Key, T>] the [`key_type] is [`Key] and the
[`value_type] is [`pair<Key, T>].
[:zh_CN] [`flat_multimap<Key, T>] 的 [`key_type] 为 [`Key]，而其 [`value_type] 为
[`pair<Key, T>]。

[para]
[:en] Except as otherwise noted, operations on [`flat_multimap] are equivalent
to those of [`flat_map], except that [`flat_multimap] operations do not remove
or replace elements with equal keys.
[:zh_CN] 除非另有说明，对 [`flat_multimap] 的操作均与对 [`flat_map] 的操作等价，
但 [`flat_multimap] 的操作并不移除或替换具有相等键的元素。

[begin:example]
[:en] [`flat_multimap] constructors and emplace do not erase non-unique elements
after sorting them.
[:zh_CN] [`flat_multimap] 的构造函数和安置函数并不会在排序之后擦除不唯一的元素。
[end:example]

[para]
[:en] A [`flat_multimap] maintains the following invariants:
[:zh_CN] [`flat_multimap] 维持以下不变式：
[list]
[item]
[:en] it contains the same number of keys and values;
[:zh_CN] 它包含相同数量的键和值；
[item]
[:en] the keys are sorted with respect to the comparison object; and
[:zh_CN] 这些键根据比较对象有序；并且
[item]
[:en] the value at offset [`off] within the value container is the value
associated with the key at offset [`off] within the key container.
[:zh_CN] 值容器中偏移 [`off] 处的值是与键容器中偏移 [`off] 处的键相关联的值。
[list:end]

[para]
[:en] If any member function in [#flat.multimap.defn] exits via an exception
the invariants are restored.
[:zh_CN] 如果 [#flat.multimap.defn] 中的任何成员函数以异常退出，则恢复其不变式。

[begin:note]
[:en] This can result in the [`flat_multimap] being emptied.
[:zh_CN] 这会导致 [`flat_multimap] 被清空。
[end:note]

[para]
[:en] Any type [`C] that meets the sequence container requirements ([#sequence.reqmts])
can be used to instantiate [`flat_multimap], as long as [`C::iterator] meets the
[^:oc RandomAccessIterator] requirements and invocations of member functions
[`C::size] and [`C::max_size] do not exit via an exception.
[:zh_CN] 任何满足序列容器规定（[#sequence.reqmts]）的类型 [`C] 均可用于创建
[`flat_multimap] 实例，只要 [`C::iterator] 满足 [^:oc RandomAccessIterator]
的规定且其成员函数 [`C::size] 和 [`C::max_size] 不会以异常退出。

[:en] In particular, [`vector] ([#vector]) and [`deque] ([#deque]) can be used.
[:zh_CN] 特别是，可以使用 [`vector]（[#vector]）和 [`deque]（[#deque]）。

[begin:note]
[:en] [`vector<bool>] is not a sequence container.
[:zh_CN] [`vector<bool>] 不是序列容器。
[end:note]

[para]
[:en] The program is ill-formed if [`Key] is not the same type as
[`KeyContainer::value_type] or [`T] is not the same type as [`MappedContainer::value_type].
[:zh_CN] 如果 [`Key] 与 [`KeyContainer::value_type] 不是相同类型，或者 [`T] 与
[`MappedContainer::value_type] 不是相同类型，则程序非良构。

[para]
[:en] The effect of calling a constructor that takes both [`key_container_type] and
[`mapped_container_type] arguments with containers of different sizes is undefined.
[:zh_CN] 以不同大小的容器调用同时接受 [`key_container_type] 和
[`mapped_container_type] 实参的构造函数的效果是未定义的。

[para]
[:en] The effect of calling a constructor or member function that takes a
[`sorted_equivalent_t] argument with a container, containers, or range that is
not sorted with respect to [`key_comp()] is undefined.
[:zh_CN] 以并未根据 [`key_comp()] 有序的容器或范围，调用接受
[`sorted_equivalent_t] 的构造函数或成员函数的效果是未定义的。

[para]
[:en] The types [`iterator] and [`const_iterator] meet
the constexpr iterator requirements ([#iterator.requirements.general]).
[:zh_CN] 类型 [`iterator] 和 [`const_iterator] 满足
constexpr 迭代器的要求（[#iterator.requirements.general]）。
