[section#mdspan.layout.rightpad.cons
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
constexpr mapping(const extents_type& ext);
[codeblock:end]

[div:description]
[para:expects]
[list]
[item]
[:en] The size of the multidimensional index space [`ext] is representable as a
value of type [`index_type].
[:zh_CN] 多维索引空间 [`ext] 的大小可以表示为 [`index_type] 类型的值。
[item]
[:en] If [*rank_] is greater than one and [`padding_value] does not equal
[`dynamic_extent], then
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))]
is representable as a value of type [`index_type].
[:zh_CN] 如果 [*rank_] 大于一且 [`padding_value] 不等于 [`dynamic_extent]，则
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))] 可以表示为
[`index_type] 类型的值。
[item]
[:en] If [*rank_] is greater than one and [`padding_value] does not equal
[`dynamic_extent], then the product of
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))] and all
values [`ext.extent([$k])] with [$k] in the range of [=range(0,[*rank_] - 1)]
is representable as a value of type [`index_type].
[:zh_CN] 如果 [*rank_] 大于一且 [`padding_value] 不等于 [`dynamic_extent]，则
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))] 和范围
[=range(0,[*rank_] - 1)] 中的 [$k] 的所有 [`ext.extent([$k])] 值的乘积，可以表示为
[`index_type] 类型的值。
[list:end]

[para:effects]
[list]
[item]
[:en] Direct-non-list-initializes [*extents_] with [`ext]; and
[:zh_CN] 以 [`ext] 直接非列表初始化 [*extents_]；并且
[item]
[:en] if [*rank_] is greater than one, direct-non-list-initializes [*stride-rm2]
[:zh_CN] 如果 [*rank_] 大于一，则
[list]
[item]
[:en@~] with [`ext.extent([*rank_] - 1)] if [`padding_value] is [`dynamic_extent],
[:zh_CN@~] 当 [`padding_value] 是 [`dynamic_extent] 时，以
[`ext.extent([*rank_] - 1)]，
[item]
[:en@~] otherwise with
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))].
[:zh_CN@~] 否则，以
[`[*LEAST-MULTIPLE-AT-LEAST](padding_value, ext.extent([*rank_] - 1))]
[list:end]
[:zh_CN@~] 直接非列表初始化 [*stride-rm2]。
[list:end]
[div:end]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
template<class OtherIndexType>
constexpr mapping(const extents_type& ext, OtherIndexType pad);
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`is_constructible_v<OtherIndexType, index_type>] is [`true].
[:zh_CN] [`is_constructible_v<OtherIndexType, index_type>] 为 [`true]。
[item]
[:en] [`is_nothrow_constructible_v<index_type, OtherIndexType>] is [`true].
[:zh_CN] [`is_nothrow_constructible_v<index_type, OtherIndexType>] 为 [`true]。
[list:end]

[para:expects]
[list]
[item]
[:en] [`pad] is representable as a value of type [`index_type].
[:zh_CN] [`pad] 可以表示为 [`index_type] 类型的值。
[item]
[:en] [`extents_type::[*index-cast](pad)] is greater than zero.
[:zh_CN] [`extents_type::[*index-cast](pad)] 大于零。
[item]
[:en] If [*rank_] is greater than one, then
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))] is representable as
a value of type [`index_type].
[:zh_CN] 如果 [*rank_] 大于一，则
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))] 可以表示为
[`index_type] 类型的值。
[item]
[:en] If [*rank_] is greater than one, then the product of
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))] and all values
[`ext.extent([$k])] with [$k] in the range of [=range(0,[*rank_] - 1)]
is representable as a value of type [`index_type].
[:zh_CN] 如果 [*rank_] 大于一，则
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))] 和范围
[=range(0,[*rank_] - 1)] 中的 [$k] 的所有 [`ext.extent([$k])] 值的乘积，可以表示为
[`index_type] 类型的值。
[item]
[:en] If [`padding_value] is not equal to [`dynamic_extent], [`padding_value]
equals [`extents_type::[*index-cast](pad)].
[:zh_CN] 如果 [`padding_value] 不等于 [`dynamic_extent]，则 [`padding_value]
等于 [`extents_type::[*index-cast](pad)]。
[list:end]

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`ext], and if [*rank_] is
greater than one, direct-non-list-initializes [*stride-rm2] with
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))].
[:zh_CN] 以 [`ext] 直接非列表初始化 [*extents_]，并在 [*rank_] 大于一时，以
[`[*LEAST-MULTIPLE-AT-LEAST](pad, ext.extent([*rank_] - 1))] 直接非列表初始化
[*stride-rm2]。
[div:end]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
template<class OtherExtents>
  constexpr explicit(!is_convertible_v<OtherExtents, extents_type>)
    mapping(const layout_right::mapping<OtherExtents>& other);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_constructible_v<extents_type, OtherExtents>] is [`true].
[:zh_CN] [`is_constructible_v<extents_type, OtherExtents>] 为 [`true]。

[para:mandates]
[:en] If [`OtherExtents::rank()] is greater than 1, then
[:zh_CN] 如果 [`OtherExtents::rank()] 大于 1，则
[codeblock]
([[redoc("*>")]]static-padding-stride == dynamic_extent) ||
(OtherExtents::static_extent([[redoc("*>")]]rank_ - 1) == dynamic_extent) ||
([[redoc("*>")]]static-padding-stride == OtherExtents::static_extent([[redoc("*>")]]rank_ - 1))
[codeblock:end]
[:en@~] is [`true].
[:zh_CN@~] 为 [`true]。

[para:expects]
[list]
[item]
[:en] If [`[*rank_] > 1] is [`true] and [`padding_value == dynamic_extent] is
[`false], then [`other.stride([*rank_] - 2)] equals
[:zh_CN] 如果 [`[*rank_] > 1] 为 [`true] 且 [`padding_value == dynamic_extent]
为 [`false]，则 [`other.stride([*rank_] - 2)] 等于
[codeblock]
[[redoc("*>")]]LEAST-MULTIPLE-AT-LEAST(padding_value,
                        extents_type::[[redoc("*>")]]index-cast(other.extents().extent([[redoc("*>")]]rank_ - 1)))
[codeblock:end]
[:en@~] and
[:zh_CN@~] 并且
[item]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type].
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值。
[list:end]

[para:effects]
[:en] Equivalent to [`mapping(other.extents())].
[:zh_CN] 等价于 [`mapping(other.extents())]。
[div:end]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
template<class OtherExtents>
  constexpr explicit(rank_ > 0)
    mapping(const layout_stride::mapping<OtherExtents>& other);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_constructible_v<extents_type, OtherExtents>] is [`true].
[:zh_CN] [`is_constructible_v<extents_type, OtherExtents>] 为 [`true]。

[para:expects]
[list]
[item]
[:en] If [*rank_] is greater than 1 and [`padding_value] does not equal
[`dynamic_extent], then [`other.stride([*rank_] - 2)] equals
[:zh_CN] 如果 [*rank_] 大于 1 且 [`padding_value] 不等于 [`dynamic_extent]，
则 [`other.stride([*rank_] - 2)] 等于
[codeblock]
[[redoc("*>")]]LEAST-MULTIPLE-AT-LEAST(padding_value,
                        extents_type::[[redoc("*>")]]index-cast(other.extents().extent([[redoc("*>")]]rank_ - 1)))
[codeblock:end]
[item]
[:en] If [*rank_] is greater than 0, then [`other.stride([*rank_] - 1)] equals 1.
[:zh_CN] 如果 [*rank_] 大于 0，则 [`other.stride([*rank_] - 1)] 等于 1。
[item]
[:en] If [*rank_] is greater than 2, then for all [$r] in the range
[=range(0,[*rank_] - 2)], [`other.stride([$r])] equals
[:zh_CN] 如果 [*rank_] 大于 2，则对于范围 [=rank(0,[*rank_] - 2)] 中的所有 [$r]，
[`other.stride([$r])] 都等于
[codeblock]
(other.extents().[[redoc("*>")]]rev-prod-of-extents(r) / other.extents().extent([[redoc("*>")]]rank_ - 1)) *
  other.stride([[redoc("*>")]]rank_ - 2)
[codeblock:end]
[item]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type].
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值。
[list:end]

[para:effects]
[list]
[item]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()] and
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]；并且
[item]
[:en] if [*rank_] is greater than one, direct-non-list-initializes [*stride-rm2]
with [`other.stride([*rank_] - 2)].
[:zh_CN] 如果 [*rank_] 大于一，则以 [`other.stride([*rank_] - 2)] 直接非列表初始化
[*stride-rm2]。
[list:end]
[div:end]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
template<class LayoutRightPaddedMapping>
  constexpr explicit([[redoc("[=seebelow]")]])
    mapping(const LayoutRightPaddedMapping& other);
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`[*is-layout-right-padded-mapping-of]<LayoutRightPaddedMapping>] is [`true].
[:zh_CN] [`[*is-layout-right-padded-mapping-of]<LayoutRightPaddedMapping>] 为 [`true]。
[item]
[:en]
[`is_constructible_v<extents_type, typename LayoutRightPaddedMapping::extents_type>]
is [`true].
[:zh_CN]
[`is_constructible_v<extents_type, typename LayoutRightPaddedMapping::extents_type>]
为 [`true]。
[list:end]

[para:mandates]
[:en] If [*rank_] is greater than 1, then
[:zh_CN] 如果 [*rank_] 大于 1，则
[codeblock]
padding_value == dynamic_extent ||
LayoutRightPaddedMapping::padding_value == dynamic_extent ||
padding_value == LayoutRightPaddedMapping::padding_value
[codeblock:end]
[:en@~] is [`true].
[:zh_CN@~] 为 [`true]。

[para:expects]
[list]
[item]
[:en] If [*rank_] is greater than 1 and [`padding_value] does not equal
[`dynamic_extent], then [`other.stride([*rank_] - 2)] equals
[:zh_CN] 如果 [*rank_] 大于 1 且 [`padding_value] 不等于 [`dynamic_extent]，则
[`other.stride([*rank_] - 2)] 等于
[codeblock]
[[redoc("*>")]]LEAST-MULTIPLE-AT-LEAST(padding_value,
                        extents_type::[[redoc("*>")]]index-cast(other.extent([[redoc("*>")]]rank_ - 1)))
[codeblock:end]
[item]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type].
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值。
[list:end]

[para:effects]
[list]
[item]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()] and
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]，且
[item]
[:en] if [*rank_] is greater than one, direct-non-list-initializes [*stride-rm2]
with [`other.stride([*rank_] - 2)].
[:zh_CN] 如果 [*rank_] 大于一，则以 [`other.stride([*rank_] - 2)] 直接非列表初始化
[*stride-rm2]。
[list:end]

[para:remarks]
[:en] The expression inside [`explicit] is equivalent to:
[:zh_CN] [`explicit] 中的表达式等价于：
[codeblock]
[[redoc("*>")]]rank_> 1 &&
(padding_value != dynamic_extent ||
 LayoutRightPaddedMapping::padding_value == dynamic_extent)
[codeblock:end]
[div:end]

[%@lib@ctor layout_right_padded::mapping]
[codeblock:declaration]
template<class LayoutLeftPaddedMapping>
  constexpr explicit([[redoc("[=seebelow]")]])
    mapping(const LayoutLeftPaddedMapping& other) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`[*is-layout-left-padded-mapping-of]<LayoutLeftPaddedMapping>] is
[`true] or [`[*is-mapping-of]<layout_left, LayoutLeftPaddedMapping>] is [`true].
[:zh_CN] [`[*is-layout-left-padded-mapping-of]<LayoutLeftPaddedMapping>] 为
[`true] 或 [`[*is-mapping-of]<layout_left, LayoutLeftPaddedMapping>] 为 [`true]。
[item]
[:en] [*rank_] equals zero or one.
[:zh_CN] [*rank_] 等于零或一。
[item]
[:en]
[`is_constructible_v<extents_type, typename LayoutLeftPaddedMapping::extents_type>]
is [`true].
[:zh_CN]
[`is_constructible_v<extents_type, typename LayoutLeftPaddedMapping::extents_type>]
为 [`true]。
[list:end]

[para:expects]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type].
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值。

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()].
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]。

[para:remarks]
[:en] The expression inside [`explicit] is equivalent to:
[:zh_CN] [`explicit] 中的表达式等价于：
[codeblock]
!is_convertible_v<typename LayoutLeftPaddedMapping::extents_type, extents_type>
[codeblock:end]

[begin:note]
[:en] Neither the input mapping nor the mapping to be constructed uses the
padding stride in the rank-0 or rank-1 case, so the padding stride does not
affect either the constraints or the preconditions.
[:zh_CN] 秩为 0 和秩为 1 的情况下，输入映射和所构造的映射都不使用填充步长，因此
填充步长对约束和前条件都没有影响。
[end:note]
[div:end]
