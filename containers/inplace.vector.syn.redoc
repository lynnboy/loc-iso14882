[section#inplace.vector.syn
    [:en] Header [`<inplace_vector>] synopsis
    [:zh_CN] 头文件 [`<inplace_vector>] 纲要
]

[%@hdr@def inplace_vector]
[codeblock:synopsis]
// [:en] mostly freestanding [:zh_CN] 大部分自立式
#include <compare>              // [:en] see [#compare.syn] \
                                [:zh_CN] 参见 [#compare.syn]
#include <initializer_list>     // [:en] see [#initializer.list.syn] \
                                [:zh_CN] 参见 [#initializer.list.syn]

namespace std {
  // [:en] [#inplace.vector], class template [`inplace_vector] \
  [:zh_CN] [#inplace.vector]，类模板 [`inplace_vector]
  template<class T, size_t N> class inplace_vector;             // [=partially freestanding]

  // [:en] [#inplace.vector.erasure], erasure \
  [:zh_CN] [#inplace.vector.erasure]，擦除
  template<class T, size_t N, class U = T>
    constexpr typename inplace_vector<T, N>::size_type
      erase(inplace_vector<T, N>& c, const U& value);
  template<class T, size_t N, class Predicate>
    constexpr typename inplace_vector<T, N>::size_type
      erase_if(inplace_vector<T, N>& c, Predicate pred);
}
[codeblock:end]
