[section#span.sub
    [:en] Subviews
    [:zh_CN] 子视图
]

[%@library span[!first]]
[%@library first[!span]]
[codeblock:declaration]
template<ptrdiff_t Count> constexpr span<element_type, Count> first() const;
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`0 <= Count && Count <= size()].
[:zh_CN] [`0 <= Count && Count <= size()]。

[para:effects]
[:en] Equivalent to: [`return {data(), Count};]
[:zh_CN] 等价于：[`return {data(), Count};]
[exit:description]

[%@library span[!last]]
[%@library last[!span]]
[codeblock:declaration]
template<ptrdiff_t Count> constexpr span<element_type, Count> last() const;
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`0 <= Count && Count <= size()].
[:zh_CN] [`0 <= Count && Count <= size()]。

[para:effects]
[:en] Equivalent to: [`return {data() + (size() - Count), Count};]
[:zh_CN] 等价于：[`return {data() + (size() - Count), Count};]
[exit:description]

[%@library span[!subspan]]
[%@library subspan[!span]]
[codeblock:declaration [!:mark SeeBelow] ]
template<ptrdiff_t Offset, ptrdiff_t Count = dynamic_extent>
  constexpr span<element_type, [=SeeBelow]> subspan() const;
[codeblock:end]

[enter:description]
[para:requires]
[codeblock:notation]
(0 <= Offset && Offset <= size())
&& (Count == dynamic_extent || Count >= 0 && Offset + Count <= size())
[codeblock:end]

[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于
[codeblock:notation [!:mark SeeBelow] ]
return span<ElementType, [=SeeBelow]>(
  data() + Offset, Count != dynamic_extent ? Count : size() - Offset);
[codeblock:end]

[para:remarks]
[:en] The second template argument of the returned [`span] type is:
[:zh_CN] 所返回的 [`span] 类型的第二个模板实参为：

[codeblock:notation]
Count != dynamic_extent ? Count
                        : (Extent != dynamic_extent ? Extent - Offset
                                                    : dynamic_extent)
[codeblock:end]
[exit:description]

[%@library span[!first]]
[%@library first[!span]]
[codeblock:declaration]
constexpr span<element_type, dynamic_extent> first(index_type count) const;
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`0 <= Count && Count <= size()].
[:zh_CN] [`0 <= Count && Count <= size()]。

[para:effects]
[:en] Equivalent to: [`return {data(), Count};]
[:zh_CN] 等价于：[`return {data(), Count};]
[exit:description]

[%@library span[!last]]
[%@library last[!span]]
[codeblock:declaration]
constexpr span<element_type, dynamic_extent> last(index_type count) const;
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`0 <= Count && Count <= size()].
[:zh_CN] [`0 <= Count && Count <= size()]。

[para:effects]
[:en] Equivalent to: [`return {data() + (size() - Count), Count};]
[:zh_CN] 等价于：[`return {data() + (size() - Count), Count};]
[exit:description]

[%@library span[!subspan]]
[%@library subspan[!span]]
[codeblock:declaration]
constexpr span<element_type, dynamic_extent> subspan(
  index_type offset, index_type count = dynamic_extent) const;
[codeblock:end]

[enter:description]
[para:requires]
[codeblock:notation]
(0 <= offset && offset <= size())
&& (count == dynamic_extent || count >= 0 && offset + count <= size())
[codeblock:end]

[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于
[codeblock:notation]
return {data() + offset, count == dynamic_extent ? size() - offset : count};
[codeblock:end]
[exit:description]
