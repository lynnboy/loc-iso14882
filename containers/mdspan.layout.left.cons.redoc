[section#mdspan.layout.left.cons
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@lib@ctor layout_left::mapping]
[codeblock:declaration]
constexpr mapping(const extents_type& e) noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] The size of the multidimensional index space [`e] is representable as a
value of type [`index_type] ([#basic.fundamental]).
[:zh_CN] 多维索引空间 [`e] 的大小可以表示为 [`index_type] 类型的值
（[#basic.fundamental]）。

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`e].
[:zh_CN] 以 [`e] 直接非列表初始化 [*extents_]。
[div:end]

[%@lib@ctor layout_left::mapping]
[codeblock:declaration]
template<class OtherExtents>
  constexpr explicit(!is_convertible_v<OtherExtents, extents_type>)
    mapping(const mapping<OtherExtents>& other) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_constructible_v<extents_type, OtherExtents>] is [`true].
[:zh_CN] [`is_constructible_v<extents_type, OtherExtents>] 为 [`true]。

[para:expects]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type] ([#basic.fundamental]).
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值
（[#basic.fundamental]）。

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()].
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]。
[div:end]

[%@lib@ctor layout_left::mapping]
[codeblock:declaration]
template<class OtherExents>
  constexpr explicit(!is_convertible_v<OtherExtents, extents_type>)
    mapping(const layout_right::mapping<OtherExtents>& other) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`extents_type::rank() <= 1] is [`true], and
[:zh_CN] [`extents_type::rank() <= 1] 为 [`true]，并且
[item]
[:en] [`is_constructible_v<extents_type, OtherExtents>] is [`true].
[:zh_CN] [`is_constructible_v<extents_type, OtherExtents>] 为 [`true]。
[list:end]

[para:expects]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type] ([#basic.fundamental]).
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值
（[#basic.fundamental]）。

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()].
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]。
[div:end]

[%@lib@ctor layout_left::mapping]
[codeblock:declaration]
template<class LayoutLeftPaddedMapping>
  constexpr explicit(!is_convertible_v<typename LayoutLeftPaddedMapping::extents_type,
                                       extents_type>)
    mapping(const LayoutLeftPaddedMapping&) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`[*is-layout-left-padded-mapping-of]<LayoutLeftPaddedMapping>] is [`true].
[:zh_CN] [`[*is-layout-left-padded-mapping-of]<LayoutLeftPaddedMapping>] 为 [`true]。
[item]
[:en]
[`is_constructible_v<extents_type, typename LayoutLeftPaddedMapping::extents_type>]
is [`true].
[:zh_CN]
[`is_constructible_v<extents_type, typename LayoutLeftPaddedMapping::extents_type>]
为 [`true]。
[list:end]

[para:mandates]
[:en] If
[:zh_CN] 如果
[list]
[item]
[:en@~] [`Extents::rank()] is greater than one,
[:zh_CN@~] [`Extents::rank()] 大于一，
[item]
[:en@~] [`Extents::static_extent(0)] does not equal [`dynamic_extent], and
[:zh_CN@~] [`Extents::static_extent(0)] 不等于 [`dynamic_extent]，且
[item]
[:en@~] [`LayoutLeftPaddedMapping::[*static-padding-stride]] does not equal
[`dynamic_extent],
[:zh_CN@~] [`LayoutLeftPaddedMapping::[*static-padding-stride]] 不等于
[`dynamic_extent]，
[list:end]
[:en@~] then [`Extents::static_extent(0)] equals
[`LayoutLeftPaddedMapping::[*static-padding-stride]].
[:zh_CN@~] 那么 [`Extents::static_extent(0)] 等于
[`LayoutLeftPaddedMapping::[*static-padding-stride]]。

[para:expects]
[list]
[item]
[:en] If [`extents_type::rank() > 1] is [`true], then [`other.stride(1)] equals
[`other.extents(0)].
[:zh_CN] 如果 [`extents_type::rank() > 1] 为 [`true]，则 [`other.stride(1)] 等于
[`other.extents(0)]。
[item]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type].
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值。
[list:end]

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()].
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]。
[div:end]

[%@lib@ctor layout_left::mapping]
[codeblock:declaration]
template<class OtherExtents>
  constexpr explicit(extents_type::rank() > 0)
    mapping(const layout_stride::mapping<OtherExtents>& other);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_constructible_v<extents_type, OtherExtents>] is [`true].
[:zh_CN] [`is_constructible_v<extents_type, OtherExtents>] 为 [`true]。

[para:expects]
[list]
[item]
[:en] If [`extents_type::rank() > 0] is [`true], then for all [$r] in the range
[$`[0, [`extents_type::rank()])], [`other.stride([$r])] equals
[`other.extents().[*fwd-prod-of-extents]([$r])], and
[:zh_CN] 如果 [`extents_type::rank() > 0] 为 [`true]，则对于范围
[$`[0, [`extents_type::rank()])] 中的所有 [$r]，[`other.stride([$r])] 均等于
[`other.extents().[*fwd-prod-of-extents]([$r])]，并且
[item]
[:en] [`other.required_span_size()] is representable as a value of type
[`index_type] ([#basic.fundamental]).
[:zh_CN] [`other.required_span_size()] 可以表示为 [`index_type] 类型的值
（[#basic.fundamental]）。
[list:end]

[para:effects]
[:en] Direct-non-list-initializes [*extents_] with [`other.extents()].
[:zh_CN] 以 [`other.extents()] 直接非列表初始化 [*extents_]。
[div:end]
