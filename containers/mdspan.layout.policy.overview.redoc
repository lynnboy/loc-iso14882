[section#mdpan.layout.policy.overview
    [:en] Layout mapping policies
    [:zh_CN] 布局映射策略
]

[codeblock:synopsis]
namespace std {
  struct layout_left {
    template<class Extents>
      class mapping;
  };
  struct layout_right {
    template<class Extents>
      class mapping;
  };
  struct layout_stride {
    template<class Extents>
      class mapping;
  };

  template<size_t PaddingValue>
  struct layout_left_padded {
    template<class Extents> class mapping;
  };
  template<size_t PaddingValue>
  struct layout_right_padded {
    template<class Extents> class mapping;
  };
}
[codeblock:end]

[para]
[:en] Each of [`layout_left], [`layout_right], and [`layout_stride] meets the
layout mapping policy requirements and is a trivial type.
[:zh_CN] [`layout_left]，[`layout_right]，和 [`layout_stride] 中的每一个均满足
布局映射策略的规定，且是平凡类型。

[para]
[:en] Each specialization of [`layout_left_padded] and [`layout_right_padded]
meets the layout mapping policy requirements and is a trivial type.
[:zh_CN] [`layout_left_padded] 和 [`layout_right_padded] 的每个特例均满足
布局映射策略的规定，且是平凡类型。
