[section#container.adaptors.general
    [:en] In general
    [:zh_CN] 综述
]

[para]
[:en] The headers [?libheader queue] and [?libheader stack] define the container
adaptors [`queue], [`priority_queue], and [`stack].
[:zh_CN] 头文件 [?libheader queue] 和 [?libheader stack] 定义了容器适配器
[`queue]，[`priority_queue]，和 [`stack]。

[para]
[:en] The container adaptors each take a [`Container] template parameter, and
each constructor takes a [`Container] reference argument.
[:zh_CN] 每个容器适配器均接受一个 [`Container] 模板形参，并且每个构造函数均接受
一个 [`Container] 引用实参。

[:en] This container is copied into the [`Container] member of each adaptor.
[:zh_CN] 这个容器被复制到各个适配器的 [`Container] 成员中。

[:en] If the container takes an allocator, then a compatible allocator may be
passed in to the adaptor[=']s constructor.
[:zh_CN] 如果这个容器带有一个分配器，则可以向适配器的构造函数传递一个与之兼容的
分配器。

[:en] Otherwise, normal copy or move construction is used for the container
argument.
[:zh_CN] 否则，对这个容器实参进行常规的复制或移动构造。

[:en] The first template parameter [`T] of the container adaptors shall denote
the same type as [`Container::value_type].
[:zh_CN] 容器适配器的第一个模板形参 [`T] 应当代表与 [`Container::value_type]
相同的类型。

[para]
[:en] For container adaptors, no [`swap] function throws an exception unless
that exception is thrown by the swap of the adaptor[=']s [`Container] or
[`Compare] object (if any).
[:zh_CN] 对于容器适配器，[`swap] 函数都不抛出异常，除非这个异常是由该适配器的
[`Container] 或 [`Compare] 对象（如果有）的 [`swap] 所抛出的。

[para]
[:en] A deduction guide for a container adaptor shall not participate in
overload resolution if any of the following are true:
[:zh_CN] 容器适配器的推断导引，当以下有任意一项为真时不能参与重载决议：

[list]
[item]
[:en] It has an [`InputIterator] template parameter and a type that does not
qualify as an input iterator is deduced for that parameter.
[:zh_CN] 它具有一个 [`InputIterator] 模板形参，而为该形参所推断的类型无法作为
输入迭代器。

[item]
[:en] It has a [`Compare] template parameter and a type that qualifies as an
allocator is deduced for that parameter.
[:zh_CN] 它具有一个 [`Compare] 模板形参，而为该形参所推断的类型可以作为分配器。

[item]
[:en] It has a [`Container] template parameter and a type that qualifies as an
allocator is deduced for that parameter.
[:zh_CN] 它具有一个 [`Container] 模板形参，而为该形参所推断的类型可以作为分配器。

[item]
[:en] It has an [`Allocator] template parameter and a type that does not qualify
as an allocator is deduced for that parameter.
[:zh_CN] 它具有一个 [`Allocator] 模板形参，而为该形参所推断的类型无法作为分配器。

[item]
[:en] It has both [`Container] and [`Allocator] template parameters, and
[`uses_allocator_v<Container, Allocator>] is [`false].
[:zh_CN] 它同时具有 [`Container] 和 [`Allocator] 模板形参，但
[`uses_allocator_v<Container, Allocator>] 为 [`false]。
[list:end]
