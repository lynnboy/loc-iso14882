[section#queue.ops
    [:en] Operators
    [:zh_CN] 运算符
]

[%@lib@member operator==[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator==(const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c == y.c].
[:zh_CN] [`x.c == y.c]。
[div:end]

[%@lib@member operator!=[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator!=(const queue<T, Container>& x,  const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c != y.c].
[:zh_CN] [`x.c != y.c]。
[div:end]

[%@lib@member operator<[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator< (const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c < y.c].
[:zh_CN] [`x.c < y.c]。
[div:end]

[%@lib@member operator>[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator> (const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c > y.c].
[:zh_CN] [`x.c > y.c]。
[div:end]

[%@lib@member operator<=[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator<=(const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c <= y.c].
[:zh_CN] [`x.c <= y.c]。
[div:end]

[%@lib@member operator>=[!queue]]
[codeblock:declaration]
template<class T, class Container>
  constexpr bool operator>=(const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c >= y.c].
[:zh_CN] [`x.c >= y.c]。
[div:end]

[%@lib@member operator<=>[!queue]]
[codeblock:declaration]
template<class T, [[redoc("`:c>")]]three_way_comparable Container>
  constexpr compare_three_way_result_t<Container>
    operator<=>(const queue<T, Container>& x, const queue<T, Container>& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.c <=> y.c].
[:zh_CN] [`x.c <=> y.c]。
[div:end]
