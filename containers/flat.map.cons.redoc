[section#flat.map.cons
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@lib@ctor flat_map]
[codeblock:declaration]
constexpr flat_map(key_container_type key_cont, mapped_container_type mapped_cont,
                   const key_compare& comp = key_compare());
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [`[*c].keys] with [`std::move(key_cont)], [`[*c].values] with
[`std::move(mapped_cont)], and [*compare] with [`comp]; sorts the range
[=range(begin(),end())] with respect to [`value_comp()]; and finally erases the
duplicate elements as if by:
[:zh_CN] 以 [`std::move(key_cont)] 初始化 [`[*c].keys]，以 [`std::move(mapped_cont)]
初始化 [`[*c].values]，并以 [`comp] 初始化 [*compare]；根据 [`value_comp()] 对范围
[=range(begin(),end())] 进行排序；最后如同以下代码来擦除重复元素：

[codeblock]
auto zv = views::zip([[redoc("*>")]]c.keys, [[redoc("*>")]]c.values);
auto it = ranges::unique(zv, [[redoc("*>")]]key-equiv([[redoc("*>")]]compare)).begin();
auto dist = distance(zv.begin(), it);
c.keys.erase([[redoc("*>")]]c.keys.begin() + dist, [[redoc("*>")]]c.keys.end());
c.values.erase([[redoc("*>")]]c.values.begin() + dist, [[redoc("*>")]]c.values.end());
[codeblock:end]

[para:complexity]
[:en] Linear in [$N] if the container arguments are already sorted with respect
to [`value_comp()] and otherwise [$N \log N], where [$N] is the value of
[`key_cont.size()] before this call.
[:zh_CN] 如果各容器实参已经根据 [`value_comp()] 有序，则对于 [$N] 为线性，否则为
[$N \log N]，其中 [$N] 为本次调用之前 [`key_cont.size()] 的值。
[div:end]

[%@lib@ctor flat_map]
[codeblock:declaration]
constexpr flat_map(sorted_unique_t, key_container_type key_cont, mapped_container_type mapped_cont,
                   const key_compare& comp = key_compare());
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [`[*c].keys] with [`std::move(key_cont)], [`[*c].values] with
[`std::move(mapped_cont)], and [*compare] with [`comp].
[:zh_CN] 以 [`std::move(key_cont)] 初始化 [`[*c].keys]，以 [`std::move(mapped_cont)]
初始化 [`[*c].values]，并以 [`comp] 初始化 [*compare]。

[para:complexity]
[:en] Constant.
[:zh_CN] 常量。
[div:end]
