[section#forward.list.erasure
    [:en] Erasure
    [:zh_CN] 擦除
]

[%@lib@member erase[!forward_list]]
[codeblock:declaration]
template<class T, class Allocator, class U>
  typename forward_list<T, Allocator>::size_type
    erase(forward_list<T, Allocator>& c, const U& value);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return erase_if(c, `[&`](auto& elem) { return elem == value; });]
[:zh_CN] 等价于：[`return erase_if(c, `[&`](auto& elem) { return elem == value; });]
[div:end]

[%@lib@member erase_if[!forward_list]]
[codeblock:declaration]
template<class T, class Allocator, class Predicate>
  typename forward_list<T, Allocator>::size_type
    erase_if(forward_list<T, Allocator>& c, Predicate pred);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return c.remove_if(pred);]
[:zh_CN] 等价于：[`return c.remove_if(pred);]
[div:end]
