[section#flat.multiset.overview
    [:en] Overview
    [:zh_CN] 概要
]

[%@lib flat_multiset]
[para]
[:en] A [`flat_multiset] is a container adaptor that provides an associative
container interface that supports equivalent keys (i.e., possibly containing
multiple copies of the same key value) and provides for fast retrieval of the
keys themselves.
[:zh_CN] [`flat_multiset] 是一种提供关联容器的接口的容器适配器，支持等价键（即
可能包含同一个键值的多个副本），并提供对键自身的快速检索。

[:en] [`flat_multiset] supports iterators that model the
[`:c random_access_iterator] concept ([#iterator.concept.random.access]).
[:zh_CN] [`flat_multiset] 支持的迭代器构成[`:c random_access_iterator] 概念
（[#iterator.concept.random.access]）。

[para]
[:en] A [`flat_multiset] meets all of the requirements for a container
([#container.reqmts]) and for a reversible container ([#container.rev.reqmts]),
plus the optional container requirements ([#container.opt.reqmts]).
[:zh_CN] [`flat_multiset] 满足容器（[#container.reqmts]）和可反向容器
（[#container.rev.reqmts]）的所有规定，加上可选的容器规定（[#container.opt.reqmts]）。

[:en] [`flat_multiset] meets the requirements of an associative container
([#associative.reqmts]), except that:
[:en] [`flat_multiset] 满足关联容器的规定（[#associative.reqmts]），但：

[list]
[item]
[:en] it does not meet the requirements related to node handles
([#container.node.overview]),
[:zh_CN] 它不满足与节点句柄有关的规定（[#container.node.overview]），
[item]
[:en] it does not meet the requirements related to iterator invalidation, and
[:zh_CN] 它不满足与迭代器失效有关的规定，并且
[item]
[:en] the time complexity of the operations that insert or erase a single
element from the set is linear, including the ones that take an insertion
position iterator.
[:zh_CN] 从集合中插入或擦除单个元素的操作（包括接受插入位置迭代器的操作）的时间
复杂度是线性的。
[list:end]

[begin:note]
[:en] A [`flat_set] does not meet the additional requirements of an
allocator-aware container, as described in [#container.alloc.reqmts].
[:zh_CN] [`flat_set] 不满足迭代器感知容器的额外规定，如 [#container.alloc.reqmts]
所述。
[end:note]

[para]
[:en] A [`flat_multiset] also provides most operations described in
[#associative.reqmts] for equal keys.
[:zh_CN] [`flat_multiset] 还提供 [#associative.reqmts] 所描述的大多数等价键的操作。

[:en] This means that a [`flat_multiset] supports the [`a_eq] operations in
[#associative.reqmts] but not the [`a_uniq] operations.
[:zh_CN] 这意味着 [`flat_multiset] 支持 [#associative.reqmts] 中的 [`a_eq] 的操作，
但不支持 [`a_uniq] 的操作。

[:en] For a [`flat_multiset<Key>], both the [`key_type] and [`value_type] are
[`Key].
[:zh_CN] [`flat_multiset<Key>] 的 [`key_type] 和 [`value_type] 均为 [`Key]。

[para]
[:en] Descriptions are provided here only for operations on [`flat_multiset]
that are not described in one of the general sections or for operations where
there is additional semantic information.
[:zh_CN] 此处给出的说明仅包括未在概述章节之一描述的 [`flat_multiset] 操作，以及
具有额外的语义信息的操作。

[para]
[:en] A [`flat_multiset] maintains the invariant that the keys are sorted with
respect to the comparison object.
[:zh_CN] [`flat_multiset] 维持其各个键根据比较对象有序的不变式。

[para]
[:en] If any member function in [#flat.multiset.defn] exits via an exception
the invariants are restored.
[:zh_CN] 如果 [#flat.multiset.defn] 中的任何成员函数以异常退出，则恢复其不变式。

[begin:note]
[:en] This can result in the [`flat_multiset][=']s being emptied.
[:zh_CN] 这会导致 [`flat_multiset] 被清空。
[end:note]

[para]
[:en] Any sequence container ([#sequence.reqmts]) supporting
[^:oc RandomAccessIterator] can be used to instantiate [`flat_multiset].
[:zh_CN] 任何支持 [^:oc RandomAccessIterator] 的序列容器（[#sequence.reqmts]）均
可用于创建 [`flat_multiset] 实例。

[:en] In particular, [`vector] ([#vector]) and [`deque] ([#deque]) can be used.
[:zh_CN] 特别是，可以使用 [`vector]（[#vector]）和 [`deque]（[#deque]）。

[begin:note]
[:en] [`vector<bool>] is not a sequence container.
[:zh_CN] [`vector<bool>] 不是序列容器。
[end:note]

[para]
[:en] The program is ill-formed if [`Key] is not the same type as
[`KeyContainer::value_type].
[:zh_CN] 如果 [`Key] 与 [`KeyContainer::value_type] 不是相同类型，则程序非良构。

[para]
[:en] The effect of calling a constructor or member function that takes a
[`sorted_equivalent_t] argument with a range that is not sorted with respect to
[`key_comp()] is undefined.
[:zh_CN] 以并未根据 [`key_comp()] 有序的范围调用接受 [`sorted_equivalent_t] 的
构造函数或成员函数的效果是未定义的。
