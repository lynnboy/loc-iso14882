[section#lex.icon
    [:en] Integer literals
    [:zh_CN] 整数字面量
]

[%  [:en] literal[!integer]
    [:zh_CN] 字面量[!整数～] ]

[syntax]
[rule integer-literal [:zh_CN] 整数字面量 ]
    [| binary-literal [~:opt integer-suffix] ]
    [| octal-literal [~:opt integer-suffix] ]
    [| decimal-literal [~:opt integer-suffix] ]
    [| hexadecimal-literal [~:opt integer-suffix] ]
[rule:end]

[rule binary-literal [:zh_CN] 二进制字面量 ]
    [| [`0b] binary-digit ]
    [| [`0B] binary-digit ]
    [| binary-literal [`:opt '] binary-digit ]
[rule:end]

[rule octal-literal [:zh_CN] 八进制字面量 ]
    [| [`0] ]
    [| octal-literal [`:opt '] octal-digit ]
[rule:end]

[rule decimal-literal [:zh_CN] 十进制字面量 ]
    [| nonzero-digit ]
    [| decimal-literal [`:opt '] digit ]
[rule:end]

[rule hexadecimal-literal [:zh_CN] 十六进制字面量 ]
    [| hexadecimal-prefix hexadecimal-digit-sequence ]
[rule:end]

[rule:oneof binary-digit [:zh_CN] 二进制数字 ]
    [| [`0  1] ]
[rule:end]

[rule:oneof octal-digit [:zh_CN] 八进制数字 ]
    [| [`0  1  2  3  4  5  6  7] ]
[rule:end]

[rule:oneof nonzero-digit [:zh_CN] 非零数字 ]
    [| [`1  2  3  4  5  6  7  8  9] ]
[rule:end]

[rule:oneof hexadecimal-prefix [:zh_CN] 十六进制前缀 ]
    [| [`0x  0X] ]
[rule:end]

[rule hexadecimal-digit-sequence [:zh_CN] 十六进制数字序列 ]
    [| hexadecimal-digit ]
    [| hexadecimal-digit-sequence [`:opt '] hexadecimal-digit ]
[rule:end]

[rule:oneof hexadecimal-digit [:zh_CN] 十六进制数字 ]
    [| [`0  1  2  3  4  5  6  7  8  9] ]
    [| [`a  b  c  d  e  f] ]
    [| [`A  B  C  D  E  F] ]
[rule:end]

[rule integer-suffix [:zh_CN] 整数后缀 ]
    [| unsigned-suffix [~:opt long-suffix] ]
    [| unsigned-suffix [~:opt long-long-suffix] ]
    [| unsigned-suffix [~:opt size-suffix] ]
    [| long-suffix [~:opt unsigned-suffix] ]
    [| long-long-suffix [~:opt unsigned-suffix] ]
    [| size-suffix [~:opt unsigned-suffix] ]
[rule:end]

[rule:oneof unsigned-suffix [:zh_CN] unsigned-后缀 ]
    [| [`u  U] ]
[rule:end]

[rule:oneof long-suffix [:zh_CN] long-后缀 ]
    [| [`l  L] ]
[rule:end]

[rule:oneof long-long-suffix [:zh_CN] long-long-后缀 ]
    [| [`ll  LL] ]
[rule:end]

[rule:oneof size-suffix [:zh_CN] size-后缀 ]
    [| [`z  Z] ]
[rule:end]

[syntax:end]

[para]
[:en]
[%literal[![`unsigned]]]
[%literal[![`long]]]
[%literal[!base of integer]]
In an [~integer-literal], the sequence of [~binary-digit]s, [~octal-digit]s,
[~digit]s, or [~hexadecimal-digit]s is interpreted as a base [$N] integer as
shown in table [#:tab#lex.icon.base]; the lexically first digit of the sequence
of digits is the most significant.
[:zh_CN]
[%字面量[![`unsigned]]]
[%字面量[![`long]]]
[%字面量[!整数～的基数]]
[~整数字面量]中的[~二进制数字]，[~八进制数字]，[~数字]，或 [~十六进制数字]的序列，
按 [#:tab#lex.icon.base] 中所示被解释为以 [$N] 为基数的整数；数字序列中词法上的
第一个数字最有效。

[begin:note]
[:en]
The prefix and any optional separating single quotes are ignored when
determining the value.
[:zh_CN]
在确定其值时，忽略其前缀和任何可选的用于分隔的单引号。
[end:note]

[table:grid#lex.icon.base
    [:en] Base of [~integer-literal]s
    [:zh_CN] [~整数字面量]的基数

    [|  [:en] Kind of [~integer-literal]
        [:zh_CN] [~整数字面量]的种类 ]
    [|@rightaligned
        [:en] base [$N]
        [:zh_CN] 底数 [$N] ]
]
[|] [~binary-literal]       [|]  2 [-]
[|] [~octal-literal]        [|]  8 [-]
[|] [~decimal-literal]      [|] 10 [-]
[|] [~hexadecimal-literal]  [|] 16 [-]
[table:end]

[para]
[:en]
The [~hexadecimal-digit]s [`a] through [`f] and [`A] through [`F] have decimal
values ten through fifteen.
[:zh_CN]
[~十六进制数字] [`a] 到 [`f] 和 [`A] 到 [`F] 具有十进制值 10 到 15。

[begin:example]
[:en]
The number twelve can be written [`12], [`014], [`0XC], or [`0b1100].
[:zh_CN]
数字十二可以被写成 [`12]，[`014]，[`0XC] 或 [`0b1100]。

[:en]
The [~integer-literal]s [`1048576], [`1'048'576], [`0X100000], [`0x10'0000], and
[`0'004'000'000] all have the same value.
[:zh_CN]
[~整数字面量] [`1048576]，[`1'048'576]，[`0X100000]，[`0x10'0000]，和
[`0'004'000'000] 具有相同的值。
[end:example]

[para]
[:en]
[%literal[![`long]]]
[%literal[![`unsigned]]]
[%literal[!integer]]
[%literal[!type of integer]]
[%suffix[![`L]]]
[%suffix[![`U]]]
[%suffix[![`l]]]
[%suffix[![`u]]]
The type of an [~integer-literal] is the first type in the list in
[#:tab#lex.icon.type] corresponding to its optional [~integer-suffix] in which
its value can be represented.
[:zh_CN]
[%字面量[![`long]]]
[%字面量[![`unsigned]]]
[%字面量[!整数～]]
[%字面量[!整数～的类型]]
[%后缀[![`L]]]
[%后缀[![`U]]]
[%后缀[![`l]]]
[%后缀[![`u]]]
[~整数字面量]的类型是在 [#:tab#lex.icon.type] 中对应于其可选的[~整数后缀]的列表
中的第一个能够表示其值的类型。

[table:grid@border=cell#lex.icon.type
    [:en] Types of [~integer-literal]s
    [:zh_CN] [~整数字面量]的类型
    [|  [:en] [~integer-suffix]
        [:zh_CN] [~整数后缀] ]
    [|  [:en] [~decimal-literal]
        [:zh_CN] [~十进制字面量] ]
    [|  [:en] [~integer-literal] other than [~decimal-literal]
        [:zh_CN] [~十进制字面量]以外的[~整数字面量] ]
]
[|] [:en] none
    [:zh_CN] 无
[|] [`int] [br] [`long int] [br] [`long long int]
[|] [`int] [br] [`unsigned int] [br] [`long int] [br] [`unsigned long int] [br]
    [`long long int] [br] [`unsigned long long int]
[-]
[|] [:en] [`u] or [`U]
    [:zh_CN] [`u] 或 [`U]
[|] [`unsigned int] [br] [`unsigned long int] [br] [`unsigned long long int]
[|] [`unsigned int] [br] [`unsigned long int] [br] [`unsigned long long int]
[-]
[|] [:en] [`l] or [`L]
    [:zh_CN] [`l] 或 [`L]
[|] [`long int] [br] [`long long int]
[|] [`long int] [br] [`unsigned long int] [br]
    [`long long int] [br] [`unsigned long long int]
[-]
[|] [:en] Both [`u] or [`U] and [`l] or [`L]
    [:zh_CN] 同时有 [`u] 或 [`U] 及 [`l] 或 [`L]
[|] [`unsigned long int] [br] [`unsigned long long int]
[|] [`unsigned long int] [br] [`unsigned long long int]
[-]
[|] [:en] [`ll] or [`LL]
    [:zh_CN] [`ll] 或 [`LL]
[|] [`long long int]
[|] [`long long int] [br] [`unsigned long long int]
[-]
[|] [:en] Both [`u] or [`U] and [`ll] or [`LL]
    [:zh_CN] 同时有 [`u] 或 [`U] 及 [`ll] 或 [`LL]
[|] [`unsigned long long int]
[|] [`unsigned long long int]

[-]
[|] [:en] [`z] or [`Z]
    [:zh_CN] [`z] 或 [`Z]
[|] [:en] the signed integer type corresponding to [`std::size_t] ([#support.types.layout])
    [:zh_CN] 对应于 [`std::size_t] 的有符号整数类型（[#support.types.layout]）
[|] [:en] the signed integer type corresponding to [`std::size_t]
    [:zh_CN] 对应于 [`std::size_t] 的有符号整数类型
[-]
[|] [:en] Both [`u] or [`U] and [`z] or [`Z]
    [:zh_CN] 同时有 [`u] 或 [`U] 及 [`z] 或 [`Z]
[|] [`std::size_t]
[|] [`std::size_t]
[table:end]

[para]
[:en] Except for [~integer-literal]s containing a [~size-suffix], if the value
of an [~integer-literal] cannot be represented by any type in its list and an
extended integer type ([#basic.fundamental]) can represent its value, it may
have that extended integer type.
[:zh_CN] 除了包含[~大小后缀]的[~整数字面量]外，如果[~整数字面量]的值不能用其列表
中的任何类型表示，而某个扩展整数类型（[#basic.fundamental]）能够表示其值，则它
可以具有这个扩展整数类型。

[:en]
If all of the types in the list for the [~integer-literal] are signed, the
extended integer type is signed.
[:zh_CN]
若该[~整数字面量]的列表中的所有类型都是有符号的，则该扩展整数类型为有符号的。

[:en]
If all of the types in the list for the [~integer-literal] are unsigned, the
extended integer type is unsigned.
[:zh_CN]
若该[~整数字面量]的列表中的所有类型都是无符号的，则该扩展整数类型为无符号的。

[:en]
If the list contains both signed and unsigned types, the extended integer type
may be signed or unsigned.
[:zh_CN]
若列表既包含有符号的类型也包含无符号的类型，则该扩展整数类型可以为有符号的或者
无符号的。

[:en] if an [~integer-literal] cannot be represented by any of the allowed types,
the program is ill-formed.
[:zh_CN] 如果[~整数字面量]不能以任何被允许的类型表示，则程序非良构。

[begin:note]
[:en] An [~integer-literal] with a [`z] or [`Z] suffix is ill-formed if it
cannot be represented by [`std::size_t].
[:zh_CN] 不能由 [`std::size_t] 表示的带有 [`z] 或 [`Z] 后缀的[~整数字面量]非良构。
[end:note]
