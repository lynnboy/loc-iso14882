[section#simd.bit
    [:en] [`basic_vec] bit library
    [:zh_CN] [`basic_vec] 位操纵程序库
]

[%@lib@member byteswap[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V> constexpr V byteswap(const V& v) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] models [`integral].
[:zh_CN] 类型 [`V::value_type] 构成 [`integral]。

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`std::byteswap(v`[[$i]`])] for all [$i] in the range [=range(0,V::size())].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`std::byteswap(v`[[$i]`])] 的结果初始化。
[div:end]

[%@lib@member bit_ceil[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V> constexpr V bit_ceil(const V& v) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] 类型 [`V::value_type] 是一种无符号整数类型（[#basic.fundamental]）。

[para:expects]
[:en] For every [$i] in the range [=range(0,V::size())], the smallest power of 2
greater than or equal to [`v`[[$i]`]] is representable as a value of type [`V::value_type].
[:zh_CN] 对于范围 [=range(0,V::size())] 中的每个 [$i]，大于等于 [`v`[[$i]`]] 的
最小的二的幂可以表示为 [`V::value_type] 类型的值。

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`std::bit_ceil(v`[[$i]`])] for all [$i] in the range [=range(0,V::size())].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`std::bit_ceil(v`[[$i]`])] 的结果初始化。

[para:remarks]
[:en] A function call expression that violates the precondition in the [=expects]
element is not a core constant expression ([#expr.const]).
[:zh_CN] 违反 [=expects] 要素中的前条件的函数调用表达式，不是核心常量表达式（[#expr.const]）。
[div:end]

[%@lib@member bit_floor[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V> constexpr V bit_floor(const V& v) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] 类型 [`V::value_type] 是一种无符号整数类型（[#basic.fundamental]）。

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`std::bit_floor(v`[[$i]`])] for all [$i] in the range [=range(0,V::size())].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`std::bit_floor(v`[[$i]`])] 的结果初始化。
[div:end]

[%@lib@member has_single_bit[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr typename V::mask_type has_single_bit(const V& v) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] 类型 [`V::value_type] 是一种无符号整数类型（[#basic.fundamental]）。

[para:returns]
[:en] A [`basic_mask] object where the [$i^\text{th}] element is initialized to
the result of [`std::has_single_bit(v`[[$i]`])] for all [$i] in the range [=range(0,V::size())].
[:zh_CN] 一个 [`basic_mask] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`std::has_single_bit(v`[[$i]`])] 的结果初始化。
[div:end]

[%@lib@member rotl[!simd]]
[%@lib@member rotr[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V0, [[redoc("*:c>")]]simd-vec-type V1>
  constexpr V0 rotl(const V0& v0, const V1& v1) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V0, [[redoc("*:c>")]]simd-vec-type V1>
  constexpr V0 rotr(const V0& v0, const V1& v1) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] The type [`V0::value_type] is an unsigned integer type ([#basic.fundamental]),
[:zh_CN] 类型 [`V0::value_type] 是一种无符号整数类型（[#basic.fundamental]），
[item]
[:en] The type [`V1::value_type] models [`integral],
[:zh_CN] 类型 [`V1::value_type] 构成 [`integral]，
[item]
[:en] [`V0::size() == V1::size()] is [`true], and
[:zh_CN] [`V0::size() == V1::size()] 为 [`true]，并且
[item]
[:en] [`sizeof(typename V0::value_type) == sizeof(typename V1::value_type)] is [`true].
[:zh_CN] [`sizeof(typename V0::value_type) == sizeof(typename V1::value_type)] 为 [`true]。
[list:end]

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`[^bit-func](v0`[[$i]`], static_cast<int>(v1`[[$i]`]))]
for all [$i] in the range [=range(0,V::size())], where [^bit-func] is the
corresponding scalar function from [?libheader bit].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`[^bit-func](v0`[[$i]`], static_cast<int>(v1`[[$i]`]))]
的结果初始化，其中 [^bit-func] 是 [?libheader bit] 中的对应标量函数。
[div:end]

[%@lib@member rotl[!simd]]
[%@lib@member rotr[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V> constexpr V rotl(const V& v, int s) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V> constexpr V rotr(const V& v, int s) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] 类型 [`V::value_type] 是一种无符号整数类型（[#basic.fundamental]）。

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`[^bit-func](v`[[$i]`], s)] for all [$i] in the range [=range(0,V::size())],
where [^bit-func] is the corresponding scalar function from [?libheader bit].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`[^bit-func](v`[[$i]`], s)] 的结果初始化，
其中 [^bit-func] 是 [?libheader bit] 中的对应标量函数。
[div:end]

[%@lib@member bit_width[!simd]]
[%@lib@member countl_zero[!simd]]
[%@lib@member countl_one[!simd]]
[%@lib@member countr_zero[!simd]]
[%@lib@member countr_one[!simd]]
[%@lib@member popcount[!simd]]
[codeblock:declaration]
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> bit_width(const V& v) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> countl_zero(const V& v) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> countl_one(const V& v) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> countr_zero(const V& v) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> countr_one(const V& v) noexcept;
template<[[redoc("*:c>")]]simd-vec-type V>
  constexpr rebind_t<make_signed_t<typename V::value_type>, V> popcount(const V& v) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] The type [`V::value_type] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] 类型 [`V::value_type] 是一种无符号整数类型（[#basic.fundamental]）。

[para:returns]
[:en] A [`basic_vec] object where the [$i^\text{th}] element is initialized to
the result of [`[^bit-func](v`[[$i]`])] for all [$i] in the range [=range(0,V::size())],
where [^bit-func] is the corresponding scalar function from [?libheader bit].
[:zh_CN] 一个 [`basic_vec] 对象，其中对于范围 [=range(0,V::size())] 中的每个 [$i]，
其第 [$i] 个元素以 [`[^bit-func](v`[[$i]`])] 的结果初始化，
其中 [^bit-func] 是 [?libheader bit] 中的对应标量函数。
[div:end]
