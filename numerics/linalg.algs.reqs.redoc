[section#linalg.algs.reqs
    [:en] Algorithm requirements based on template parameter name
    [:zh_CN] 基于模板形参名的算法规定
]

[para]
[:en] Throughout [#linalg.algs.blas1], [#linalg.algs.blas2], and
[#linalg.algs.blas3], where the template parameters are not constrained,
the names of template parameters are used to express the following constraints.
[:zh_CN] [#linalg.algs.blas1]、[#linalg.algs.blas2] 和 [#linalg.algs.blas3] 通篇
中，若模板形参未被约束，则使用模板形参的名字来表达下列约束。

[list]
[item]
[:en] [`is_execution_policy<ExecutionPolicy>::value] is [`true]
([#execpol.type]).
[:zh_CN] [`is_execution_policy<ExecutionPolicy>::value] 为 [`true]
（[#execpol.type]）。
[item]
[:en] [`Real] is any type such that [`complex<Real>] is specified
([#complex.numbers.general]).
[:zh_CN] [`Real] 为指定了 [`complex<Real>]（[#complex.numbers.general]）的任何
类型。
[item]
[:en] [`Triangle] is either [`upper_triangle_t] or [`lower_triangle_t].
[:zh_CN] [`Triangle] 为 [`upper_triangle_t] 或者 [`lower_triangle_t]。
[item]
[:en] [`DiagonalStorage] is either [`implicit_unit_diagonal_t] or
[`explicit_diagonal_t].
[:zh_CN] [`DiagonalStorage] 为 [`implicit_unit_diagonal_t] 或者
[`explicit_diagonal_t]。
[list:end]

[begin:note]
[:en] Function templates that have a template parameter named [`ExecutionPolicy]
are parallel algorithms ([#algorithms.parallel.defns]).
[:zh_CN] 具有名为 [`ExecutionPolicy] 的模板形参的函数模板是并行算法
（[#algorithms.parallel.defns]）。
[end:note]
