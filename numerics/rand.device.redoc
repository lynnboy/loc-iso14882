[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% random_device class section
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/]

[section#rand.device
    [:en] Class [`random_device]
    [:zh_CN] 类 [`random_device]
]

[%@lib random_device]

[para]
[:en] A [`random_device] uniform random bit generator produces nondeterministic
random numbers.
[:zh_CN] 均匀随机位生成器 [`random_device] 产生非确定性的随机数。

[para]
[:en] If implementation limitations prevent generating non-deterministic random
numbers, the implementation may employ a random number engine.
[:zh_CN] 如果实现受到限制妨碍其产生非确定性的随机数，则实现可以采用一个随机数
引擎。

[%@lib random_device]
[%@lib@member result_type[!random_device]]
[codeblock:synopsis]
namespace std {
  class random_device {
  public:
    // [:en] types \
    [:zh_CN] 类型
    using result_type = unsigned int;

    // [:en] generator characteristics \
    [:zh_CN] 生成器的特性
    static constexpr result_type min() { return numeric_limits<result_type>::min(); }
    static constexpr result_type max() { return numeric_limits<result_type>::max(); }

    // [:en] constructors \
    [:zh_CN] 构造函数
    random_device() : random_device([[redoc("[=impdef]")]]) {}
    explicit random_device(const string& token);

    // [:en] generating functions \
    [:zh_CN] 生成函数
    result_type operator()();

    // [:en] property functions \
    [:zh_CN] 属性函数
    double entropy() const noexcept;

    // [:en] no copy functions \
    [:zh_CN] 不提供复制函数
    random_device(const random_device&) = delete;
    void operator=(const random_device&) = delete;
  };
}
[codeblock:end]

[%@lib@ctor random_device]
[codeblock:declaration]
explicit random_device(const string& token);
[codeblock:end]

[div:description]
[para:throws]
[:en] A value of an [?impldef exception type when [`random_device] constructor
fails] type derived from [`exception] if the [`random_device] cannot be
initialized.
[:zh_CN] 当无法初始化一个 [`random_device] 时抛出一个派生于 [`exception] 的
[?impldef [`random_device] 构造函数失败时的异常类型]类型的值。

[para:remarks]
[:en] The semantics of the [`token] parameter and the token value used by the
default constructor are [?impldef semantics of [`token] parameter and default
token value used by [`random_device] constructors].[#:fn]
[:zh_CN] [`token] 形参和由默认构造函数所使用的记号值的语义是 [?impldef
[`random_device] 的构造函数所使用的 [`token] 形参和默认记号值的语义][#:fn]。

[note:foot]
[:en] The parameter is intended to allow an implementation to differentiate
between different sources of randomness.
[:zh_CN] 该形参的意图是允许实现对随机性的不同来源加以区分。
[note:end]
[div:end]

[%@lib@member entropy[!random_device]]
[codeblock:declaration]
double entropy() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] If the implementation employs a random number engine, returns [$0.0].
[:zh_CN] 若实现采用随机数引擎，则返回 [$0.0]。

[:en] Otherwise, returns an entropy estimate[#:fn] for the random numbers
returned by [`operator()], in the range [`min()] to [$\log_2([`max()]+1)].
[:zh_CN] 否则，返回一个对 [`operator()] 所返回的随机数所估计的熵值[#:fn]，范围
从 [`min()] 到 [$\log_2([`max()]+1)]。

[note:foot]
[:en] If a device has [$n] states whose respective probabilities are
[$P_0, \dotsc, P_{n-1}], the device entropy [$S] is defined as
[$S = - \sum_{i=0}^{n-1} P_i \cdot \log P_i].
[:zh_CN] 若设备具有 [$n] 个状态，概率分别为 [$P_0, \dotsc, P_{n-1}]，则设备的熵
[$S] 定义为 [$S = - \sum_{i=0}^{n-1} P_i \cdot \log P_i]。
[note:end]
[div:end]

[%@lib@member operator()[!random_device]]
[codeblock:declaration]
result_type operator()();
[codeblock:end]

[div:description]
[para:returns]
[:en] A nondeterministic random value, uniformly distributed between [`min()]
and [`max()] (inclusive).
[:zh_CN] 一个非确定性的随机值，在 [`min()] 和 [`max()]（含边界）中均匀分布。

[:en] It is [?impldef how [`random_device::operator()] generates values] how
these values are generated.
[:zh_CN] 如何产生这些值是[?impldef [`random_device::operator()] 产生的值]。

[para:throws]
[:en] A value of an [?impldef exception type when [`random_device::operator()]
fails] type derived from [`exception] if a random number cannot be obtained.
[:zh_CN] 当无法获得随机数时抛出一个派生于 [`exception] 的[?impldef
[`random_device::operator()] 失败时的异常类型]类型的值。
[div:end]
