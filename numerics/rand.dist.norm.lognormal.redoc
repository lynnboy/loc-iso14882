[/
% ----------------------------------------------------------------------
% Class template lognormal_distribution
% ----------------------------------------------------------------------
/]

[section#rand.dist.norm.lognormal
    [:en] Class template [`lognormal_distribution]
    [:zh_CN] 类模板 [`lognormal_distribution]
]

[%@library lognormal_distribution]
[%[:en]random number distribution[![`lognormal_distribution]]
  [:zh_CN]随机数分布[![`lognormal_distribution]]]

[para]
[:en] A [`lognormal_distribution] random number distribution produces random
numbers [$x > 0] distributed according to the probability density function
[%probability density function[![`lognormal_distribution]]]
[%[`lognormal_distribution][!probability density function]]
[:zh_CN] [`lognormal_distribution] 随机数分布产生随机数 [$x > 0]，
其分布符合概率密度函数
[%概率密度函数[![`lognormal_distribution]]]
[%[`lognormal_distribution][!概率密度函数]]

[math]
p(x\,|\,m,s) = \frac{1}{s x \sqrt{2 \pi}}
  \cdot \exp{\left(-\frac{(\ln{x} - m)^2}{2 s^2}\right)}
  \text{ .}
[math:end]

[%@library lognormal_distribution]
[codeblock:synopsis]
template<class RealType = double>
  class lognormal_distribution {
  public:
    // [:en] types \
       [:zh_CN] 类型
    using result_type = RealType;
    using param_type  = [[redoc("=unspec")]];

    // [:en] constructors and reset functions \
       [:zh_CN] 构造函数和重置函数
    lognormal_distribution() : lognormal_distribution(0.0) {}
    explicit lognormal_distribution(RealType m, RealType s = 1.0);
    explicit lognormal_distribution(const param_type& parm);
    void reset();

    // [:en] generating functions \
       [:zh_CN] 生成函数
    template<class URBG>
      result_type operator()(URBG& g);
    template<class URBG>
      result_type operator()(URBG& g, const param_type& parm);

    // [:en] property functions \
       [:zh_CN] 属性函数
    RealType m() const;
    RealType s() const;
    param_type param() const;
    void param(const param_type& parm);
    result_type min() const;
    result_type max() const;
  };
[codeblock:end]

[%@library lognormal_distribution[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit lognormal_distribution(RealType m, RealType s = 1.0);
[codeblock:end]

[begin:description]
[para:requires]
[:en] [$0 < [`s]].
[:zh_CN] [$0 < [`s]]。

[para:effects]
[:en] Constructs a [`lognormal_distribution] object; [`m] and [`s] correspond to
the respective parameters of the distribution.
[:zh_CN] 构造一个 [`lognormal_distribution] 对象；[`m] 和 [`s] 对应于分布的相应
形参。
[end:description]

[%@library lognormal_distribution[!m]]
[%@library m[!lognormal_distribution]]
[codeblock:declaration]
RealType m() const;
[codeblock:end]

[begin:description]
[para:returns]
[:en] The value of the [`m] parameter with which the object was constructed.
[:zh_CN] 该对象构造时的形参 [`m] 的值。
[end:description]

[%@library lognormal_distribution[!s]]
[%@library s[!lognormal_distribution]]
[codeblock:declaration]
RealType s() const;
[codeblock:end]

[begin:description]
[para:returns]
[:en] The value of the [`s] parameter with which the object was constructed.
[:zh_CN] 该对象构造时的形参 [`s] 的值。
[end:description]
