[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subtract_with_carry_engine engine:
/]

[section#rand.eng.sub
    [:en] Class template [`subtract_with_carry_engine]
    [:zh_CN] 类模板 [`subtract_with_carry_engine]
]

[%@library subtract_with_carry_engine]
[%[:en]random number engine[![`subtract_with_carry_engine]]
  [:zh_CN]随机数引擎[![`subtract_with_carry_engine]]]
[para]
[:en] A [`subtract_with_carry_engine] random number engine produces unsigned
integer random numbers.
[:zh_CN] [`subtract_with_carry_engine] 随机数引擎产生无符号整数的随机数。

[para]
[:en] The state
[%[`subtract_with_carry_engine][!state]]
[%state[![`subtract_with_carry_engine]]]
[`x][$_i] of a [`subtract_with_carry_engine] object [`x] is of size
[$[=O(r)]], and consists of a sequence [$X] of [$r] integer values
[$0 \leq X_i < m \,= 2^w]; all subscripts applied to [$X] are to be taken
modulo [$r].
[:zh_CN] [`subtract_with_carry_engine] 对象 [`x] 的状态
[%[`subtract_with_carry_engine][!状态]]
[%状态[![`subtract_with_carry_engine]]]
[`x][$_i] 的大小为 [$[=O(r)]]，并由 [$r] 个整数值的序列 [$X] 构成，其中
[$0 \leq X_i < m \,= 2^w]；对 [$x] 进行的所有下标操作均按 [$r] 取模。

[:en] The state [`x][$_i] additionally consists of an integer [$c] (known as
the [+carry])
[%[`subtract_with_carry_engine][!carry]]
[%carry[![`subtract_with_carry_engine]]]
whose value is either 0 or 1.
[:zh_CN] 状态 [`x][$_i] 还包括一个整数 [$c]（称为其[+借位]）
[%[`subtract_with_carry_engine][!借位]]
[%借位[![`subtract_with_carry_engine]]]
，其值为 0 或 1。

[para]
[:en] The state transition
[%[`subtract_with_carry_engine][!transition algorithm]]
[%transition algorithm[![`subtract_with_carry_engine]]]
is performed as follows:
[:zh_CN] 按如下进行状态转移
[%[`subtract_with_carry_engine][!转移算法]]
[%转移算法[![`subtract_with_carry_engine]]]
：

[list:ol@arparen]
[item]
[:en] Let [$ Y = X_{i-s} - X_{i-r} - c].
[:zh_CN] 令 [$ Y = X_{i-s} - X_{i-r} - c]。
[item]
[:en] Set [$X_i] to [$y = Y \bmod m].
[:zh_CN] 将 [$X_i] 设值为 [$y = Y \bmod m]。

[:en] Set [$c] to 1 if [$Y < 0], otherwise set [$c] to 0.
[:zh_CN] 当 [$Y < 0] 时将 [$c] 设值为 1，否则将 [$c] 设值为 0。
[list:end]

[enter:note]
[:en] This algorithm corresponds to a modular linear function of the form
[$\mathsf{TA}([`x]_i) = (a \cdot [`x]_i) \bmod b], where [$b] is of the form
[$m^r - m^s + 1] and [$a = b - (b - 1) / m].
[:zh_CN] 该算法对应于一个形式为
[$\mathsf{TA}([`x]_i) = (a \cdot [`x]_i) \bmod b] 的模线性函数，其中 [$b] 的形式
为 [$m^r - m^s + 1] 且有 [$a = b - (b - 1) / m]。
[exit:note]

[para]
[:en] The generation algorithm
[%[`subtract_with_carry_engine][!generation algorithm]]
[%generation algorithm[![`subtract_with_carry_engine]]]
is given by [$\mathsf{GA}([`x]_i) = y], where [$y] is the value produced as a
result of advancing the engine[=']s state as described above.
[:zh_CN] 其生成算法
[%[`subtract_with_carry_engine][!生成算法]]
[%生成算法[![`subtract_with_carry_engine]]]
以 [$\mathsf{GA}([`x]_i) = y] 给出，其中 [$y] 为对引擎的状态依前文所述推进的结果
所产生的值。

[codeblock:synopsis]
template<class UIntType, size_t w, size_t s, size_t r>
  class subtract_with_carry_engine {
  public:
    // [:en] types
    // [|:zh_CN] 类型
    using result_type = UIntType;

    // [:en] engine characteristics
    // [|:zh_CN] 引擎的特性
    static constexpr size_t word_size = w;
    static constexpr size_t short_lag = s;
    static constexpr size_t long_lag = r;
    static constexpr result_type min() { return 0; }
    static constexpr result_type max() { return [$m - 1]; }
    static constexpr result_type default_seed = 19780503u;

    // [:en] constructors and seeding functions
    // [|:zh_CN] 构造函数和播种函数
    explicit subtract_with_carry_engine(result_type value = default_seed);
    template<class Sseq> explicit subtract_with_carry_engine(Sseq& q);
    void seed(result_type value = default_seed);
    template<class Sseq> void seed(Sseq& q);

    // [:en] generating functions
    // [|:zh_CN] 生成函数
    result_type operator()();
    void discard(unsigned long long z);
  };
[codeblock:end]

[para]
[:en] The following relations shall hold: [`0u < s], [`s < r], [`0 < w], and
[`w <= numeric_limits<UIntType>::digits].
[:zh_CN] 应当满足下列各关系：[`0u < s]，[`s < r]，[`0 < w]，并且
[`w <= numeric_limits<UIntType>::digits]。

[para]
[:en] The textual representation
[%[`subtract_with_carry_engine][!textual representation]]
[%textual representation[![`subtract_with_carry_engine]]]
consists of the values of [$X_{i-r}, \dotsc, X_{i-1}], in that order, followed
by [$c].
[:zh_CN] 其文本表示
[%[`subtract_with_carry_engine][!文本表示]]
[%文本表示[![`subtract_with_carry_engine]]]
由 [$X_{i-r}, \dotsc, X_{i-1}] 的各值依序构成，后面跟着 [$c]。

[%@library subtract_with_carry_engine[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit subtract_with_carry_engine(result_type value = default_seed);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs a [`subtract_with_carry_engine] object.
[:zh_CN] 构造一个 [`subtract_with_carry_engine] 对象。

[:en] Sets the values of [$X_{-r}, \dotsc, X_{-1}], in that order, as
specified below.
[:zh_CN] 以下述方式依序设置 [$X_{-r}, \dotsc, X_{-1}] 的值。

[:en] If [$X_{-1}] is then [$0], sets [$c] to [$1]; otherwise sets [$c] to [$0].
[:zh_CN] 若 [$X_{-1}] 变为 [$0]，则设值 [$c] 为 [$1]；否则设值 [$c] 为 [$0].

[para:~]
[:en] To set the values [$X_k], first construct [`e], a
[`linear_congruential_engine] object, as if by the following definition:
[:zh_CN] 为设值 [$X_k] 的值，首先以如同下述定义构造一个
[`linear_congruential_engine] 对象 [`e]：

[codeblock:notation]
linear_congruential_engine<result_type,
                          40014u,0u,2147483563u> e(value == 0u ? default_seed : value);
[codeblock:end]

[:en] Then, to set each [$X_k], obtain new values [$z_0, \dotsc, z_{n-1}] from
[$n = \lceil w/32 \rceil] successive invocations of [`e] taken modulo [$2^32].
[:zh_CN] 然后，为了对各个 [$X_k] 设值，对 [`e] 进行 [$n = \lceil w/32 \rceil] 次
连续调用并以 [$2^32] 为模来取得一组新的值 [$z_0, \dotsc, z_{n-1}]。

[:en] Set [$X_k] to [$\left( \sum_{j=0}^{n-1} z_j \cdot 2^{32j}\right) \bmod m].
[:zh_CN] 将 [$X_k] 设值为
[$\left( \sum_{j=0}^{n-1} z_j \cdot 2^{32j}\right) \bmod m]。

[para:complexity]
[:en] Exactly [$n \cdot [`r]] invocations of [`e].
[:zh_CN] 恰好 [$n \cdot [`r]] 次调用 [`e]。
[exit:description]

[%@library subtract_with_carry_engine[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
template<class Sseq> explicit subtract_with_carry_engine(Sseq& q);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs a [`subtract_with_carry_engine] object.
[:zh_CN] 构造一个 [`subtract_with_carry_engine] 对象。

[:en] With [$k = \left\lceil w / 32 \right\rceil] and [$a] an array (or
equivalent) of length [$r \cdot k], invokes
[`q.generate([$a + 0], [$a + r \cdot k])] and then, iteratively for
[$i = -r, \dotsc, -1], sets [$X_i] to
[$\left(\sum_{j=0}^{k-1}a_{k(i+r)+j} \cdot 2^{32j} \right) \bmod m].
[:zh_CN] 设 [$k = \left\lceil w / 32 \right\rceil] 且 [$a] 为长度为 [$n \cdot k]
的数组（或等价物），其将调用
[`q.generate([$a + 0], [$a + n \cdot k])]，并随后对每个 [$i = -r, \dotsc, -1]，
将 [$X_i] 设值为
[$\left(\sum_{j=0}^{k-1}a_{k(i+r)+j} \cdot 2^{32j} \right) \bmod m]。

[:en] If [$X_{-1}] is then 0, sets [$c] to 1; otherwise sets [$c] to 0.
[:zh_CN] 若 [$X_{-1}] 变为 0，将 [$c] 设值为 1；否则将 [$c] 设值为 0。
[exit:description]
