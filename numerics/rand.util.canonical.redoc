[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% generate_canonical function template:
/]

[section#rand.util.canonical
    [:en] Function template [`generate_canonical]
    [:zh_CN] 函数模板 [`generate_canonical]
]

[%@lib generate_canonical]
[codeblock:declaration]
template<class RealType, size_t bits, class URNG>
  RealType generate_canonical(URNG& g);
[codeblock:end]

[div:description]
[para:complexity]
[:en] Exactly [$k = \max(1, \left\lceil b / \log_2 R \right\rceil)] invocations
of [`g], where [$b][#:note#fn:$1] is the lesser of
[`numeric_limits<RealType>::digits] and [`bits], and [$R] is the value of
[$[`g.max()] - [`g.min()] + 1].
[:zh_CN] 恰好 [$k = \max(1, \left\lceil b / \log_2 R \right\rceil)] 次对 [`g] 的
调用，其中 [$b][#:note#fn:$1] 为 [`numeric_limits<RealType>::digits] 和 [`bits]
中的较小值，而 [$R] 值为 [$[`g.max()] - [`g.min()] + 1]。

[note:foot#fn:$1]
[:en] [$b] is introduced to avoid any attempt to produce more bits of randomness
than can be held in [`RealType].
[:zh_CN] [$b] 的引入是为了防止产生比 [`RealType] 所能持有的随机性更多的位的可能。
[note:end]

[para:effects]
[:en] Invokes [`g()] [$k] times to obtain values [$g_0, \dotsc, g_{k-1}],
respectively.
[:zh_CN] [$k] 次调用 [`g()] 以分别获得值 [$g_0, \dotsc, g_{k-1}]。

[:en] Calculates a quantity
[:zh_CN] 利用 [`RealType] 类型的算术计算

[math]
   S = \sum_{i=0}^{k-1} (g_i - [`g.min()])
                        \cdot R^i
[math:end]

[:en@~] using arithmetic of type [`RealType].
[:zh_CN@~]。

[para:returns]
[:en] [$S / R^k].
[:zh_CN] [$S / R^k]。

[begin:note]
[:en] [$0 \leq S / R^k < 1].
[:zh_CN] [$0 \leq S / R^k < 1]。
[end:note]

[para:throws]
[:en] What and when [`g] throws.
[:zh_CN] 当 [`g] 抛出异常时抛出其所抛出的异常。

[para]
[begin:note]
[:en] If the value [$g_i] produced by [`g] are uniformly distributed, the
instantiation[=']s results are distributed as uniformly as possible.
[:zh_CN] 如果 [`g] 所产生的值 [$g_i] 均匀分布，则该实例的结果尽可能均匀分布。

[:en] Obtaining a value in this way can be a useful step in the process of
transforming a value generated by a uniform random bit generator into a value
that can be delivered by a random number distribution.
[:zh_CN] 以这种方式获得一个值，可以作为将某个均匀随机位生成器所产生的值变换为
可由某个随机数分布所交付的值的处理过程的一个步骤。
[end:note]
[div:end]
