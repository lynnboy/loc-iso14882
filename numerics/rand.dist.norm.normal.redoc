[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% normal_distribution
/]

[section#rand.dist.norm.normal
    [:en] Class template [`normal_distribution]
    [:zh_CN] 类模板 [`normal_distribution]
]

[%@library normal_distribution]
[%[:en]random number distribution[![`normal_distribution]]
  [:zh_CN]随机数分布[![`normal_distribution]]]

[para]
[:en] A [`normal_distribution] random number distribution produces random
numbers [$x] distributed according to the probability density function
[%probability density function[![`normal_distribution]]]
[%[`normal_distribution][!probability density function]]
[:zh_CN] [`normal_distribution] 随机数分布产生随机数 [$x]，
其分布符合概率密度函数
[%概率密度函数[![`normal_distribution]]]
[%[`normal_distribution][!概率密度函数]]

[math]
 p(x\,|\,\mu,\sigma)
      = \frac{1}{\sigma \sqrt{2\pi}}
        \cdot
        % e^{-(x-\mu)^2 / (2\sigma^2)}
        \exp{\left(- \, \frac{(x - \mu)^2}
                             {2 \sigma^2}
             \right)
            }
  \text{ .}
[math:end]

[:en] The distribution parameters [$\mu] and [$\sigma] are also known as this
distribution[=']s [+mean]
[%mean[![`normal_distribution]]]
[%[`normal_distribution][!mean]]
and [+standard deviation]
[%standard deviation[![`normal_distribution]]]
[%[`normal_distribution][!standard deviation]].
[:zh_CN] 分布的形参 [$\mu] 和 [$\sigma] 也被称为该分布的[+均值]
[%均值[![`normal_distribution]]][%[`normal_distribution][!均值]]
和[+标准差]
[%标准差[![`normal_distribution]]]
[%[`normal_distribution][!标准差]]。

[%@library normal_distribution]
[codeblock:synopsis [special unspecified] ]
template<class RealType = double>
  class normal_distribution {
  public:
    // [:en] types
    // [|:zh_CN] 类型
    using result_type = RealType;
    using param_type  = [=Unspec];

    // [:en] constructors and reset functions
    // [|:zh_CN] 构造函数和重置函数
    normal_distribution() : normal_distribution(0.0) {}
    explicit normal_distribution(RealType mean, RealType stddev = 1.0);
    explicit normal_distribution(const param_type& parm);
    void reset();

    // [:en] generating functions
    // [|:zh_CN] 生成函数
    template<class URBG>
      result_type operator()(URBG& g);
    template<class URBG>
      result_type operator()(URBG& g, const param_type& parm);

    // [:en] property functions
    // [|:zh_CN] 属性函数
    RealType mean() const;
    RealType stddev() const;
    param_type param() const;
    void param(const param_type& parm);
    result_type min() const;
    result_type max() const;
  };
[codeblock:end]

[%@library normal_distribution[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit normal_distribution(RealType mean, RealType stddev = 1.0);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [$0 < [`stddev]].
[:zh_CN] [$0 < [`stddev]]。

[para:effects]
[:en] Constructs a [`normal_distribution] object; [`mean] and [`stddev]
correspond to the respective parameters of the distribution.
[:zh_CN] 构造一个 [`normal_distribution] 对象；[`mean] 和 [`stddev] 对应于分布的
相应形参。
[exit:description]

[%@library normal_distribution[!mean]]
[%@library mean[!normal_distribution]]
[codeblock:declaration]
RealType mean() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The value of the [`mean] parameter with which the object was constructed.
[:zh_CN] 该对象构造时的形参 [`mean] 的值。
[exit:description]

[%@library normal_distribution[!stddev]]
[%@library stddev[!normal_distribution]]
[codeblock:declaration]
RealType stddev() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The value of the [`stddev] parameter with which the object was
constructed.
[:zh_CN] 该对象构造时的形参 [`stddev] 的值。
[exit:description]
