[section#template.slice.array.overview
    [:en] Overview
    [:zh_CN] 概述
]

[%@library slice_array]
[codeblock:synopsis]
namespace std {
  template<class T> class slice_array {
  public:
    using value_type = T;

    void operator=  (const valarray<T>&) const;
    void operator*= (const valarray<T>&) const;
    void operator/= (const valarray<T>&) const;
    void operator%= (const valarray<T>&) const;
    void operator+= (const valarray<T>&) const;
    void operator-= (const valarray<T>&) const;
    void operator^= (const valarray<T>&) const;
    void operator&= (const valarray<T>&) const;
    void operator|= (const valarray<T>&) const;
    void operator<<=(const valarray<T>&) const;
    void operator>>=(const valarray<T>&) const;

    slice_array(const slice_array&);
    ~slice_array();
    const slice_array& operator=(const slice_array&) const;
    void operator=(const T&) const;

    slice_array() = delete;     // [:en] as implied by declaring copy constructor above
                                // [|:zh_CN] 由上面声明复制构造函数所暗示的
  };
}
[codeblock:end]

[para]
[:en] This template is a helper template used by the [`slice] subscript operator
[:zh_CN] 这个模板是由以下 [`slice] 下标运算符所使用的一种辅助模板。

[codeblock:notation]
slice_array<T> valarray<T>::operator[](slice);
[codeblock:end]

[para]
[:en] It has reference semantics to a subset of an array specified by a [`slice]
object.
[:zh_CN] 它提供引用语义，指代某个数组中由 [`slice] 对象所指定的子集。

[enter:example]
[:en] The expression [`a`[slice(1, 5, 3)`] = b;] has the effect of assigning the
elements of [`b] to a slice of the elements in [`a].
[:zh_CN] 表达式 [`a`[slice(1, 5, 3)`] = b;] 的效果是将 [`b] 的各元素向 [`a] 中各
元素的一个切片进行赋值。

[:en] For the slice shown, the elements selected from [`a] are
[$1, 4, \dotsc, 13].
[:zh_CN] 上述的切片从 [`a] 中选择的元素为 [$1, 4, \dotsc, 13]。
[exit:example]
