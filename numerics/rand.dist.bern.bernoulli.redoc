[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% bernoulli_distribution
/]

[section#rand.dist.bern.bernoulli
    [:en] Class [`bernoulli_distribution]
    [:zh_CN] 类 [`bernoulli_distribution]
]

[%@library bernoulli_distribution]
[%[:en]random number distribution[![`bernoulli_distribution]]
  [:zh_CN]随机数分布[![`bernoulli_distribution]]]

[para]
[:en] A [`bernoulli_distribution] random number distribution produces [`bool]
values [$b] distributed according to the discrete probability function
[%discrete probability function [![`bernoulli_distribution]]]
[%[`bernoulli_distribution][!discrete probability function]]
[:zh_CN] [`bernoulli_distribution] 随机数分布产生 [`bool] 值 [$i]，
其分布符合离散概率函数
[%概率密度函数 [![`bernoulli_distribution]]]
[%[`bernoulli_distribution][!概率密度函数]]

[math]
[:en]
P(b\,|\,p) = \left\{ \begin{array}{ll}
                     p     & \text{if [$b = [`true]], or} \\
                     1 - p & \text{if [$b = [`false]].}
                     \end{array}\right.
[:zh_CN]
P(b\,|\,p) = \left\{ \begin{array}{ll}
                     p     & \text{ 当 [$b = [`true]]，或 \\
                     1 - p & \text{ 当 [$b = [`false]].}
                     \end{array}\right.
[math:end]

[%@library bernoulli_distribution]
[codeblock:synopsis [special unspecified] ]
class bernoulli_distribution {
public:
  // [:en] types
  // [|:zh_CN] 类型
  using result_type = bool;
  using param_type  = [=Unspec];

  // [:en] constructors and reset functions
  // [|:zh_CN] 构造函数和重置函数
  explicit bernoulli_distribution(double p = 0.5);
  explicit bernoulli_distribution(const param_type& parm);
  void reset();

  // [:en] generating functions
  // [|:zh_CN] 生成函数
  template<class URNG>
    result_type operator()(URNG& g);
  template<class URNG>
    result_type operator()(URNG& g, const param_type& parm);

  // [:en] property functions
  // [|:zh_CN] 属性函数
  double p() const;
  param_type param() const;
  void param(const param_type& parm);
  result_type min() const;
  result_type max() const;
};
[codeblock:end]

[%@library bernoulli_distribution[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit bernoulli_distribution(double p = 0.5);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [$0 \leq [`p] \leq 1].
[:zh_CN] [$0 \leq [`p] \leq 1]。

[para:effects]
[:en] Constructs a [`bernoulli_distribution] object; [`p] corresponds to the
parameter of the distribution.
[:zh_CN] 构造一个 [`bernoulli_distribution] 对象；[`p] 对应于分布的形参。
[exit:description]

[%@library bernoulli_distribution[!p]]
[%@library p[!bernoulli_distribution]]
[codeblock:declaration]
double p() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The value of the [`p] parameter with which the object was constructed.
[:zh_CN] 该对象构造时的形参 [`p] 的值。
[exit:description]
