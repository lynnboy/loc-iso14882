[section#complex.tuple
    [:en] Tuple interface
    [:zh_CN] 元组接口
]

[%@lib tuple_size]
[%@lib tuple_element]
[codeblock:declaration]
template<class T>
struct tuple_size<complex<T>> : integral_constant<size_t, 2> {};

template<size_t I, class T>
struct tuple_element<I, complex<T>> {
  using type = T;
};
[codeblock:end]

[div:description]
[para:mandates]
[:en] [`I < 2] is [`true].
[:zh_CN] [`I < 2] 为 [`true]。
[div:end]

[%@lib@member get[!complex]]
[codeblock:declaration]
template<size_t I, class T>
  constexpr T& get(complex<T>& z) noexcept;
template<size_t I, class T>
  constexpr T&& get(complex<T>&& z) noexcept;
template<size_t I, class T>
  constexpr const T& get(const complex<T>& z) noexcept;
template<size_t I, class T>
  constexpr const T&& get(const complex<T>&& z) noexcept;
[codeblock:end]

[div:description]
[para:mandates]
[:en] [`I < 2] is [`true].
[:zh_CN] [`I < 2] 为 [`true]。

[para:returns]
[:en] A reference to the real part of [`z] if [`I == 0] is [`true], otherwise
a reference to the imaginary part of [`z].
[:zh_CN] 当 [`I == 0] 为 [`true] 时为到 [`z] 的实部的引用，否则为到 [`z] 的虚部
的引用。
[div:end]
