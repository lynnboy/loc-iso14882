[section#numeric.requirements
    [:en] Numeric type requirements
    [:zh_CN] 数值类型的规定
[% [:en] requirements[!numeric type]
   [:zh_CN] 规定[!数值类型] ]
]

[para]
[:en] The [`complex] and [`valarray] components are parameterized by the type of
information they contain and manipulate.
[:zh_CN] [`complex] 和 [`valarray] 等组件是以它们所包含并操纵的信息的类型进行
参数化的。

[:en] A [=Cpp] program shall instantiate these components only with a numeric
type.
[:zh_CN] [=Cpp] 程序应当只使用数值类型来对这些组件进行实例化。

[:en] A [+:adj numeric[!type]] is a cv-unqualified object type [`T] that meets
the [^:oc DefaultConstructible], [^:oc CopyConstructible], [^:oc CopyAssignable],
and [^:oc Destructible] requirements ([#utility.arg.requirements]).[#:fn]
[:zh_CN] [+:adj 数值[!类型]]是满足 [^:oc DefaultConstructible]、
[^:oc CopyConstructible]、[^:oc CopyAssignable] 和 [^:oc Destructible] 的规定
（[#utility.arg.requirements]）的无 cv 限定的对象类型。[#:fn]

[note:foot]
[:en] In other words, value types.
[:zh_CN] 换句话说，就是其值类型。

[:en] These include arithmetic types, pointers, the library class [`complex],
and instantiations of [`valarray] for value types.
[:zh_CN] 这包括了算术类型、指针、程序库的类 [`complex]，以及对值类型所实例化的
[`valarray] 等。
[note:end]

[para]
[:en] If any operation on [`T] throws an exception the effects are undefined.
[:zh_CN] 如果 [`T] 上的任何操作抛出了异常，则其效果是未定义的。

[para]
[:en] In addition, many member and related functions of [`valarray<T>] can be
successfully instantiated and will exhibit well-defined behavior if and only if
[`T] meets additional requirements specified for each such member or related
function.
[:zh_CN] 此外，[`valarray<T>] 的许多成员和相关函数，当且仅当 [`T] 能够满足由每个
这种成员或相关函数所制定额外的规定时，能够被成功实例化，并呈现有良好定义的行为。

[para]
[begin:example]
[:en] It is valid to instantiate [`valarray<complex>], but [`operator>()] will
not be successfully instantiated for [`valarray<complex>] operands, since
[`complex] does not have any ordering operators.
[:zh_CN] [`valarray<complex>] 的实例化是有效的，但对 [`valarray<complex>] 操作数
无法成功实例化 [`operator>()]，这是因为 [`complex] 没有任何排序运算符。
[end:example]
