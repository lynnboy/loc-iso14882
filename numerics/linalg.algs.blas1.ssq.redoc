[section#linalg.algs.blas1.ssq
    [:en] Scaled sum of squares of a vector[=']s elements
    [:zh_CN] 缩放的向量元素平方和
]

[codeblock:declaration]
template<[[redoc("*:c>")]]in-vector InVec, class Scalar>
  sum_of_squares_result<Scalar> vector_sum_of_squares(InVec v, sum_of_squares_result<Scalar> init);
template<class ExecutionPolicy, [[redoc("*:c>")]]in-vector InVec, class Scalar>
  sum_of_squares_result<Scalar> vector_sum_of_squares(ExecutionPolicy&& exec,
                                                      InVec v, sum_of_squares_result<Scalar> init);
[codeblock:end]

[div:description]
[para]
[begin:note]
[:en] These functions correspond to the LAPACK function [`xLASSQ][#:cite@super#lapack].
[:zh_CN] 这些函数对应于 LAPACK 函数 [`xLASSQ][#:cite@super#lapack]。
[end:note]

[para:mandates]
[:en] [`decltype([*abs-if-needed](declval<typename InVec::value_type>()))] is
convertible to [`Scalar].
[:zh_CN] [`decltype([*abs-if-needed](declval<typename InVec::value_type>()))]
可以转换为 [`Scalar]。

[para:effects]
[:en] Returns a value [`result] such that
[:zh_CN] 返回一个 [`result] 值，使得
[list]
[item]
[:en] [`result.scaling_factor] is the maximum of [`init.scaling_factor] and
[`[*abs-if-needed](x[i])] for all [`i] in the domain of [`v]; and
[:zh_CN] [`result.scaling_factor] 是 [`init.scaling_factor] 和对于 [`v] 的定义域
中的所有 [`i] 的 [`[*abs-if-needed](x[i])] 中的最大值；并且
[item]
[:en] let [`s2init] be
[:zh_CN] 令 [`s2init] 为
[codeblock]
init.scaling_factor * init.scaling_factor * init.scaled_sum_of_squares
[codeblock:end]
[:en@~] then
[`result.scaling_factor * result.scaling_factor * result.scaled_sum_of_squares]
equals the sum of [`s2init] and the squares of [`[*abs-if-needed](x`[i`])]
for all [`i] in the domain of [`v].
[:zh_CN@~] 则
[`result.scaling_factor * result.scaling_factor * result.scaled_sum_of_squares]
等于 [`s2init] 和对于 [`v] 的定义域中的所有 [`i] 的 [`[*abs-if-needed](x`[i`])]
的平方的和。
[list:end]

[para:remarks]
[:en] If [`InVec::value_type], and [`Scalar] are all floating-point types or
specializations of [`complex], and if [`Scalar] has higher precision than
[`InVec::value_type], then intermediate terms in the sum use [`Scalar][=']s
precision or greater.
[:zh_CN] 如果 [`InVec::value_type] 和 [`Scalar] 均为浮点类型或 [`complex] 的特例，
则当 [`Scalar] 具有比 [`InVec::value_type] 更高的精度时，求和中的中间项使用
[`Scalar] 或更高的精度。
[div:end]
