[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Random Number Distribution requirements:
/]

[section#rand.req.dist
    [:en] Random number distribution requirements
    [:zh_CN] 随机数分布的规定

[%:begin#random.number.distribution.requirements
    [:en] random number distribution [!requirements]
    [:zh_CN] 随机数分布[!规定]
]
[%:begin#requirements.random.number.distribution
    [:en] requirements [!random number distribution]
    [:zh_CN] 规定[!随机数分布]
]
]

[para]
[:en] A [+:% random number distribution] (commonly shortened to
[+:% distribution]) [`d] of type [`D] is a function object returning values that
are distributed according to an associated mathematical [+:% probability density
function] [$p(z)] or according to an associated [+:% discrete probability
function] [$P(z_i)].
[:zh_CN] [`D] 类型的[+:% 随机数分布]（常简称为[+:% 分布]）[`d]，是一个函数对象，
其返回值根据其所关联的数学[+:% 概率密度函数] [$p(z)] 或者其所关联的
[+:% 离散概率函数] [$P(z_i)] 分布。

[:en] A distribution[=']s specification identifies its associated probability
function [$p(z)] or [$P(z_i)].
[:zh_CN] 在分布的说明中指定其所关联的概率函数 [$p(z)] 或 [$P(z_i)]。

[para]
[:en] An associated probability function is typically expressed using certain
externally-supplied quantities known as the [+:% parameters of the distribution].
[:zh_CN] 关联的概率函数通常都以特定的外部提供的量来表示，被称为[+:% 分布的参数]。

[:en] Such distribution parameters are identified in this context by writing,
for example, [$p(z\,|\,a,b)] or [$P(z_i\,|\,a,b)], to name specific parameters,
or by writing, for example, [$p(z\,|\left\{[`p]\right\})] or
[$P(z_i\,|\left\{[`p]\right\})],
to denote a distribution[=']s parameters [`p] taken as a whole.
[:en] 这种分布参数在这种语境中，被写为（例如）[$p(z\,|\,a,b)] 或
[$P(z_i\,|\,a,b)] 来指名特定的参数，或者被写为（例如）[$p(z\,|\left\{[`p]\right\})]
或 [$P(z_i\,|\left\{[`p]\right\})] 以指定该分布的形参 [`p] 整体作为其参数。

[para]
[:en] A class [`D] meets the requirements of a [+:% random number distribution]
if the expressions shown in [#:tab#rand.req.dist] are valid and have the
indicated semantics, and if [`D] and its associated types also meet all other
requirements of this subclause [#rand.req.dist].
[:zh_CN] 如果 [#:tab#rand.req.dist] 中列出的表达式均有效并具有所指定的语义，并且
如果 [`D] 及其所关联的类型同时满足本子条款 [#rand.req.dist] 中的所有其他规定，
则类 [`D] 满足[+:% 随机数分布]的规定。

[:en] In that Table and throughout this subclause,
[:zh_CN] 在该表和本子条款通篇中，

[list]
[item]
[:en] [`T] is the type named by [`D][=']s associated [`result_type];
[:zh_CN] [`T] 为由 [`D] 所关联的 [`result_type] 所指名的类型；
[item]
[:en] [`P] is the type named by [`D][=']s associated [`param_type];
[:zh_CN] [`P] 为由 [`D] 所关联的 [`param_type] 所指名的类型；
[item]
[:en] [`d] is a value of [`D], and [`x] and [`y] are (possibly [`const]) values
of [`D];
[:zh_CN] [`d] 是 [`D] 的值，而 [`x] 和 [`y] 是 [`D] 的（可能为 [`const] 的）值；
[item]
[:en] [`glb] and [`lub] are values of [`T] respectively corresponding to the
greatest lower bound and the least upper bound on the values potentially
returned by [`d][=']s [`operator()], as determined by the current values of
[`d][=']s parameters;
[:zh_CN] [`glb] 和 [`lub] 是分别对应于（由 [`d] 的参数的当前值所决定的）由 [`d]
的 [`operator()] 所潜在返回的最大下界和最小上界的 [`T] 的值；
[item]
[:en] [`p] is a (possibly [`const]) value of [`P];
[:zh_CN] [`p] 为 [`P] 的（可能为 [`const] 的）值
[item]
[:en] [`g], [`g1], and [`g2] are lvalues of a type meeting the requirements of
a uniform random bit generator ([#rand.req.urng]);
[:zh_CN] [`g]，[`g1] 和 [`g2] 为某个满足均匀随机位生成器（[#rand.req.urng]）的
规定的类型的左值。
[item]
[:en] [`os] is an lvalue of the type of some class template specialization
[`basic_ostream<charT, traits>]; and
[:zh_CN] [`os] 为某个类模板特例 [`basic_ostream<charT, traits>] 类型的左值；而
[item]
[:en] [`is] is an lvalue of the type of some class template specialization
[`basic_istream<charT, traits>];
[:zh_CN] [`is] 为某个类模板特例 [`basic_istream<charT, traits>] 类型的左值；
[list:end]

[:en@~] where [`charT] and [`traits] are constrained according to [#strings] and
[#input.output].
[:zh_CN@~] 其中 [`charT] 和 [`traits] 遵循 [#strings] 和 [#input.output] 的约束
条件。

[table:grid#rand.req.dist
    [:en] Random number distribution requirements
    [:zh_CN] 随机数分布的规定
    [|
        [:en] Expression
        [:zh_CN] 表达式
    ]
    [|
        [:en] Return type
        [:zh_CN] 返回类型
    ]
    [|
        [:en] Pre/post-condition
        [:zh_CN] 前/后条件
    ]
    [|
        [:en] Complexity
        [:zh_CN] 复杂度
    ]
]

[:en]
[%[`result_type][!random number distribution requirement]]
[:zh_CN]
[%[`result_type][!随机数分布的规定]]
[|] [`D::result_type]
[|] [`T]
[|] [:en] [`T] is an arithmetic type ([#basic.fundamental]).
    [:zh_CN] [`T] 为算术类型（[#basic.fundamental]）。
[|] [:en] compile-time
    [:zh_CN] 编译期
[-]

[:en]
[%[`param_type][!random number distribution requirement]]
[:zh_CN]
[%[`param_type][!随机数分布的规定]]
[|] [`D::param_type]
[|] [`P]
[|]
[|] [:en] compile-time
    [:zh_CN] 编译期
[-]

[:en]
[%default constructor[!random number distribution requirement]]
[:zh_CN]
[%默认构造函数[!随机数分布的规定]]
[|] [`D()]
[|]
[|] [:en] Creates a distribution whose behavior is indistinguishable from that
    of any other newly default-constructed distribution of type [`D].
    [:zh_CN] 创建一个分布，其行为与其他任何新默认构造的 [`D] 类型的分布无法区分。
[|] [:en] constant
    [:zh_CN] 常量
[-]

[:en]
[%constructor[!random number distribution requirement]]
[:zh_CN]
[%构造函数[!随机数分布的规定]]
[|] [`D(p)]
[|]
[|] [:en] Creates a distribution whose behavior is indistinguishable from that
    of a distribution newly constructed directly from the values used to
    construct [`p].
    [:zh_CN] 创建一个分布，其行为与直接从用以构造 [`p] 的值所新构造的分布无法
    区分。
[|] [:en] same as [`p][=']s construction
    [:zh_CN] 与 [`p] 的构造相同
[-]

[:en]
[%[`reset][!random number distribution requirement]]
[:zh_CN]
[%[`reset][!随机数分布的规定]]
[|] [`d.reset()]
[|] [`void]
[|] [:en] Subsequent uses of [`d] do not depend on values produced by any engine
    prior to invoking [`reset].
    [:zh_CN] 此后对 [`d] 的使用不依赖于调用 [`reset] 之前由任何引擎所产生的值。
[|] [:en] constant
    [:zh_CN] 常量
[-]

[:en]
[%[`param][!random number distribution requirement]]
[:zh_CN]
[%[`param][!随机数分布的规定]]
[|] [`x.param()]
[|] [`P]
[|] [:en] Returns a value [`p] such that [`D(p).param() == p].
    [:zh_CN] 返回一个值 [`p] 使得 [`D(p).param() == p]。
[|] [:en] no worse than the complexity of [`D(p)]
    [:zh_CN] 不差于 [`D(p)] 的复杂度
[-]

[:en]
[%[`param][!random number distribution requirement]]
[:zh_CN]
[%[`param][!随机数分布的规定]]
[|] [`d.param(p)]
[|] [`void]
[|] [para:ensures]
    [:en] [`d.param() == p].
    [:zh_CN] [`d.param() == p]。
[|] [:en] no worse than the complexity of [`D(p)]
    [:zh_CN] 不差于 [`D(p)] 的复杂度
[-]

[:en]
[%[`operator()][!random number distribution requirement]]
[:zh_CN]
[%[`operator()][!随机数分布的规定]]
[|] [`d(g)]
[|] [`T]
[|] [:en] With [$[`p] = [`d.param()]], the sequence of numbers returned by
    successive invocations with the same object [`g] is randomly distributed
    according to the associated [$p(z\,|\left\{[`p]\right\})] or
    [$P(z_i\,|\left\{[`p]\right\})] function.
    [:zh_CN] 令 [$[`p] = [`d.param()]]，此后以同一个对象 [`g] 进行调用所返回的
    数值的序列根据其所关联的函数 [$p(z\,|\left\{[`p]\right\})] 或
    [$P(z_i\,|\left\{[`p]\right\})] 随机分布。
[|] [:en] amortized constant number of invocations of [`g]
    [:zh_CN] 对 [`g] 的调用次数的摊销常量
[-]

[:en]
[%[`operator()][!random number distribution requirement]]
[:zh_CN]
[%[`operator()][!随机数分布的规定]]
[|] [`d(g,p)]
[|] [`T]
[|] [:en] The sequence of numbers returned by successive invocations with the
    same objects [`g] and [`p] is randomly distributed according to the
    associated [$p(z\,|\left\{[`p]\right\})] or [$P(z_i\,|\left\{[`p]\right\})]
    function.
    [:zh_CN] 此后以相同的对象 [`g] 和 [`p] 进行调用所返回的数值的序列根据其所
    关联的函数 [$p(z\,|\left\{[`p]\right\})] 或 [$P(z_i\,|\left\{[`p]\right\})]
    随机分布。
[|] [:en] amortized constant number of invocations of [`g]
    [:zh_CN] 对 [`g] 的调用次数的摊销常量
[-]

[:en]
[%[`min][!random number distribution requirement]]
[:zh_CN]
[%[`min][!随机数分布的规定]]
[|] [`x.min()]
[|] [`T]
[|] [:en] Returns [`glb].
    [:zh_CN] 返回 [`glb]。
[|] [:en] constant
    [:zh_CN] 常量
[-]

[:en]
[%[`max][!random number distribution requirement]]
[:zh_CN]
[%[`max][!随机数分布的规定]]
[|] [`x.max()]
[|] [`T]
[|] [:en] Returns [`lub].
    [:zh_CN] 返回 [`lub]。
[|] [:en] constant
    [:zh_CN] 常量
[-]

[:en]
[%[`operator==][!random number distribution requirement]]
[:zh_CN]
[%[`operator==][!随机数分布的规定]]
[|] [`x == y]
[|] [`bool]
[|] [:en] This operator is an equivalence relation.
    [:zh_CN] 这个运算符是一种等价关系。

    [:en] Returns [`true] if [`x.param() == y.param()] and [$S_1 = S_2], where
    [$S_1] and [$S_2] are the infinite sequences of values that would be
    generated, respectively, by repeated future calls to [`x(g1)] and [`y(g2)]
    whenever [`g1 == g2].
    [:zh_CN] 当 [`x.paran() == y.param()] 并且 [$S_1 = S_2] 时返回 [`true]，其中
    [$S_1] 和 [$S_2] 分别为在 [`g1 == g2] 的条件下未来对 [`x(g1)] 和 [`y(g2)]
    进行重复调用将会产生的值的无穷序列。

    [:en] Otherwise returns [`false].
    [:zh_CN] 否则返回 [`false]。
[|] [:en] constant
    [:zh_CN] 常量
[-]

[:en]
[%[`operator!=][!random number distribution requirement]]
[:zh_CN]
[%[`operator!=][!随机数分布的规定]]
[|] [`x != y]
[|] [`bool]
[|] [:en] [`!(x == y)].
    [:zh_CN] [`!(x == y)]。
[|] [:en] same as [`x == y].
    [:zh_CN] 与 [`x == y] 相同。
[-]

[:en]
[%[`operator<<][!random number distribution requirement]]
[:zh_CN]
[%[`operator<<][!随机数分布的规定]]
[|] [`os << x]
[|] [:en] reference to the type of [`os]
    [:zh_CN] 指代 [`os] 的类型的引用
[|] [:en] Writes to [`os] a textual representation for the parameters and the
    additional internal data of [`x].
    [:zh_CN] 将 [`x] 的参数和额外的内部数据的文本表示写出到 [`os]。

    [para:ensures]
    [:en] The [`os.][^fmtflags] and fill character are unchanged.
    [:zh_CN] 不改变 [`os.][^fmtflags] 和填充字符。
[|]
[-]

[:en]
[%[`operator>>][!random number distribution requirement]]
[:zh_CN]
[%[`operator>>][!随机数分布的规定]]
[|] [`is >> d]
[|] [:en] reference to the type of [`is]
    [:zh_CN] 指代 [`is] 的类型的引用
[|] [:en] Restores from [`is] the parameters and additional internal data of the
    lvalue [`d].
    [:zh_CN] 从 [`is] 中恢复左值 [`d] 的参数和额外的内部数据。

    [:en] If bad input is encountered, ensures that [`d] is unchanged by the
    operation and calls [`is.setstate(ios_base::failbit)] (which may throw
    [`ios_base::failure] ([#iostate.flags])).
    [:zh_CN] 当遇到无效输入时，确保 [`d] 不被这个操作所改动，并调用
    [`is.setstate(ios_base::failbit)]（这可能会抛出 [`ios_base::failure]
    （[#iostate.flags]））。

    [para:expects]
    [:en] [`is] provides a textual representation that was previously written
    using an [`os] whose imbued locale and whose type[=']s template
    specialization arguments [`charT] and [`traits] were the same as those of
    [`is].
    [:zh_CN] [`is] 所提供的文本表示是之前通过使用某个 [`os] 所写入的，且后者所
    浸染的地域与 [`is] 相同，其类型的模板特例实参 [`charT] 和 [`traits] 也和
    [`is] 的相同。

    [para:ensures]
    [:en] The [`is.][^fmtflags] are unchanged.
    [:zh_CN] 不改动 [`is.][^fmtflags]。
[-]

[table:end]

[para]
[:en] [`D] shall meet the [^:oc CopyConstructible]
([#:tab#cpp17.copyconstructible]) and [^:oc CopyAssignable]
([#:tab#cpp17.copyassignable]) requirements.
[:zh_CN] [`D] 应当满足 [^:oc CopyConstructible]（[#:tab#cpp17.copyconstructible]）
和 [^:oc CopyAssignable]（[#:tab#cpp17.copyassignable]）的规定。

[para]
[:en] The sequence of numbers produced by repeated invocations of [`d(g)] shall
be independent of any invocation of [`os << d] or of any [`const] member
function of [`D] between any of the invocations [`d(g)].
[:zh_CN] 重复调用 [`d(g)] 所产生的数值的序列，应当与对 [`d(g)] 的任何调用之间所
进行的 [`os << d] 或 [`D] 的任何 [`const] 成员函数的调用无关。

[para]
[:en] If a textual representation is written using [`os << x] and that
representation is restored into the same or a different object [`y] of the same
type using [`is >> y], repeated invocations of [`y(g)] shall produce the same
sequence of numbers as would repeated invocations of [`x(g)].
[:zh_CN] 如果通过 [`os << x] 写出了某个文本表示，随后通过 [`is >> y] 将该文本
表示恢复到相同会不同的对象 [`y] 之中，则对 [`y(g)] 的重复调用应当产生于对
[`x(g)] 的重复调用将会产生的数值序列相同。

[para]
[:en] It is unspecified whether [`D::param_type] is declared as a (nested)
[`class] or via a [`typedef].
[:zh_CN] [`D::param_type] 是声明为一个（嵌套的）[`class] 还是一个 [`typedef] 是
未指明的。

[:en] In this subclause [#rand], declarations of [`D::param_type] are in the
form of [`typedef]s for convenience of exposition only.
[:zh_CN] 在子条款 [#rand] 中，[`D::param_type] 的声明式的形式为 [`typedef]，仅
为便于阐释。

[para]
[:en] [`P] shall meet the [^:oc CopyConstructible]
([#:tab#cpp17.copyconstructible]), [^:oc CopyAssignable]
([#:tab#cpp17.copyassignable]), and [^:oc EqualityComparable]
([#:tab#cpp17.equalitycomparable]) requirements.
[:zh_CN] [`P] 应当符合 [^:oc CopyConstructible]（[#:tab#cpp17.copyconstructible]），
[^:oc CopyAssignable]（[#:tab#cpp17.copyassignable]）和
[^:oc EqualityComparable]（[#:tab#cpp17.equalitycomparable]）的规定。

[para]
[:en] For each of the constructors of [`D] taking arguments corresponding to
parameters of the distribution, [`P] shall have a corresponding constructor
subject to the same requirements and taking arguments identical in number, type,
and default values.
[:zh_CN] 对于 [`D] 的每个接受对应于分布参数的实参的构造函数，[`P] 应当具有一个
对应的构造函数，符合相同的规定，并能够接受相同数量、类型及默认值的实参。

[:en] Moreover, for each of the member functions of [`D] that return values
corresponding to parameters of the distribution, [`P] shall have a corresponding
member function with the identical name, type, and semantics.
[:zh_CN] 此外，对于 [`D] 的每个返回对应于各分布参数的值的成员函数，[`P] 应当具有
一个对应的成员函数，具有相同的名字、类型和语义。

[para]
[:en] [`P] shall have a declaration of the form
[:zh_CN] [`P] 应当带有一个以下形式的声明式

[codeblock]
using distribution_type =  D;
[codeblock:end]

[%:end#requirements.random.number.distribution]
[%:end#random.number.distribution.requirements]
