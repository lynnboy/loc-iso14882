[section#simd.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] Subclause [#simd] defines data-parallel types and operations on these types.
[:zh_CN] 子条款 [#simd] 定义数据并行类型和这些类型上的运算。

[begin:note]
[:en] The intent is to support acceleration through data-parallel execution
resources where available, such as SIMD registers and instructions or execution
units driven by a common instruction decoder.
[:zh_CN] 其目的是支持有可用的数据并行资源时通过它进行加速，比如 SIMD 寄存器和指令，
或者由通用指令解码器驱动的执行单元。

[:en] SIMD stands for [=lq]Single Instruction Stream [=-] Multiple Data Stream[=rq];
it is defined in Flynn 1966[#:cite@super#flynn-taxonomy].
[:zh_CN] SIMD 代表“单指令流—多数据流”；由 Flynn 1966[#:cite@super#flynn-taxonomy] 定义。
[end:note]

[para]
[:en] The set of [+:adj vectorizable[!types[%type]]] comprises
[:zh_CN] [+:adj 可向量化[!类型]]包括
[list]
[item]
[:en@~] all standard integer types, character types, and the types [`float] and
[`double] ([#basic.fundamental]);
[:zh_CN@~] 所有整数类型、字符类型以及类型 [`float] 和 [`double]（[#basic.fundamental]）；
[item]
[:en@~] [`std::float16_t], [`std::float32_t], and [`std::float64_t] if defined
([#basic.extended.fp]); and
[:zh_CN@~] [`std::float16_t]、[`std::float32_t] 和 [`std::float64_t]（若有定义）
（[#basic.extended.fp]）；以及
[item]
[:en@~] [`complex<T>] where [`T] is a vectorizable floating-point type.
[:zh_CN@~] [`complex<T>]，其中 [`T] 为可向量化浮点类型。
[list:end]

[para]
[:en] The term [+:adj data-parallel[!type]] refers to all enabled specializations
of the [`basic_simd] and [`basic_simd_mask] class templates.
[:zh_CN] 属于[+:adj 数据并行[!类型]]代表类模板 [`basic_simd] 和 [`basic_simd_mask]
的所有启用的特例。

[:en] A [+:adj data-parallel[!object]] is an object of data-parallel type.
[:zh_CN] [+:adj 数据并行[!对象]]是数据并行类型的对象。

[para]
[:en] Each specialization of [`basic_simd] or [`basic_simd_mask] is either
enabled or disabled, as described in [#simd.overview] and [#simd.mask.overview].
[:en] [`basic_simd] 和 [`basic_simd_mask] 的每个特例或被启用或被禁用，如
[#simd.overview] 和 [#simd.mask.overview] 所述。

[para]
[:en] A data-parallel type consists of one or more elements of an underlying
vectorizable type, called the [+:adj element[!type]].
[:zh_CN] 数据并行类型由一个或多个底层可向量化类型的元素构成，称为其[+:adj 元素[!类型]]。

[:en] The number of elements is a constant for each data-parallel type and
called the [+width] of that type.
[:zh_CN] 元素的梳理对于每个数据并行类型都是常量，称为该类型的[+宽度]。

[:en] The elements in a data-parallel type are indexed from 0 to [$\textrm{width} - 1].
[:zh_CN] 数据并行类型中的元素从 0 到[$\textrm{宽度} - 1] 索引。

[para]
[:en] An [+:adj element-wise[!operation]] applies a specified operation to the
elements of one or more data-parallel objects.
[:zh_CN] [+:adj 逐元素[!运算]]对一个或多个数据并行对象的各元素实施指定的运算。

[:en] Each such application is unsequenced with respect to the others.
[:zh_CN] 其中的每次运算互相都是无顺序的。

[:en] A [+:adj unary element-wise[!operation]] is an element-wise operation that
applies a unary operation to each element of a data-parallel object.
[:zh_CN] [+:adj 一元逐元素[!运算]]是对一个数据并行对象的各元素实施一元运算的逐元素运算。

[:en] A [+:adj binary element-wise[!operation]] is an element-wise operation that
applies a binary operation to corresponding elements of two data-parallel objects.
[:zh_CN] [+:adj 二元逐元素[!运算]]是对两个数据并行对象的各对应元素实施二元运算的逐元素运算。

[para]
[:en] Given a [`basic_simd_mask<Bytes, Abi>] object [`mask], the
[+:adj selected[!indices]] signify the integers [$i] in the range
[=range(0,mask.size())] for which [`mask`[[$i]`]] is [`true].
[:zh_CN] 给定 [`basic_simd_mask<Bytes, Abi>] 对象 [`mask]，[+:adj 选定[!索引]]
指定范围 [=range(0,mask.size())] 中的整数 [$i]，使 [`mask`[[$i]`]] 为 [`true]。

[:en] Given a data-parallel object [`data], the [+:adj selected[!elements]]
signify the elements [`data`[[$i]`]] for all selected indices [$i].
[:zh_CN] 给定数据并行对象 [`data]，[+:adj 选定[!元素]]指定对于所有选定所有 [$i]
的元素 [`data`[[$i]`]]。

[para]
[:en] The conversion from an arithmetic type [`U] to a vectorizable type [`T] is
[+value-preserving] if all possible values of [`U] can be represented with type [`T].
[:zh_CN] 如果算术类型 [`U] 的所有可能值都可被可向量化类型 [`T] 表示，那么
从 [`U] 到 [`T] 的转换是[+:adj 保留值]的。
