[section#simd.mask.cond
    [:en] [`basic_simd_mask] exposition only conditional operators
    [:zh_CN] [`basic_simd_mask] 仅用于阐释的条件运算符
]

[codeblock:declaration]
friend constexpr basic_simd_mask [[redoc("*>")]]simd-select-impl(
  const basic_simd_mask& mask, const basic_simd_mask& a, const basic_simd_mask& b) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`basic_simd_mask] object where the [$i^\text{th}] element equals
[`mask`[[$i]`] ? a`[[$i]`] : b`[[$i]`]] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`basic_simd_mask] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素等于 [`mask`[[$i]`] ? a`[[$i]`] : b`[[$i]`]]。
[div:end]

[codeblock:declaration]
friend constexpr basic_simd_mask
[[redoc("*>")]]simd-select-impl(const basic_simd_mask& mask, same_as<bool> auto a, same_as<bool> auto b) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`basic_simd_mask] object where the [$i^\text{th}] element equals
[`mask`[[$i]`] ? a : b] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`basic_simd_mask] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素等于 [`mask`[[$i]`] ? a : b]。
[div:end]

[codeblock:declaration]
template<class T0, class T1>
  friend constexpr simd<[[redoc("[=seebelow]")]], size()>
    [[redoc("*>")]]simd-select-impl(const basic_simd_mask& mask, const T0& a, const T1& b) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`same_as<T0, T1>] is [`true],
[:zh_CN] [`same_as<T0, T1>] 为 [`true]，
[item]
[:en@~] [`T0] is a vectorizable type, and
[:zh_CN@~] [`T0] 为可向量化类型，并且
[item]
[:en@~] [`sizeof(T0) == Bytes].
[:zh_CN@~] [`sizeof(T0) == Bytes]。
[list:end]

[para:returns]
[:en] A [`simd<T0, size()>] object where the [$i^\text{th}] element equals
[`mask`[[$i]`] ? a : b] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`simd<T0, size()>] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素等于 [`mask`[[$i]`] ? a : b]。
[div:end]
