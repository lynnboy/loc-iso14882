[/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Engines with predefined parameters section
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/]

[section#rand.predef
    [:en] Engines and engine adaptors with predefined parameters
    [:zh_CN] 带有预定义形参的引擎和引擎适配器
]

[%:begin#random.number.engine.with.predefined.parameters
    [:en] random number engine [!with predefined parameters]
    [:zh_CN] 随机数引擎[!带有预定义形参]
]
[%:begin#random.number.engine.adaptor.with.predefined.parameters
    [:en] random number engine adaptor [!with predefined parameters]
    [:zh_CN] 随机数引擎适配器[!带有预定义形参]
]
[%:begin#random.number.generation.predefined.engines.and.adaptors
    [:en] random number generation [!predefined engines and adaptors]
    [:zh_CN] 随机数生成[!预定义的引擎和适配器]
]

[%@lib minstd_rand0]
[%[:en]engines with predefined parameters[![`minstd_rand0]]
  [:zh_CN]带有预定义形参的引擎[![`minstd_rand0]]]
[codeblock:declaration]
using minstd_rand0 =
      linear_congruential_engine<uint_fast32_t, 16'807, 0, 2'147'483'647>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`minstd_rand0] shall produce the value 1043618065.
[:zh_CN] 对默认构造的 [`minstd_rand0] 类型的对象进行的连续第 10000 次调用应当
产生值 1043618065。
[div:end]

[%@lib minstd_rand]
[%[:en]engines with predefined parameters[![`minstd_rand]]
  [:zh_CN]带有预定义形参的引擎[![`minstd_rand]]]
[codeblock:declaration]
using minstd_rand =
      linear_congruential_engine<uint_fast32_t, 48'271, 0, 2'147'483'647>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`minstd_rand] shall produce the value 399268537.
[:zh_CN] 对默认构造的 [`minstd_rand] 类型的对象进行的连续第 10000 次调用应当产生
值 399268537。
[div:end]

[%@lib mt19937]
[%[:en]engines with predefined parameters[![`mt19937]]
  [:zh_CN]带有预定义形参的引擎[![`mt19937]]]
[codeblock:declaration]
using mt19937 =
      mersenne_twister_engine<uint_fast32_t, 32, 624, 397, 31,
       0x9908'b0df, 11, 0xffff'ffff, 7, 0x9d2c'5680, 15, 0xefc6'0000, 18, 1'812'433'253>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`mt19937] shall produce the value 4123659995.
[:zh_CN] 对默认构造的 [`mt19937] 类型的对象进行的连续第 10000 次调用应当产生值
4123659995。
[div:end]

[%@lib mt19937_64]
[%[:en]engines with predefined parameters[![`mt19937_64]]
  [:zh_CN]带有预定义形参的引擎[![`mt19937_64]]]
[codeblock:declaration]
using mt19937_64 =
      mersenne_twister_engine<uint_fast64_t, 64, 312, 156, 31,
       0xb502'6f5a'a966'19e9, 29, 0x5555'5555'5555'5555, 17,
       0x71d6'7fff'eda6'0000, 37, 0xfff7'eee0'0000'0000, 43, 6'364'136'223'846'793'005>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`mt19937_64] shall produce the value 9981545732273789042.
[:zh_CN] 对默认构造的 [`mt19937_64] 类型的对象进行的连续第 10000 次调用应当产生
值 9981545732273789042。
[div:end]

[%@lib ranlux24_base]
[%[:en]engines with predefined parameters[![`ranlux24_base]]
  [:zh_CN]带有预定义形参的引擎[![`ranlux24_base]]]
[codeblock:declaration]
using ranlux24_base =
      subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`ranlux24_base] shall produce the value 7937952.
[:zh_CN] 对默认构造的 [`ranlux24_base] 类型的对象进行的连续第 10000 次调用应当
产生值 7937952。
[div:end]

[%@lib ranlux48_base]
[%[:en]engines with predefined parameters[![`ranlux48_base]]
  [:zh_CN]带有预定义形参的引擎[![`ranlux48_base]]]
[codeblock:declaration]
using ranlux48_base =
      subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`ranlux48_base] shall produce the value 61839128582725.
[:zh_CN] 对默认构造的 [`ranlux48_base] 类型的对象进行的连续第 10000 次调用应当
产生值 61839128582725。
[div:end]

[%@lib ranlux24]
[%[:en]engines with predefined parameters[![`ranlux24]]
  [:zh_CN]带有预定义形参的引擎[![`ranlux24]]]
[codeblock:declaration]
using ranlux24 = discard_block_engine<ranlux24_base, 223, 23>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`ranlux24] shall produce the value 9901578.
[:zh_CN] 对默认构造的 [`ranlux24] 类型的对象进行的连续第 10000 次调用应当产生值
9901578。
[div:end]

[%@lib ranlux48]
[%[:en]engines with predefined parameters[![`ranlux48]]
  [:zh_CN]带有预定义形参的引擎[![`ranlux48]]]
[codeblock:declaration]
using ranlux48 = discard_block_engine<ranlux48_base, 389, 11>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`ranlux48] shall produce the value 249142670248501.
[:zh_CN] 对默认构造的 [`ranlux48] 类型的对象进行的连续第 10000 次调用应当产生值
249142670248501。
[div:end]

[%@lib knuth_b]
[%[:en]engines with predefined parameters[![`knuth_b]]
  [:zh_CN]带有预定义形参的引擎[![`knuth_b]]]
[codeblock:declaration]
using knuth_b = shuffle_order_engine<minstd_rand0,256>;
[codeblock:end]

[div:description]
[para:required]
[:en] The [$10000^\text{th}] consecutive invocation of a default-constructed
object of type [`knuth_b] shall produce the value 1112339016.
[:zh_CN] 对默认构造的 [`knuth_b] 类型的对象进行的连续第 10000 次调用应当产生值
1112339016。
[div:end]

[%@lib default_random_engine]
[%[:en]engines with predefined parameters[![`default_random_engine]]
  [:zh_CN]带有预定义形参的引擎[![`default_random_engine]]]
[codeblock:declaration [special implementation-defined] ]
using default_random_engine = [[redoc("[?impdefx [:en] type of [`default_random_engine]"
                                             "[:zh_CN] [`default-constructed] 的类型]")]];
[codeblock:end]

[div:description]
[para:remarks]
[:en] The choice of engine type named by this [`typedef] is [?impldef type of
[`default_random_engine]].
[:zh_CN] 选择哪个引擎类型作为这个 [`typedef] 所提名的类型是
[?impldef [`default_random_engine] 的类型]。

[begin:note]
[:en] The implementation may select this type on the basis of performance, size,
quality, or any combination of such factors, so as to provide at least
acceptable engine behavior for relatively casual, inexpert, and/or lightweight
use.
[:zh_CN] 实现可以基于性能、规模、质量，或者这些因素的任意组合来进行选择，以便为
相对来说偶然的，不专业的，以及轻量级的应用提供至少可接受的引擎行为。

[:en] Because different implementations may select different underlying engine
types, code that uses this [`typedef] need not generate identical sequences
across implementations.
[:zh_CN] 由于不同的实现可能为其选择不同的底层引擎类型，使用这个 [`typedef] 的
代码在不同实现上不一定会产生相同的序列。
[end:note]
[div:end]

[%:end#random.number.generation.predefined.engines.and.adaptors]
[%:end#random.number.engine.adaptor.with.predefined.parameters]
[%:end#random.number.engine.with.predefined.parameters]
