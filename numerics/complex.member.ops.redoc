[section#complex.member.ops
    [:en] Member operators
    [:zh_CN] 成员运算符
]

[%@library operator+=[!complex]]
[%@library complex[!operator+=]]
[codeblock:declaration]
constexpr complex<T>& operator+=(const T& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Adds the scalar value [`rhs] to the real part of the complex value
[`*this] and stores the result in the real part of [`*this], leaving the
imaginary part unchanged.
[:zh_CN] 将标量值 [`rhs] 加到复数值 [`*this] 的实部上，并将其结果存储到 [`*this]
的实部，保留其虚部不变。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator-=[!complex]]
[%@library complex[!operator-=]]
[codeblock:declaration]
constexpr complex<T>& operator-=(const T& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Subtracts the scalar value [`rhs] from the real part of the complex value
[`*this] and stores the result in the real part of [`*this], leaving the
imaginary part unchanged.
[:zh_CN] 从复数值 [`*this] 的实部上减去标量值 [`rhs]，并将其结果存储到 [`*this]
的实部，保留其虚部不变。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator*=[!complex]]
[%@library complex[!operator*=]]
[codeblock:declaration]
constexpr complex<T>& operator*=(const T& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Multiplies the scalar value [`rhs] by the complex value [`*this] and
stores the result in [`*this].
[:zh_CN] 将复数值 [`*this] 乘以标量值 [`rhs]，并将其结果存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator/=[!complex]]
[%@library complex[!operator/=]]
[codeblock:declaration]
constexpr complex<T>& operator/=(const T& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Divides the scalar value [`rhs] into the complex value [`*this] and stores
the result in [`*this].
[:zh_CN] 将复数值 [`*this] 除以标量值 [`rhs]，并将其结果存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator+=[!complex]]
[%@library complex[!operator+=]]
[codeblock:declaration]
template<class X> constexpr complex<T>& operator+=(const complex<X>& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Adds the complex value [`rhs] to the complex value [`*this] and stores the
sum in [`*this].
[:zh_CN] 对复数值 [`*this] 加上复数值 [`rhs]，并将它们的和结果存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator-=[!complex]]
[%@library complex[!operator-=]]
[codeblock:declaration]
template<class X> constexpr complex<T>& operator-=(const complex<X>& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Subtracts the complex value [`rhs] from the complex value [`*this] and
stores the difference in [`*this].
[:zh_CN] 从复数值 [`*this] 中减去复数值 [`rhs]，并将它们的差存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator*=[!complex]]
[%@library complex[!operator*=]]
[codeblock:declaration]
template<class X> constexpr complex<T>& operator*=(const complex<X>& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Multiplies the complex value [`rhs] by the complex value [`*this] and
stores the product in [`*this].
[:zh_CN] 将复数值 [`*this] 乘以复数值 [`rhs]，并将它们的积存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator/=[!complex]]
[%@library complex[!operator/=]]
[codeblock:declaration]
template<class X> constexpr complex<T>& operator/=(const complex<X>& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Divides the complex value [`rhs] into the complex value [`*this] and
stores the quotient in [`*this].
[:zh_CN] 将复数值 [`*this] 除以复数值 [`rhs]，并将它们的商存储到 [`*this] 中。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]
