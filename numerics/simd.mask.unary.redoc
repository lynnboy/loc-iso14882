[section#simd.mask.unary
    [:en] [`basic_mask] unary operator
    [:zh_CN] [`basic_mask] 一元运算符
]
[%@lib@member operator![!basic_mask]]
[%@lib@member operator+[!basic_mask]]
[%@lib@member operator-[!basic_mask]]
[%@lib@member operator~[!basic_mask]]
[codeblock:declaration]
constexpr basic_mask operator!() const noexcept;
constexpr basic_vec<[[redoc("*>")]]integer-from<Bytes>, Abi> operator+() const noexcept;
constexpr basic_vec<[[redoc("*>")]]integer-from<Bytes>, Abi> operator-() const noexcept;
constexpr basic_vec<[[redoc("*>")]]integer-from<Bytes>, Abi> operator~() const noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [^op] be the operator.
[:zh_CN] 令 [^op] 为运算符。

[para:returns]
[:en] A data-parallel object where the [$i^\text{th}] element is initialized to
the result of applying [^op] to [`operator`[`]([$i])] for all [$i] in the range
of [=range(0,size())].
[:zh_CN] 一个数据并行对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素被初始化为对 [`operator`[`]([$i])] 运用 [^op] 的结果。
[div:end]
