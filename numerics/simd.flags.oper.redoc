[section#simd.flags.oper
    [:en] [`flags] operators
    [:zh_CN] [`flags] 运算符
]

[codeblock:declaration]
template<class... Other>
  friend consteval auto operator|(flags a, flags<Other...> b);
[codeblock:end]

[div:description]
[para:returns]
[:en] A default-initialized object of type [`flags<Flags2...>] for some
[`Flags2] where every type in [`Flags2] is present either in template parameter
pack [`Flags] or in template parameter pack [`Other], and every type in template
parameter packs [`Flags] and [`Other] is present in [`Flags2].
[:zh_CN] 对于某个类型 [`Flags2] 的类型 [`flags<Flags2...>] 的默认初始化的对象，
其中 [`Flags2] 中的每个类型要么出现于模板形参包组 [`Flags] 中要么出现于模板形参包组
[`Other] 之中，并且模板形参包组 [`Flags] 和 [`Other] 中的每个类型都出现于 [`Flags2] 中。

[:en] If the packs [`Flags] and [`Other] contain two different specializations
[`[*overaligned-flag]<N1>] and [`[*overaligned-flag]<N2>], [`Flags2] is not
required to contain the specialization [`[*overaligned-flag]<std::min(N1, N2)>].
[:zh_CN] 如果包组 [`Flags] 和 [`Other] 包含两个不同的特例 [`[*overaligned-flag]<N1>]
和 [`[*overaligned-flag]<N2>]，那么 [`Flags2] 不必包含特例
[`[*overaligned-flag]<std::min(N1, N2)>]。
[div:end]
