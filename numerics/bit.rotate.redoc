[section#bit.rotate
    [:en] Rotating
    [:zh_CN] 旋转
]

[para]
[:en] In the following descriptions, let [`N] denote [`numeric_limits<T>::digits].
[:zh_CN] 下列描述中，令 [`N] 代表 [`numeric_limits<T>::digits]。

[%@lib rotl]
[codeblock:declaration]
template<class T>
  [[nodiscard]] constexpr T rotl(T x, int s) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`T] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] [`T] 是无符号整数类型（[#basic.fundamental]）。

[para]
[:en] Let [`r] be [`s % N].
[:zh_CN] 令 [`r] 为 [`s % N].

[para:returns]
[:en] If [`r] is [`0], [`x]; if [`r] is positive, [`(x << r) | (x >> (N - r))];
if [`r] is negative, [`rotr(x, -r)].
[:zh_CN] 当 [`r] 为 [`0] 时返回 [`x]；当 [`r] 为正数时返回
[`(x << r) | (x >> (N - r))]；当 [`r] 为负数时返回 [`rotr(x, -r)]。
[div:end]

[%@lib rotr]
[codeblock:declaration]
template<class T>
  [[nodiscard]] constexpr T rotr(T x, int s) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`T] is an unsigned integer type ([#basic.fundamental]).
[:zh_CN] [`T] 是无符号整数类型（[#basic.fundamental]）。

[para]
[:en] Let [`r] be [`s % N].
[:zh_CN] 令 [`r] 为 [`s % N].

[para:returns]
[:en] If [`r] is [`0], [`x]; if [`r] is positive, [`(x >> r) | (x << (N - r))];
if [`r] is negative, [`rotl(x, -r)].
[:zh_CN] 当 [`r] 为 [`0] 时返回 [`x]；当 [`r] 为正数时返回
[`(x >> r) | (x << (N - r))]；当 [`r] 为负数时返回 [`rotl(x, -r)]。
[div:end]
