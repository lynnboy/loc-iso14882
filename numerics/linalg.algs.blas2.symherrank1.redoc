[section#linalg.algs.blas2.symherrank1
    [:en] Symmetric or Hermitian Rank-1 (outer product) update of a matrix
    [:zh_CN] 矩阵的对称或厄米共轭的秩-1（外积）更新
]

[para]
[begin:note]
[:en] These functions correspond to the BLAS functions [`xSYR], [`xSPR], [`xHER],
and [`xHPR][#:cite@super#blas2].
[:zh_CN] 这些函数对应于 BLAS 函数 [`xSYR]、[`xSPR]、[`xHER] 和 [`xHPR]
[#:cite@super#blas2]。

[:en] They have overloads taking a scaling factor [`alpha], because it would be
impossible to express the update [$A = A - x x^T] otherwise.
[:zh_CN] 它们都有接受缩放因子 [`alpha] 的重载，因为若非如此，它就不可能表示更新
[$A = A - x x^T]。
[end:note]

[para]
[:en] The following elements apply to all functions in
[#linalg.algs.blas2.symherrank1].
[:zh_CN] 下列要素适用于 [#linalg.algs.blas2.symherrank1] 中的所有函数。

[para:mandates]
[list]
[item]
[:en] If [`InOutMat] has [`layout_blas_packed] layout, then the layout[=']s
[`Triangle] template argument has the same type as the function[=']s [`Triangle]
template argument;
[:zh_CN] 如果 [`InOutMat] 具有 [`layout_blas_packed] 布局，则该布局的 [`Triangle]
模板实参与函数的 [`Triangle] 模板实参为相同类型。
[item]
[:en] [`[*compatible-static-extents]<decltype(A), decltype(A)>(0, 1)]
is [`true]; and
[:zh_CN] [`[*compatible-static-extents]<decltype(A), decltype(A)>(0, 1)]
为 [`true]；并且
[item]
[:en] [`[*compatible-static-extents]<decltype(A), decltype(x)>(0, 0)]
is [`true].
[:zh_CN] [`[*compatible-static-extents]<decltype(A), decltype(x)>(0, 0)]
为 [`true]。
[list:end]

[para:expects]
[list]
[item]
[:en@~] [`A.extent(0)] equals [`A.extent(1)], and
[:zh_CN@~] [`A.extent(0)] 等于 [`A.extent(1)]，并且
[item]
[:en@~] [`A.extent(0)] equals [`x.extent(0)].
[:zh_CN@~] [`A.extent(0)] 等于 [`x.extent(0)]。
[list:end]

[para:complexity]
[:en] [?bigoh [`x.extent(0)] \times [`x.extent(0)]].
[:zh_CN] [?bigoh [`x.extent(0)] \times [`x.extent(0)]]。

[%@lib symmetric_matrix_rank_1_update]
[codeblock:declaration]
template<class Scalar, [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_1_update(Scalar alpha, InVec x, InOutMat A, Triangle t);
template<class ExecutionPolicy,
         class Scalar, [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_1_update(ExecutionPolicy&& exec,
                                      Scalar alpha, InVec x, InOutMat A, Triangle t);
[codeblock:end]

[div:description]
[para]
[:en] These functions perform a symmetric rank-1 update of the symmetric matrix
[`A], taking into account the [`Triangle] parameter that applies to [`A]
([#linalg.general]).
[:zh_CN] 这些函数实施对称矩阵 [`A] 的对称秩-1 更新，其中考虑在 [`A] 上应用的
[`Triangle] 形参（[#linalg.general]）。

[para:effects]
[:en] Computes a matrix [$A'] such that [$A' = A + \alpha x x^T], and assigns
each element of [$A'] to the corresponding element of [$A].
[:zh_CN] 计算矩阵 [$A'] 使得 [$A' = A + \alpha x x^T]，并将 [$A'] 的各个元素赋值
给 [$A] 的对应元素。
[div:end]

[%@lib symmetric_matrix_rank_1_update]
[codeblock:declaration]
template<[[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_1_update(InVec x, InOutMat A, Triangle t);
template<class ExecutionPolicy,
         [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_1_update(ExecutionPolicy&& exec, InVec x, InOutMat A, Triangle t);
[codeblock:end]

[div:description]
[para]
[:en] These functions perform a symmetric rank-1 update of the symmetric matrix
[`A], taking into account the [`Triangle] parameter that applies to [`A]
([#linalg.general]).
[:zh_CN] 这些函数实施对称矩阵 [`A] 的对称秩-1 更新，其中考虑在 [`A] 上应用的
[`Triangle] 形参（[#linalg.general]）。

[para:effects]
[:en] Computes a matrix [$A'] such that [$A' = A + x x^T], and assigns each
element of [$A'] to the corresponding element of [$A].
[:zh_CN] 计算矩阵 [$A'] 使得 [$A' = A + x x^T]，并将 [$A'] 的各个元素赋值给 [$A]
的对应元素。
[div:end]

[%@lib hermitian_matrix_rank_1_update]
[codeblock:declaration]
template<class Scalar, [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_1_update(Scalar alpha, InVec x, InOutMat A, Triangle t);
template<class ExecutionPolicy,
         class Scalar, [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_1_update(ExecutionPolicy&& exec,
                                      Scalar alpha, InVec x, InOutMat A, Triangle t);
[codeblock:end]

[div:description]
[para]
[:en] These functions perform a Hermitian rank-1 update of the Hermitian matrix
[`A], taking into account the [`Triangle] parameter that applies to [`A]
([#linalg.general]).
[:zh_CN] 这些函数实施厄米共轭矩阵 [`A] 的厄米共轭秩-1 更新，其中考虑在 [`A] 上
应用的 [`Triangle] 形参（[#linalg.general]）。

[para:effects]
[:en] Computes a matrix [$A'] such that [$A' = A + \alpha x x^H], and assigns
each element of [$A'] to the corresponding element of [$A].
[:zh_CN] 计算矩阵 [$A'] 使得 [$A' = A + \alpha x x^H]，并将 [$A'] 的各个元素赋值
给 [$A] 的对应元素。
[div:end]

[%@lib hermitian_matrix_rank_1_update]
[codeblock:declaration]
template<[[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_1_update(InVec x, InOutMat A, Triangle t);
template<class ExecutionPolicy,
         [[redoc("*:c>")]]in-vector InVec, [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_1_update(ExecutionPolicy&& exec, InVec x, InOutMat A, Triangle t);
[codeblock:end]

[div:description]
[para]
[:en] These functions perform a Hermitian rank-1 update of the Hermitian matrix
[`A], taking into account the [`Triangle] parameter that applies to [`A]
([#linalg.general]).
[:zh_CN] 这些函数实施厄米共轭矩阵 [`A] 的厄米共轭秩-1 更新，其中考虑在 [`A] 上
应用的 [`Triangle] 形参（[#linalg.general]）。

[para:effects]
[:en] Computes a matrix [$A'] such that [$A' = A + x x^H], and assigns each
element of [$A'] to the corresponding element of [$A].
[:zh_CN] 计算矩阵 [$A'] 使得 [$A' = A + x x^H]，并将 [$A'] 的各个元素赋值给 [$A]
的对应元素。
[div:end]
