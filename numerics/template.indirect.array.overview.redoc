[section#template.indirect.array.overview
    [:en] Overview
    [:zh_CN] 概述
]

[%@library indirect_array]
[%@library value_type[!indirect_array]]
[%@library indirect_array[!value_type]]
[codeblock:synopsis]
namespace std {
  template<class T> class indirect_array {
  public:
    using value_type = T;

    void operator=  (const valarray<T>&) const;
    void operator*= (const valarray<T>&) const;
    void operator/= (const valarray<T>&) const;
    void operator%= (const valarray<T>&) const;
    void operator+= (const valarray<T>&) const;
    void operator-= (const valarray<T>&) const;
    void operator^= (const valarray<T>&) const;
    void operator&= (const valarray<T>&) const;
    void operator|= (const valarray<T>&) const;
    void operator<<=(const valarray<T>&) const;
    void operator>>=(const valarray<T>&) const;

    indirect_array(const indirect_array&);
    ~indirect_array();
    const indirect_array& operator=(const indirect_array&) const;
    void operator=(const T&) const;

    indirect_array() = delete;  // [:en] as implied by declaring copy constructor above
                                // [|:zh_CN] 由上面声明复制构造函数所暗示的
  };
}
[codeblock:end]

[para]
[:en] This template is a helper template used by the indirect subscript operator
[:[:zh_CN] 这个模板是由以下间接下标运算符所使用的一种辅助模板。

[%@library operator`[`][!indirect_array]]
[%@library indirect_array[!operator`[`]]]
[codeblock:declaration]
indirect_array<T> valarray<T>::operator[](const valarray<size_t>&).
[codeblock:end]

[para]
[:en] It has reference semantics to a subset of an array specified by an
[`indirect_array].
[:zh_CN] 它提供引用语义，指代某个数组中由一个 [`indirect_array] 所指定的子集。

[:en] Thus, the expression [`a`[indirect`] = b;] has the effect of assigning the
elements of [`b] to the elements in [`a] whose indices appear in [`indirect].
[:zh_CN] 表达式 [`a`[indirect`] = b;] 的效果是将 [`b] 的各元素向 [`a] 中索引出现
于 [`indirect] 之中的各元素进行赋值。
