[section#linalg.algs.blas1.iamax
    [:en] Index of maximum absolute value of vector elements
    [:zh_CN] 向量元素中最大绝对值的索引
]

[codeblock:declaration]
template<[[redoc("*:c>")]]in-vector InVec>
  typename InVec::extents_type vector_idx_abs_max(InVec v);
template<class ExecutionPolicy, [[redoc("*:c>")]]in-vector InVec>
  typename InVec::extents_type vector_idx_abs_max(ExecutionPolicy&& exec, InVec v);
[codeblock:end]

[div:description]
[para]
[begin:note]
[:en] These functions correspond to the BLAS function [`IxAMAX][#:cite@super#blas1].
[:zh_CN] 这些函数对应于 BLAS 函数 [`IxAMAX][#:cite@super#blas1]。
[end:note]

[para]
[:en] Let [`T] be
[:zh_CN] 令 [`T] 为
[codeblock]
decltype([[redoc("*>")]]abs-if-needed([[redoc("*>")]]real-if-needed(declval<typename InVec::value_type>())) +
         [[redoc("*>")]]abs-if-needed([[redoc("*>")]]imag-if-needed(declval<typename InVec::value_type>())))
[codeblock:end]

[para:mandates]
[:en] [`declval<T>() < declval<T>()] is a valid expression.
[:zh_CN] [`declval<T>() < declval<T>()] 为有效表达式。

[para:returns]
[list]
[item]
[:en] [`numeric_limits<typename InVec::size_type>::max()] if [`v] has zero
elements;
[:zh_CN] 若 [`v] 有零个元素，则返回
[`numeric_limits<typename InVec::size_type>::max()]；
[item]
[:en] otherwise, the index of the first element of [`v] having largest absolute
value, if [`InVec::value_type] is an arithmetic type;
[:zh_CN] 否则，当 [`InVec::value_type] 为算术类型时，返回 [`v] 中具有最大绝对值
的首个元素的索引；
[item]
[:en] otherwise, the index of the first element [$[`v]_e] of [`v] for which
[:zh_CN] 否则，返回 [`v] 中使得
[codeblock]
[[redoc("*>")]]abs-if-needed([[redoc("*>")]]real-if-needed([[redoc("$[`v]_e")]])) + [[redoc("*>")]]abs-if-needed([[redoc("*>")]]imag-if-needed([[redoc("$[`v]_e]")]]))
[codeblock:end]
[:en@~] has the largest value.
[:zh_CN@~] 具有最大值的首个元素 [$[`v]_e] 的索引。
[list:end]
[div:end]
