[section#simd.cassign
    [:en] [`basic_simd] compound assignment
    [:zh_CN] [`basic_simd] 复合赋值
]

[codeblock:declaration]
friend constexpr basic_simd& operator+=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator-=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator*=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator/=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator%=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator&=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator|=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator^=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator<<=(basic_simd& lhs, const basic_simd& rhs) noexcept;
friend constexpr basic_simd& operator>>=(basic_simd& lhs, const basic_simd& rhs) noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [^op] be the operator.
[:zh_CN] 令 [^op] 为运算符。

[para:constraints]
[:en] [`requires (value_type a, value_type b) { a [^op] b; }] is [`true].
[:zh_CN] [`requires (value_type a, value_type b) { a [^op] b; }] 为 [`true]。

[para:effects]
[:en] These operators apply the indicated operator to [`lhs] and [`rhs] as
an element-wise operation.
[:zh_CN] 这些运算符按逐元素运算对 [`lhs] 和 [`rhs] 实施指定的运算符。

[para:returns]
[:en] [`lhs].
[:zh_CN] [`lhs]。
[div:end]

[codeblock:declaration]
friend constexpr basic_simd& operator<<=(basic_simd& lhs, [[redoc("*>")]]simd-size-type n) noexcept;
friend constexpr basic_simd& operator>>=(basic_simd& lhs, [[redoc("*>")]]simd-size-type n) noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [^op] be the operator.
[:zh_CN] 令 [^op] 为运算符。

[para:constraints]
[:en] [`requires (value_type a, [*simd-size-type] b) { a [^op] b; }] is [`true].
[:zh_CN] [`requires (value_type a, [*simd-size-type] b) { a [^op] b; }] 为 [`true]。

[para:effects]
[:en] Equivalent to: [`return operator [^op] (lhs, basic_simd(n));]
[:zh_CN] 等价于：[`return operator [^op] (lhs, basic_simd(n));]
[div:end]
