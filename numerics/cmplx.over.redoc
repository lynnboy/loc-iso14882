[section#cmplx.over
    [:en] Additional overloads
    [:zh_CN] 其他重载
]

[para]
[%@lib arg]
[%@lib conj]
[%@lib imag]
[%@lib norm]
[%@lib real]
[:en] The following function templates shall have additional overloads:
[:zh_CN] 以下函数模板应当具有额外的重载：

[codeblock:notation]
arg                   norm 
conj                  proj
imag                  real 
[codeblock:end]

[:en@~] where [`norm], [`conj], [`imag], and [`real] are [`:key constexpr]
overloads.
[:zh_CN@~] 其中的 [`norm]、[`conj]、[`imag] 和 [`real] 为 [`:key constexpr] 重载。

[para]
[:en]
[%overloads[!floating-point]]
The additional overloads shall be sufficient to ensure:
[:zh_CN]
[%重载[!浮点]]
额外的重载应当足以保证：

[list:ol@ndot]
[item]
[:en] If the argument has a floating-point type [`T], then it is effectively
cast to [`complex<T>].
[:zh_CN] 如果其实参具有浮点类型 [`T]，则它被实际转型为 [`complex<T>]。
[item]
[:en] Otherwise, if the argument has integer type, then it is effectively cast
to [`complex<double>].
[:zh_CN] 否则，如果实参具有整数类型，则它被有实际型为 [`complex<double>]。
[list:end]

[para]
[%@lib pow]
[:en] Function template [`pow] has additional overloads sufficient to ensure,
for a call with one argument of type [`complex<T1>] and the other argument of
type [`T2] or [`complex<T2>], both arguments are effectively cast to
[`complex<common_type_t<T1, T2>>].
[:zh_CN] 函数模板 [`pow] 应当具有额外的重载，足以保证，一个实参类型为
[`complex<T1>] 而另一个实参类型为 [`T2] 或 [`complex<T2>]，则两个实参都被实际
转换为 [`complex<common_type_t<T1, T2>>]。

[:en] If [`common_type_t<T1, T2>] is not well-formed, then the program is
ill-formed.
[:zh_CN] 若 [`common_type_t<T1, T2>] 非良构，则程序非良构。
