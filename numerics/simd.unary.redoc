[section#simd.unary
    [:en] [`basic_vec] unary operators
    [:zh_CN] [`basic_vec] 一元运算符
]

[para]
[:en] Effects in [#simd.unary] are applied as unary element-wise operations.
[:zh_CN] [#simd.unary] 中的[=effects]按一元逐元素运算实施。

[%@lib@member operator++[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec& operator++() noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (value_type a) { ++a; }] is [`true].
[:zh_CN] [`requires (value_type a) { ++a; }] 为 [`true]。

[para:effects]
[:en] Increments every element by one.
[:zh_CN] 每个元素增加一。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator++[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec operator++(int) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (value_type a) { a++; }] is [`true].
[:zh_CN] [`requires (value_type a) { a++; }] 为 [`true]。

[para:effects]
[:en] Increments every element by one.
[:zh_CN] 每个元素增加一。

[para:returns]
[:en] A copy of [`*this] before incrementing.
[:zh_CN] 增加前 [`*this] 的副本。
[div:end]

[%@lib@member operator--[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec& operator--() noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (value_type a) { --a; }] is [`true].
[:zh_CN] [`requires (value_type a) { --a; }] 为 [`true]。

[para:effects]
[:en] Decrements every element by one.
[:zh_CN] 每个元素减少一。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator--[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec operator--(int) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (value_type a) { a--; }] is [`true].
[:zh_CN] [`requires (value_type a) { a--; }] 为 [`true]。

[para:effects]
[:en] Decrements every element by one.
[:zh_CN] 每个元素减少一。

[para:returns]
[:en] A copy of [`*this] before decrementing.
[:zh_CN] 减少前 [`*this] 的副本。
[div:end]

[%@lib@member operator![!basic_vec]]
[codeblock:declaration]
constexpr mask_type operator!() const noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (const value_type a) { !a; }] is [`true].
[:zh_CN] [`requires (const value_type a) { !a; }] 为 [`true]。

[para:returns]
[:en] A [`basic_mask] object with the [$i^\text{th}] element set to
[`!operator`[`]([$i])] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`basic_mask] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素被设为 [`!operator`[`]([$i])]。
[div:end]

[%@lib@member operator~[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec operator~() const noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (const value_type a) { ~a; }] is [`true].
[:zh_CN] [`requires (const value_type a) { ~a; }] 为 [`true]。

[para:returns]
[:en] A [`basic_vec] object with the [$i^\text{th}] element set to
[`~operator`[`]([$i])] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`basic_vec] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素被设为 [`~operator`[`]([$i])]。
[div:end]

[%@lib@member operator++[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec operator+() const noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (const value_type a) { +a; }] is [`true].
[:zh_CN] [`requires (const value_type a) { +a; }] 为 [`true]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator--[!basic_vec]]
[codeblock:declaration]
constexpr basic_vec operator-() const noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`requires (const value_type a) { -a; }] is [`true].
[:zh_CN] [`requires (const value_type a) { -a; }] 为 [`true]。

[para:returns]
[:en] A [`basic_vec] object with the [$i^\text{th}] element is initialized to
[`-operator`[`]([$i])] for all [$i] in the range of [=range(0,size())].
[:zh_CN] 一个 [`basic_vec] 对象，对于范围 [=range(0,size())] 中的每个 [$i]，
其第 [$i] 个元素被初始化为 [`-operator`[`]([$i])]。
[div:end]
