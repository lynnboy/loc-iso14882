[section#linalg.algs.blas3.rank2k
    [:en] Rank-2k update of a symmetric or Hermitian matrix
    [:zh_CN] 对称或厄米共轭矩阵的秩-2k 更新
]

[para]
[begin:note]
[:en] These functions correspond to the BLAS functions [`xSYR2K] and [`xHER2K]
[#:cite@super#blas3].
[:zh_CN] 这些函数对应于 BLAS 函数 [`xSYR2K] 和 [`xHER2K][#:cite@super#blas3]。
[end:note]

[para]
[:en] The following elements apply to all functions in [#linalg.algs.blas3.rank2k].
[:zh_CN] 下列要素适用于 [#linalg.algs.blas3.rank2k] 中的所有函数。

[para:mandates]
[list]
[item]
[:en] If [`InOutMat] has [`layout_blas_packed] layout, then the layout[=']s
[`Triangle] template argument has the same type as the function[=']s [`Triangle]
template argument;
[:zh_CN] 如果 [`InOutMat] 具有 [`layout_blas_packed] 布局，则该布局的 [`Triangle]
模板实参与函数的 [`Triangle] 模板实参为相同类型；
[item]
[:en] [`[*possibly-multipliable]<decltype(A), decltype(B), decltype(C)>(0, 1)]
is [`true]; and
[:zh_CN] [`[*possibly-multipliable]<decltype(A), decltype(B), decltype(C)>(0, 1)]
为 [`true]；并且
[item]
[:en] [`[*compatible-static-extents]<decltype(A), decltype(A)>(0, 1)] is [`true].
[:zh_CN] [`[*compatible-static-extents]<decltype(A), decltype(A)>(0, 1)] 为
[`true]。
[list:end]

[para:expects]
[list]
[item]
[:en@~] [`[*addable](A, B, C)] is [`true], and
[:zh_CN@~] [`[*addable](A, B, C)] 等于 [`true]，并且
[item]
[:en@~] [`A.extent(0)] equals [`A.extent(1)].
[:zh_CN@~] [`A.extent(0)] 等于 [`A.extent(1)]。
[list:end]

[para:complexity]
[:en] [?bigoh [`A.extent(0)] \times [`A.extent(1)] \times [`C.extent(0)]].
[:zh_CN] [?bigoh [`A.extent(0)] \times [`A.extent(1)] \times [`C.extent(0)]]。

[codeblock:declaration]
template<[[redoc("*:c>")]]in-matrix InMat1, [[redoc("*:c>")]]in-matrix InMat2,
         [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_2k_update(InMat1 A, InMat2 B, InOutMat C, Triangle t);
template<class ExecutionPolicy, [[redoc("*:c>")]]in-matrix InMat1, [[redoc("*:c>")]]in-matrix InMat2,
         [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void symmetric_matrix_rank_2k_update(ExecutionPolicy&& exec,
                                       InMat1 A, InMat2 B, InOutMat C, Triangle t);
[codeblock:end]

[div:description]
[para:effects]
[:en] Computes a matrix [$C'] such that [$C' = C + A B^T + B A^T], and
assigns each element of [$C'] to the corresponding element of [$C].
[:zh_CN] 计算矩阵 [$C'] 使得 [$C' = C + A B^T + B A^T]，并将 [$C'] 的各个元素
赋值给 [$C] 的对应元素。
[div:end]

[codeblock:declaration]
template<[[redoc("*:c>")]]in-matrix InMat1, [[redoc("*:c>")]]in-matrix InMat2,
         [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_2k_update(InMat1 A, InMat2 B, InOutMat C, Triangle t);
template<class ExecutionPolicy,
         [[redoc("*:c>")]]in-matrix InMat1, [[redoc("*:c>")]]in-matrix InMat2,
         [[redoc("*:c>")]]possibly-packed-inout-matrix InOutMat, class Triangle>
  void hermitian_matrix_rank_2k_update(ExecutionPolicy&& exec,
                                       InMat1 A, InMat2 B, InOutMat C, Triangle t);
[codeblock:end]

[div:description]
[para:effects]
[:en] Computes a matrix [$C'] such that [$C' = C + A B^H + B A^H], and
assigns each element of [$C'] to the corresponding element of [$C].
[:zh_CN] 计算矩阵 [$C'] 使得 [$C' = C + A B^H + B A^H]，并将 [$C'] 的各个元素
赋值给 [$C] 的对应元素。
[div:end]
