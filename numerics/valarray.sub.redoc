[section#valarray.sub
    [:en] Subset operations
    [:zh_CN] 子集运算
]

[%@lib operator`[`][!valarray]]
[para]
[:en] The member [`operator`[`]] is overloaded to provide several ways to select
sequences of elements from among those controlled by [`*this].
[:zh_CN] 成员 [`operator`[`]] 经过了重载以提供从 [`*this] 所掌控的元素之中选择
元素的序列的几种不同方式。

[:en] Each of these operations returns a subset of the array.
[:zh_CN] 每个这种运算都返回该数组的一个子集。

[:en] The const-qualified versions return this subset as a new [`valarray]
object.
[:zh_CN] [`const] 限定的版本以一个新的 [`valarray] 对象的形式返回这个子集。

[:en] The non-const versions return a class template object which has reference
semantics to the original array, working in conjunction with various overloads
of [`operator=] and other assigning operators to allow selective replacement
(slicing) of the controlled sequence.
[:zh_CN] 非 [`const] 的版本则返回一个类模板对象，具有到原数组的引用语义，以之同
各种 [`operator=] 的重载和其他赋值操作一起，可以对其所掌控的序列进行选择性的替换
（切片）操作。

[:en] In each case the selected element(s) shall exist.
[:zh_CN] 任何情况下所选择的元素都应当存在。

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
valarray operator[](slice slicearr) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`valarray<T>] containing those elements of the controlled sequence
designated by [`slicearr].
[:zh_CN] 一个 [`valarray<T>]，包含由 [`slicearr] 所代表的受控序列中的各元素。

[begin:example]
[codeblock]
const valarray<char> v0("abcdefghijklmnop", 16);
// [`v0`[slice(2, 5, 3)`]] returns [`valarray<char>("cfilo", 5)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
slice_array<T> operator[](slice slicearr);
[codeblock:end]

[div:description]
[para:returns]
[:en] An object that holds references to elements of the controlled sequence
selected by [`slicearr].
[:zh_CN] 一个对象，持有指代由 [`slicearr] 所选定的受控序列中的各元素的各个引用。

[begin:example]
[codeblock]
valarray<char> v0("abcdefghijklmnop", 16);
valarray<char> v1("ABCDE", 5);
v0[slice(2, 5, 3)] = v1;
// [`v0 == valarray<char>("abAdeBghCjkDmnEp", 16);]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
valarray operator[](const gslice& gslicearr) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`valarray<T>] containing those elements of the controlled sequence
designated by [`gslicearr].
[:zh_CN] 一个 [`valarray<T>]，包含由 [`gslicearr] 所代表的受控序列中的各元素。

[begin:example]
[codeblock]
const valarray<char> v0("abcdefghijklmnop", 16);
const size_t lv[] = { 2, 3 };
const size_t dv[] = { 7, 2 };
const valarray<size_t> len(lv, 2), str(dv, 2);
// [:en] [`v0`[gslice(3, len, str)`]] returns \
[:zh_CN] [`v0`[gslice(3, len, str)`]] 返回
// [:en@~] [`valarray<char>("dfhkmo", 6)] \
[:zh_CN@~] [`valarray<char>("dfhkmo", 6)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
gslice_array<T> operator[](const gslice& gslicearr);
[codeblock:end]

[div:description]
[para:returns]
[:en] An object that holds references to elements of the controlled sequence
selected by [`gslicearr].
[:zh_CN] 一个对象，持有指代由 [`gslicearr] 所选定的受控序列中的各元素的各个引用。

[begin:example]
[codeblock]
valarray<char> v0("abcdefghijklmnop", 16);
valarray<char> v1("ABCDEF", 6);
const size_t lv[] = { 2, 3 };
const size_t dv[] = { 7, 2 };
const valarray<size_t> len(lv, 2), str(dv, 2);
v0[gslice(3, len, str)] = v1;
// [`v0 == valarray<char>("abcAeBgCijDlEnFp", 16)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
valarray operator[](const valarray<bool>& boolarr) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`valarray<T>] containing those elements of the controlled sequence
designated by [`boolarr].
[:zh_CN] 一个 [`valarray<T>]，包含由 [`boolarr] 所代表的受控序列中的各元素。

[begin:example]
[codeblock]
const valarray<char> v0("abcdefghijklmnop", 16);
const bool vb[] = { false, false, true, true, false, true };
// [:en] [`v0`[valarray<bool>(vb, 6)`]] returns \
[:zh_CN] [`v0`[valarray<bool>(vb, 6)`]] 返回
// [:en@~] [`valarray<char>("cdf", 3)] \
[:zh_CN@~] [`valarray<char>("cdf", 3)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
mask_array<T> operator[](const valarray<bool>& boolarr);
[codeblock:end]

[div:description]
[para:returns]
[:en] An object that holds references to elements of the controlled sequence
selected by [`boolarr].
[:zh_CN] 一个对象，持有指代由 [`boolarr] 所选定的受控序列中的各元素的各个引用。

[begin:example]
[codeblock]
valarray<char> v0("abcdefghijklmnop", 16);
valarray<char> v1("ABC", 3);
const bool vb[] = { false, false, true, true, false, true };
v0[valarray<bool>(vb, 6)] = v1;
// [`v0 == valarray<char>("abABeCghijklmnop", 16)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
valarray operator[](const valarray<size_t>& indarr) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`valarray<T>] containing those elements of the controlled sequence
designated by [`indarr].
[:zh_CN] 一个 [`valarray<T>]，包含由 [`indarr] 所代表的受控序列中的各元素。

[begin:example]
[codeblock]
const valarray<char> v0("abcdefghijklmnop", 16);
const size_t vi[] = { 7, 5, 2, 3, 8 };
// [:en] [`v0`[valarray<size_t>(vi, 5)`]] returns \
[:zh_CN] [`v0`[valarray<size_t>(vi, 5)`]] 返回
// [:en@~] [`valarray<char>("hfcdi", 5)] \
[:zh_CN@~] [`valarray<char>("hfcdi", 5)]
[codeblock:end]
[end:example]
[div:end]

[%@lib@member operator`[`][!valarray]]
[codeblock:declaration]
indirect_array<T> operator[](const valarray<size_t>& indarr);
[codeblock:end]

[div:description]
[para:returns]
[:en] An object that holds references to elements of the controlled sequence
selected by [`indarr].
[:zh_CN] 一个对象，持有指代由 [`indarr] 所选定的受控序列中的各元素的各个引用。

[begin:example]
[codeblock]
valarray<char> v0("abcdefghijklmnop", 16);
valarray<char> v1("ABCDE", 5);
const size_t vi[] = { 7, 5, 2, 3, 8 };
v0[valarray<size_t>(vi, 5)] = v1;
// [`v0 == valarray<char>("abCDeBgAEjklmnop", 16)]
[codeblock:end]
[end:example]
[div:end]
