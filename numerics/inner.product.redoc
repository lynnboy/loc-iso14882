[section#inner.product
    [:en] Inner product
    [:zh_CN] 内积
]

[%@library inner_product]
[codeblock:declaration]
template <class InputIterator1, class InputIterator2, class T>
  T inner_product(InputIterator1 first1, InputIterator1 last1,
                  InputIterator2 first2, T init);
template <class InputIterator1, class InputIterator2, class T,
          class BinaryOperation1, class BinaryOperation2>
  T inner_product(InputIterator1 first1, InputIterator1 last1,
                  InputIterator2 first2, T init,
                  BinaryOperation1 binary_op1,
                  BinaryOperation2 binary_op2);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`T] shall meet the requirements of [`CopyConstructible] (Table
[#tab:copyconstructible]) and [`CopyAssignable] (Table [#tab:copyassignable])
types.
[:zh_CN] [`T] 应当满足对于 [`CopyConstructible]（表 [#tab:copyconstructible]）和
[`CopyAssignable]（表 [#tab:copyassignable]）类型的规定。

[:en] In the ranges [=crange(first1,last1)] and
[=crange(first2,first2 + (last1 - first1))] [`binary_op1] and [`binary_op2]
shall neither modify elements nor invalidate iterators or subranges.
[#:note#fn:$section.1]
[:zh_CN] 在范围 [=crange(first1,last1)] 和
[=crange(first2,first2 + (last1 - first1))] 之中，[`binary_op1] 和 [`binary_op2]
都既不能改动任何元素，也不能使任何迭代器或子范围失效。[#:note#fn:$section.1]

[note:foot#fn:$section.1]
[:en] The use of fully closed ranges is intentional.
[:zh_CN] 特意使用全闭合范围。
[note:end]

[para:effects]
[:en] Computes its result by initializing the accumulator [`acc] with the
initial value [`init] and then modifying it with [`acc = acc + (*i1) * (*i2)] or
[`acc = binary_op1(acc, binary_op2(*i1, *i2))] for every iterator [`i1] in the
range [=range(first1,last1)] and iterator [`i2] in the range
[=range(first2,first2 + (last1 - first1))] in order.
[:zh_CN] 这样来计算其结果：以初始值 [`init] 来初始化累加数 [`acc]，然后对于范围
[=range(first,last)] 中的每个迭代器 [`i1] 和范围
[=range(first2,first2 + (last1 - first1))] 中的每个迭代器 [`i2]，依次通过
[`acc = acc + (*i1) * (*i2)] 或
[`acc = binary_op1(acc, binary_op2(*i1, *i2))] 对其进行改动。
[exit:description]
