[section#simd.mask.comparison
    [:en] [`basic_simd_mask] comparisons
    [:zh_CN] [`basic_simd_mask] 比较
]

[codeblock:declaration]
friend constexpr basic_simd_mask
  operator==(const basic_simd_mask&, const basic_simd_mask&) noexcept;
friend constexpr basic_simd_mask
  operator!=(const basic_simd_mask&, const basic_simd_mask&) noexcept;
friend constexpr basic_simd_mask
  operator>=(const basic_simd_mask&, const basic_simd_mask&) noexcept;
friend constexpr basic_simd_mask
  operator<=(const basic_simd_mask&, const basic_simd_mask&) noexcept;
friend constexpr basic_simd_mask
  operator>(const basic_simd_mask&, const basic_simd_mask&) noexcept;
friend constexpr basic_simd_mask
  operator<(const basic_simd_mask&, const basic_simd_mask&) noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [^op] be the operator.
[:zh_CN] 令 [^op] 为运算符。

[para:returns]
[:en] A [`basic_simd_mask] object initialized with the results of applying
[^op] to [`lhs] and [`rhs] as a binary element-wise operation.
[:zh_CN] 一个 [`basic_simd_mask] 对象，以按二元逐元素运算对 [`lhs] 和 [`rhs] 实施
[^op] 的结果初始化。
[div:end]
