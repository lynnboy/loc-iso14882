[section#linalg.helpers.conj
    [*conj-if-needed]
]

[para]
[:en] The name [*conj-if-needed] denotes an exposition-only function object.
[:zh_CN] 名字 [*conj-if-needed] 代表一个仅用于阐释的函数对象。

[:en] The expression [`[*conj-if-needed](E)] for a subexpression [`E] whose type
is [`T] is expression-equivalent to:
[:zh_CN] 对于 [`T] 类型的子表达式 [`E]，表达式 [`[*conj-if-needed](E)] 按表达式等价于：

[list]
[item]
[:en] [`conj(E)], if [`T] is not an arithmetic type and the expression [`conj(E)]
is valid, with overload resolution performed in a context that includes the declaration
[:zh_CN] 若 [`T] 不是算术类型，且在包含以下声明式的语境中进行重载决议后，表达式
[`conj(E)] 有效，则为 [`conj(E)]：
[codeblock]
template<class U> U conj(const U&) = delete;
[codeblock:end]

[:en] If the function selected by overload resolution does not return the
complex conjugate of its input, the program is ill-formed, no diagnostic required.
[:zh_CN] 如果重载决议所选中的函数并不返回其输入的复共轭，则程序非良构，无须诊断。

[item]
[:en] otherwise, [`E].
[:zh_CN] 否则，为 [`E]。
[list:end]
