[section#linalg.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] For the effects of all functions in [#linalg], when the effects are
described as [=lq]computes [$R = E][=rq] or [=lq]compute [$R = E][=rq]
(for some [$R] and mathematical expression [$E]), the following apply:
[:zh_CN] 对 [#linalg] 中的所有函数，若其效果被描述为“计算 [$R = E]”（对于某个
[$R] 和数学表达式 [$E]），则适用以下各项：
[list]
[item]
[:en] [$E] has the conventional mathematical meaning as written.
[:zh_CN] [$E] 具有其书写的传统数学含义。
[item]
[:en] The pattern [$x^T] should be read as [=lq]the transpose of [$x].[=rq]
[:zh_CN] 模式 [$x^T] 应当被读作“[$x] 的转置”。
[item]
[:en] The pattern [$x^H] should be read as [=lq]the conjugate transpose of [$x].[=rq]
[:zh_CN] 模式 [$x^H] 应当被读作“[$x] 的共轭转置”。
[item]
[:en] When [$R] is the same name as a function parameter whose type is a
template parameter with [`Out] in its name, the intent is that the result of the
computation is written to the elements of the function parameter [`R].
[:zh_CN] 如果 [$R] 与某个函数形参名字相同，且该形参的类型为名字中带有 [`Out] 的
模板形参，则其意图是，计算结果被写入到函数形参 [`R] 的各元素中。
[list:end]

[para]
[:en] Some of the functions and types in [#linalg] distinguish between
the [=lq]rows[=rq] and the [=lq]columns[=rq] of a matrix.
[:zh_CN] [#linalg] 中的一些函数和类型会区分矩阵的“行”和“列”。

[:en] For a matrix [`A] and a multidimensional index [`i, j] in [`A.extents()],
[:zh_CN] 对于矩阵 [`A] 和 [`A.extents()] 中的多维索引 [`i, j]，
[list]
[item]
[:en@~] [+:% row] [`i] of [`A] is the set of elements [`A`[i, k1`]]
for all [`k1] such that [`i, k1] is in [`A.extents()]; and
[:zh_CN@~] [`A] 的[+:% 行] [`i]，对于满足 [`i, k1] 处于 [`A.extents()] 中的所有
[`k1]，为元素集合 [`A`[i, k1`]]；而
[item]
[:en@~] [+:% column] [`j] of [`A] is the set of elements [`A`[k0, j`]]
for all [`k0] such that [`k0, j] is in [`A.extents()].
[:zh_CN@~] [`A] 的[+:% 列] [`j]，对于满足 [`k0, j] 处于 [`A.extents()] 中的所有
[`k0]，为元素集合 [`A`[k0, j`]]
[list:end]

[para]
[:en] Some of the functions in [#linalg] distinguish between
the [=lq]upper triangle,[=rq] [=lq]lower triangle,[=rq] and [=lq]diagonal[=rq]
of a matrix.
[:zh_CN] [#linalg] 中的一些函数会区分矩阵的“上三角”，“下三角”和“对角线”。
[list]
[item]
[:en] The [+diagonal] is the set of all elements of [`A] accessed by
[`A`[i,i`]] for 0 [$\le] [`i] < min([`A.extent(0)], [`A.extent(1)]).
[:zh_CN] [+对角线]是对于 0 [$\le] [`i] < min([`A.extent(0)], [`A.extent(1)])，
[`A`[i,i`]] 所访问的所有元素的集合。
[item]
[:en] The [+:adj upper[!triangle]] of a matrix [`A] is the set of all elements
of [`A] accessed by [`A`[i,j`]] with [`i] [$\le] [`j].
[:zh_CN] 矩阵 [`A] 的[+:adj 上[!三角]]，是对于 [`i] [$\le] [`j]，[`A`[i,j`]] 所
访问的所有元素的集合。
[:en] It includes the diagonal.
[:zh_CN] 它包含对角线。
[item]
[:en] The [+:adj lower[!triangle]] of [`A] is the set of all elements of [`A]
accessed by [`A`[i,j`]] with [`i] [$\ge] [`j].
[:zh_CN] 矩阵 [`A] 的[+:adj 下[!三角]]，是对于 [`i] [$\ge] [`j]，[`A`[i,j`]] 所
访问的所有元素的集合。
[:en] It includes the diagonal.
[:zh_CN] 它包含对角线。
[list:end]

[para]
[:en] For any function [`F] that takes a parameter named [`t], [`t] applies to
accesses done through the parameter preceding [`t] in the parameter list of [`F].
[:zh_CN] 对于接受名为 [`t] 的形参的任何函数 [`F]，[`t] 被应用于通过 [`F] 的
形参列表中 [`t] 的前一个形参所进行的访问。

[:en] Let [`m] be such an access-modified function parameter.
[:zh_CN] 令 [`m] 为这种被修饰访问的函数形参。

[:en] [`F] will only access the triangle of [`m] specified by [`t].
[:zh_CN] [`F] 仅会访问 [`t] 所指定的 [`m] 的三角部分。

[:en] For accesses [`m`[i, j`]] outside the triangle specified by [`t],
[`F] will use the value
[:zh_CN] 对于处于 [`t] 所指定的三角之外的访问 [`m`[i, j`]]，[`F] 将使用的值为
[list]
[item]
[:en@~] [`[*conj-if-needed](m`[j, i`])] if the name of [`F] starts with
[`hermitian],
[:zh_CN@~] 若 [`F] 的名字以 [`hermitian] 开始，则为 [`[*conj-if-needed](m`[j, i`])]，
[item]
[:en@~] [`m`[j, i`]] if the name of [`F] starts with [`symmetric], or
[:zh_CN@~] 若 [`F] 的名字以 [`symmetric] 开始，则为 [`m`[j, i`]]，或者
[item]
[:en@~] the additive identity if the name of [`F] starts with [`triangular].
[:zh_CN@~] 若 [`F] 的名字以 [`triangular] 开始，则为加法单位元。
[list:end]

[begin:example]
[:en] Small vector product accessing only specified triangle.
[:zh_CN] 小型向量乘积智慧访问指定的三角。

[:en] It would not be a precondition violation for the non-accessed
matrix element to be non-zero.
[:zh_CN] 未访问到的的矩阵元素非零，可能并不违反前条件。

[codeblock]
template<class Triangle>
void triangular_matrix_vector_2x2_product(
       mdspan<const float, extents<int, 2, 2>> m,
       Triangle t,
       mdspan<const float, extents<int, 2>> x,
       mdspan<float, extents<int, 2>> y) {

  static_assert(is_same_v<Triangle, lower_triangle_t> ||
                is_same_v<Triangle, upper_triangle_t>);

  if constexpr (is_same_v<Triangle, lower_triangle_t>) {
    y[0] = m[0,0] * x[0];       // [`+ 0 * x`[1`]]
    y[1] = m[1,0] * x[0] + m[1,1] * x[1];
  } else {                      // [`upper_triangle_t]
    y[0] = m[0,0] * x[0] + m[0,1] * x[1];
    y[1] = /* 0 * x[0] + */ m[1,1] * x[1];
  }
}
[codeblock:end]
[end:example]

[para]
[:en] For any function [`F] that takes a parameter named [`d], [`d] applies to
accesses done through the previous-of-the-previous parameter of [`d]
in the parameter list of [`F].
[:zh_CN] 对于接受名为 [`d] 的形参的任何函数 [`F]，[`d] 被应用于通过 [`F] 的形参
列表中先于 [`d] 两个位置的形参进行的访问。

[:en] Let [`m] be such an access-modified function parameter.
[:zh_CN] 令 [`m] 为这种被修饰访问的函数形参。

[:en] If [`d] specifies that an implicit unit diagonal is to be assumed, then
[:zh_CN] 如果 [`d] 指定了假定使用隐式单位对角线，则
[list]
[item]
[:en@~] [`F] will not access the diagonal of [`m]; and
[:zh_CN@~] [`F] 不会访问 [`m] 的对角线；且
[item]
[:en@~] the algorithm will interpret [`m] as if it has a unit diagonal, that is,
a diagonal each of whose elements behaves as a two-sided multiplicative identity
(even if [`m][=']s value type does not have a two-sided multiplicative identity).
[:zh_CN@~] 算法会将 [`m] 解读为如同它具有单位对角线，即对角线的每个元素都表现为
两侧可乘单位元（即便 [`m] 的值类型没有两侧可乘单位元也是如此）。
[list:end]

[:en] Otherwise, if [`d] specifies that an explicit diagonal is to be assumed,
then [`F] will access the diagonal of [`m].
[:zh_CN] 否则，如果 [`d] 指定了假定使用显式对角线，则 [`F] 会访问 [`m] 的对角线。

[para]
[:en] Within all the functions in [#linalg], any calls to [`abs], [`conj],
[`imag], and [`real] are unqualified.
[:zh_CN] [#linalg] 中的所有函数之内，任何对 [`abs]、[`conj]、[`imag] 和 [`real]
的调用都是无限定的。

[para]
[:en] Two [`mdspan] objects [`x] and [`y] [+:% alias] each other,
if they have the same extents [`e], and for every pack of integers [`i]
which is a multidimensional index in [`e],
[`x`[i...`]] and [`y`[i...`]] refer to the same element.
[:zh_CN] 两个 [`mdspan] 对象 [`x] 和 [`y]，如果它们具有相同尺度 [`e]，并且对于
可作为 [`e] 中的多维索引的每个整数包组 [`i]，[`x`[i...`]] 和 [`y`[i...`]] 指代
相同元素，则它们互为[+%: 别名]。

[begin:note]
[:en] This means that [`x] and [`y] view the same elements in the same order.
[:zh_CN] 这表示 [`x] 和 [`y] 以相同顺序查看同一组元素。
[end:note]

[para]
[:en] Two [`mdspan] objects [`x] and [`y] [+:% overlap] each other, if for some
pack of integers [`i] that is a multidimensional index in [`x.extents()], there
exists a pack of integers [`j] that is a multidimensional index in [`y.extents()],
such that [`x`[i....`]] and [`y`[j...`]] refer to the same element.
[:zh_CN] 两个 [`mdspan] 对象 [`x] 和 [`y]，如果对于某个作为 [`x.extents()] 中的
多维索引的整数包组 [`i]，存在一个作为 [`y.extents()] 中的多维索引的整数包组 [`j]，
使得 [`x`[i....`]] 和 [`y`[j...`]] 代表相同元素，则它们互相[+:% 重叠]。

[begin:note]
[:en] Aliasing is a special case of overlapping.
[:zh_CN] 别名是重叠的特殊情况。

[:en] If [`x] and [`y] do not overlap, then they also do not alias each other.
[:zh_CN] 如果 [`x] 和 [`y] 不重叠，则它们也不互为别名。
[end:note]
