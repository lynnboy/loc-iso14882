[section#valarray.assign
    [:en] Assignment
    [:zh_CN] 赋值
]

[%@library operator=[!valarray]]
[%@library valarray[!operator=]]
[codeblock:declaration]
valarray& operator=(const valarray& v);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Each element of the [`*this] array is assigned the value of the
corresponding element of [`v].
[:zh_CN] 数组 [`*this] 的各个元素分别以 [`v] 的对应元素的值进行赋值。

[:en] If the length of [`v] is not equal to the length of [`*this], resizes
[`*this] to make the two arrays the same length, as if by calling
[`resize(v.size())], before performing the assignment.
[:zh_CN] 若 [`v] 的长度不等于 [`*this] 的长度，则改变 [`*this] 的大小以使两个
数组的长度相同，如同在进行赋值之前调用 [`resize(v.size())]。

[para:ensures]
[:en] [`size() == v.size()].
[:zh_CN] [`size() == v.size()]。
[exit:description]

[%@library operator=[!valarray]]
[%@library valarray[!operator=]]
[codeblock:declaration]
valarray& operator=(valarray&& v) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] [`*this] obtains the value of [`v].
[:zh_CN] [`*this] 获取 [`v] 的值。

[:en] The value of [`v] after the assignment is not specified.
[:zh_CN] 赋值之后 [`v] 的值是未指明的。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。

[para:complexity]
[:en] Linear.
[:zh_CN] 线性。
[exit:description]

[%@library operator=[!valarray]]
[%@library valarray[!operator=]]
[codeblock:declaration]
valarray& operator=(initializer_list<T> il);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return *this = valarray(il);]
[:zh_CN] 等价于：[`return *this = valarray(il);]
[exit:description]

[%@library operator=[!valarray]]
[%@library valarray[!operator=]]
[codeblock:declaration]
valarray& operator=(const T& v);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Assigns [`v] to each element of [`*this].
[:zh_CN] 将 [`v] 赋值给 [`*this] 的每个元素。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator=[!valarray]]
[%@library valarray[!operator=]]
[codeblock:declaration]
valarray& operator=(const slice_array<T>&);
valarray& operator=(const gslice_array<T>&);
valarray& operator=(const mask_array<T>&);
valarray& operator=(const indirect_array<T>&);
[codeblock:end]

[enter:description]
[para:requires]
[:en] The length of the array to which the argument refers equals [`size()].
[:zh_CN] 实参所指代的数组的长度应当等于 [`size()]。

[:en] The value of an element in the left-hand side of a [`valarray] assignment
operator does not depend on the value of another element in that left-hand side.
[:zh_CN] [`valarray] 赋值运算符的左侧数组中的元素的值，不依赖于此左侧数组中的
其他元素的值。

[para]
[:en] These operators allow the results of a generalized subscripting operation
to be assigned directly to a [`valarray].
[:zh_CN] 这些运算符允许将一般化下标操作的结果直接赋值给一个 [`valarray]。
[exit:description]
