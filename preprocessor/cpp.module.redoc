[section#cpp.module
    [:en] Module directive
    [:zh_CN] 模块指令

[%  [:en] preprocessing directive[!module]
    [:zh_CN] 预处理指令[!模块] ]
]

[syntax]
[rule pp-module [:zh_CN] 预处理模块 ]
    [| [`:opt:key export] [`:key module] [~:opt pp-tokens] [`;] new-line ]
[rule:end]
[syntax:end]

[para]
[:en]
A [~pp-module] shall not appear in a context where [`module] or (if it is the
first token of the [~pp-module]) [`export] is an identifier defined as an
object-like macro.
[:zh_CN]
[~预处理模块]不能出现于已将 [`module] 或（当其为[~预处理模块]的第一个记号时）
[`export] 定义为对象式宏的标识符的语境之中。

[para]
[:en]
Any preprocessing tokens after the [`module] preprocessing token in the [`module]
directive are processed just as in normal text.
[:zh_CN]
[`module] 指令中的预处理记号 [`module] 之后的任何预处理记号仅被当做普通文本处理。

[begin:note]
[:en]
Each identifier currently defined as a macro name is replaced by its replacement
list of preprocessing tokens.
[:zh_CN]
每个当前已被定义为宏名的标识符均被替换为其预处理记号替换列表。
[end:note]

[para]
[:en]
The [`module] and [`export] (if it exists) preprocessing tokens are replaced by
the [~module-keyword] and [~export-keyword] preprocessing tokens respectively.
[:zh_CN]
预处理记号 [`module] 和 [`export]（若其存在）被分别替换为预处理记号[~模块关键字]
和[~导出关键字]。

[begin:note]
[:en]
This makes the line no longer a directive so it is not removed at the end of
phase 4.
[:zh_CN]
这使代码行不再是一条指令，因而不会在阶段 4 末尾被移除。
[end:note]
