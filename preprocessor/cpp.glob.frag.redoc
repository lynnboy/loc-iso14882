[section#cpp.glob.frag
    [:en] Global module fragment
    [:zh_CN] 全局模块分段
]

[syntax]
[rule pp-global-module-fragment [:zh_CN] 预处理全局模块分段 ]
    [| [`module] [`;] pp-balanced-token-seq [`module] ]
[rule:end]

[rule pp-balanced-token-seq [:zh_CN] 预处理平衡记号序列 ]
    [| pp-balanced-token ]
    [| pp-balanced-token-seq pp-balanced-token ]
[rule:end]

[rule pp-balanced-token [:zh_CN] 预处理平衡记号 ]
    [| pp-ldelim [~:opt pp-balanced-token] pp-rdelim ]
    [|:descriptive
        [:en] any [~preprocessing-token] other than a [~pp-ldelim] or [~pp-rdelim]
        [:zh_CN] 除[~预处理左分隔]或[~预处理右分隔]之外的任何[~预处理记号]
    ]
[rule:end]

[rule:oneof pp-ldelim [:zh_CN] 预处理左分隔 ]
    [|  (    [=`[]    {    <:    <% ]
[rule:end]

[rule:oneof pp-rdelim [:zh_CN] 预处理右分隔 ]
    [|  )    [=`]]    }    :>    %> ]
[rule:end]
[syntax:end]

[para]
[:en]
If the first two preprocessing tokens at the start of phase 4 of translation
are [`module] [`;], the result of preprocessing shall begin with a
[~pp-global-module-fragment] for which all [~preprocessing-token]s in the
[~pp-balanced-token-seq] were produced directly or indirectly by source file
inclusion ([#cpp.include]), and for which the second [`module]
[~preprocessing-token] was not produced by source file inclusion or macro
replacement ([#cpp.replace]).
[:zh_CN]
如果翻译阶段 4 开始时的前两个预处理记号是“[`module] [`;]”，则预处理的结果应当以
一个[~预处理全局模块分段]开始，且其[~预处理平衡记号序列]中的所有[~预处理记号]都
是直接或间接通过源文件包含（[#cpp.include]）所产生的，并且其第二个 [`module]
[~预处理记号]并非由源文件包含或宏替换（[#cpp.replace]）所产生。

[:en]
Otherwise, the first two preprocessing tokens at the end of phase 4 of
translation shall not be [`module] [`;].
[:zh_CN]
否则，翻译阶段 4 结束时前两个预处理记号不能是“[`module] [`;]”。
