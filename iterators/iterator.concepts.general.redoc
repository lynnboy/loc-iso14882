[section#iterator.concepts.general
    [:en] General
    [:zh_CN] 综述
]

[para]
[:en] For a type [`I], let [`[^ITER_TRAITS](I)] denote the type [`I] if
[`iterator_traits<I>] names a specialization generated from the primary template.
[:zh_CN] 对于类型 [`I]，令 [`[^ITER_TRAITS](I)] 在当 [`iterator_traits<I>] 指名
从主模板生成的特例时，代表类型 [`I]。

[:en] Otherwise, [`[^ITER_TRAITS](I)] denotes [`iterator_traits<I>].
[:zh_CN] 否则，[`[^ITER_TRAITS](I)] 代表 [`iterator_traits<I>]。

[list]
[item]
[:en] If the [~qualified-id] [`[^ITER_TRAITS](I)::iterator_concept] is valid and
names a type, then [`[^ITER_CONCEPT](I)] denotes that type.
[:zh_CN] 如果[~限定标识] [`[^ITER_TRAITS](I)::iterator_concept] 有效且指名了某个
类型，则 [`[^ITER_CONCEPT](I)] 代表这个类型。

[item]
[:en] Otherwise, if the [~qualified-id] [`[^ITER_TRAITS](I)::iterator_category]
is valid and names a type, then [`[^ITER_CONCEPT](I)] denotes that type.
[:zh_CN] 否则，如果[~限定标识] [`[^ITER_TRAITS](I)::iterator_category] 有效且
指名了某个类型，则 [`[^ITER_CONCEPT](I)] 代表这个类型。

[item]
[:en] Otherwise, if [`iterator_traits<I>] names a specialization generated from
the primary template, then [`[^ITER_CONCEPT](I)] denotes
[`random_access_iterator_tag].
[:zh_CN] 否则，如果 [`iterator_traits<I>] 指名从主模板生成的特例，则
[`[^ITER_CONCEPT](I)] 代表 [`random_access_iterator_tag]。

[item]
[:en] Otherwise, [`[^ITER_CONCEPT](I)] does not denote a type.
[:zh_CN] 否则，[`[^ITER_CONCEPT](I)] 不代表某个类型。
[list:end]

[para]
[begin:note]
[:en] [`[^ITER_TRAITS]] enables independent syntactic determination of an
iterator[=']s category and concept.
[:zh_CN] [`[^ITER_TRAITS]] 允许以语法独立的方式确定迭代器的类别和概念。
[end:note]

[begin:example]
[codeblock]
struct I {
  using value_type = int;
  using difference_type = int;

  int operator*() const;
  I& operator++();
  I operator++(int);
  I& operator--();
  I operator--(int);

  bool operator==(I) const;
  bool operator!=(I) const;
};
[codeblock:end]

[:en] [`iterator_traits<I>::iterator_category] denotes [`input_iterator_tag],
and [`[^ITER_CONCEPT](I)] denotes [`random_access_iterator_tag].
[:zh_CN] [`iterator_traits<I>::iterator_category] 代表 [`input_iterator_tag]，而
[`[^ITER_CONCEPT](I)] 代表 [`random_access_iterator_tag]。
[end:example]
