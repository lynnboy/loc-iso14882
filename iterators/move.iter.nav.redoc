[section#move.iter.nav
    [:en] Navigation
    [:zh_CN] 导航
]

[%@lib@member operator++[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator& operator++();
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`++current].
[:zh_CN] 如同执行 [`++current]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator++[!move_iterator]]
[codeblock:declaration]
constexpr auto operator++(int);
[codeblock:end]

[div:description]
[para:effects]
[:en] If [`Iterator] models [`:c forward_iterator], equivalent to:
[:zh_CN] 若 [`Iterator] 构成 [`:c forward_iterator]，等价于：
[codeblock:notation]
move_iterator tmp = *this;
++current;
return tmp;
[codeblock:end]
[:en] Otherwise, equivalent to [`++current].
[:zh_CN] 否则，等价于 [`++current]。
[div:end]

[%@lib@member operator--[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator& operator--();
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`--current].
[:zh_CN] 如同执行 [`--current]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator--[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator operator--(int);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by:
[:zh_CN] 如同执行：

[codeblock:notation]
move_iterator tmp = *this;
--current;
return tmp;
[codeblock:end]
[div:end]

[%@lib@member operator+[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator operator+(difference_type n) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`move_iterator(current + n)].
[:zh_CN] [`move_iterator(current + n)]。
[div:end]

[%@lib@member operator+=[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator& operator+=(difference_type n);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by: [`current += n;]
[:zh_CN] 如同执行：[`current += n;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator-[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator operator-(difference_type n) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`move_iterator(current - n)].
[:zh_CN] [`move_iterator(current - n)]。
[div:end]

[%@lib@member operator-=[!move_iterator]]
[codeblock:declaration]
constexpr move_iterator& operator-=(difference_type n);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by: [`current -= n;]
[:zh_CN] 如同执行：[`current -= n;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]
