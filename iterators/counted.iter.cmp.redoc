[section#counted.iter.cmp
    [:en] Comparisons
    [:zh_CN] 比较
]

[%@library operator==[!counted_iterator]]
[%@library counted_iterator[!operator==]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator==(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[enter:description]
[para:expects]
[:en] [`x] and [`y] refer to elements of the same sequence
([#counted.iterator]).
[:zh_CN] [`x] 和 [`y] 指代同一个序列中的元素（[#counted.iterator]）。

[para:effects]
[:en] Equivalent to: [`return x.length == y.length;]
[:zh_CN] 等价于：[`return x.length == y.length;]
[exit:description]

[%@library operator==[!counted_iterator]]
[%@library counted_iterator[!operator==]]
[codeblock:declaration]
friend constexpr bool operator==(
  const counted_iterator& x, default_sentinel_t);
friend constexpr bool operator==(
  default_sentinel_t, const counted_iterator& x);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return x.length == 0;]
[:zh_CN] 等价于：[`return x.length == 0;]
[exit:description]

[%@library operator!=[!counted_iterator]]
[%@library counted_iterator[!operator!=]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator!=(
    const counted_iterator& x, const counted_iterator<I2>& y);
friend constexpr bool operator!=(
  const counted_iterator& x, default_sentinel_t y);
friend constexpr bool operator!=(
  default_sentinel_t x, const counted_iterator& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return !(x == y);]
[:zh_CN] 等价于：[`return !(x == y);]
[exit:description]

[%@library operator<[!counted_iterator]]
[%@library counted_iterator[!operator<]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator<(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[enter:description]
[para:expects]
[:en] [`x] and [`y] refer to elements of the same sequence
([#counted.iterator]).
[:zh_CN] [`x] 和 [`y] 指代同一个序列中的元素（[#counted.iterator]）。

[para:effects]
[:en] Equivalent to: [`return y.length < x.length;]
[:zh_CN] 等价于：[`return y.length < x.length;]

[para]
[enter:note]
[:en] The argument order in the [=Effects] element is reversed because [`length]
counts down, not up.
[:zh_CN] [=Effects] 部分中的实参顺序有所反转，这是因为 [`length] 是向下而非向上
计数的。
[exit:note]
[exit:description]

[%@library operator>[!counted_iterator]]
[%@library counted_iterator[!operator>]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator>(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return y < x;]
[:zh_CN] 等价于：[`return y < x;]
[exit:description]

[%@library operator<=[!counted_iterator]]
[%@library counted_iterator[!operator<=]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator<=(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return !(y < x);]
[:zh_CN] 等价于：[`return !(y < x);]
[exit:description]

[%@library operator>=[!counted_iterator]]
[%@library counted_iterator[!operator>=]]
[codeblock:declaration]
template<Common<I> I2>
  friend constexpr bool operator>=(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return !(x < y);]
[:zh_CN] 等价于：[`return !(x < y);]
[exit:description]
