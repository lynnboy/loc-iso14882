[section#counted.iter.cmp
    [:en] Comparisons
    [:zh_CN] 比较
]

[%@lib@member operator==[!counted_iterator]]
[codeblock:declaration]
template<common_with<I> I2>
  friend constexpr bool operator==(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[div:description]
[para:expects]
[:en] [`x] and [`y] refer to elements of the same sequence
([#counted.iterator]).
[:zh_CN] [`x] 和 [`y] 指代同一个序列中的元素（[#counted.iterator]）。

[para:effects]
[:en] Equivalent to: [`return x.length == y.length;]
[:zh_CN] 等价于：[`return x.length == y.length;]
[div:end]

[%@lib@member operator==[!counted_iterator]]
[codeblock:declaration]
friend constexpr bool operator==(
  const counted_iterator& x, default_sentinel_t);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return x.length == 0;]
[:zh_CN] 等价于：[`return x.length == 0;]
[div:end]

[%@lib@member operator<=>[!counted_iterator]]
[codeblock:declaration]
template<common_with<I> I2>
  friend constexpr strong_ordering operator<=>(
    const counted_iterator& x, const counted_iterator<I2>& y);
[codeblock:end]

[div:description]
[para:expects]
[:en] [`x] and [`y] refer to elements of the same sequence
([#counted.iterator]).
[:zh_CN] [`x] 和 [`y] 指代同一个序列中的元素（[#counted.iterator]）。

[para:effects]
[:en] Equivalent to: [`return y.length <=> x.length;]
[:zh_CN] 等价于：[`return y.length <=> x.length;]

[para]
[begin:note]
[:en] The argument order in the [=effects] element is reversed because [`length]
counts down, not up.
[:zh_CN] [=effects] 部分中的实参顺序有所反转，这是因为 [`length] 是向下而非向上
计数的。
[end:note]
[div:end]
