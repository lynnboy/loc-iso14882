[section#reverse.iter.nonmember
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@library operator-[!reverse_iterator]]
[%@library reverse_iterator[!operator-]]
[codeblock:declaration]
template<class Iterator1, class Iterator2>
    constexpr auto operator-(
    const reverse_iterator<Iterator1>& x,
    const reverse_iterator<Iterator2>& y) -> decltype(y.base() - x.base());
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`y.current - x.current].
[:zh_CN] [`y.current - x.current]。
[exit:description]

[%@library operator+[!reverse_iterator]]
[%@library reverse_iterator[!operator+]]
[codeblock:declaration]
template<class Iterator>
  constexpr reverse_iterator<Iterator> operator+(
    typename reverse_iterator<Iterator>::difference_type n,
    const reverse_iterator<Iterator>& x);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`reverse_iterator<Iterator> (x.current - n)].
[:zh_CN] [`reverse_iterator<Iterator> (x.current - n)]。
[exit:description]

[%@library reverse_iterator
    [!make_reverse_iterator
        [:en] non-member function
        [:zh_CN] 非成员函数
    ]]
[%@library make_reverse_iterator]
[codeblock:declaration]
template<class Iterator>
  constexpr reverse_iterator<Iterator> make_reverse_iterator(Iterator i);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`reverse_iterator<Iterator>(i)].
[:zh_CN] [`reverse_iterator<Iterator>(i)]。
[exit:description]
