[section#iterator.concept.sentinel
    [:en] Concept [`Sentinel]
    [:zh_CN] 概念 [`Sentinel]
]

[para]
[:en] The [`Sentinel] concept specifies the relationship between an [`Iterator]
type and a [`Semiregular] type whose values denote a range.
[:zh_CN] [`Sentinel] 概念指定了一个 [`Iterator] 和一个代表某个范围的
[`Semiregular] 类型之间的关系。

[%@library Sentinel]
[codeblock:declaration [!:var can-reference] ]
template<class S, class I>
  concept Sentinel =
    Semiregular<S> &&
    Iterator<I> &&
    [*weakly-equality-comparable-with]<S, I>; // [:en] See [#concept.equalitycomparable]
                                              // [|:zh_CN] 见 [#concept.equalitycomparable]
[codeblock:end]

[enter:description]
[para]
[:en] Let [`s] and [`i] be values of type [`S] and [`I] such that [=range(i,s)]
denotes a range.
[:zh_CN] 令 [`s] 和 [`i] 为 [`S] 和 [`I] 类型的值，并使得 [=range(i,s)] 代表一个
范围。

[:en] Types [`S] and [`I] model [`Sentinel<S, I>] only if
[:zh_CN] 仅当符合以下条件时 [`S] 和 [`I] 构成 [`Sentinel<S, I>]：

[list]
[item]
[:en] [`i == s] is well-defined.
[:zh_CN] [`i == s] 良构。

[item]
[:en] If [`bool(i != s)] then [`i] is dereferenceable and [=range(++i,s)]
denotes a range.
[:zh_CN] 若 [`bool(i != s)]，则 [`i] 可解引用，且 [=range(++i,s)] 代表一个范围。
[list:end]
[exit:description]

[para]
[:en] The domain of [`==] is not static.
[:zh_CN] [`==] 的定义域并不是静态的。

[:en] Given an iterator [`i] and sentinel [`s] such that [=range(i,s)] denotes
a range and [`i != s], [`i] and [`s] are not required to continue to denote a
range after incrementing any other iterator equal to [`i].
[:zh_CN] 给定迭代器 [`i] 和哨位 [`s] 使得 [=range(i,s)] 代表一个范围且
[`i != s]，对等于 [`i] 的任何其他迭代器进行增量之后，并不要求 [`i] 和 [`s] 继续
代表一个范围。

[:en] Consequently, [`i == s] is no longer required to be well-defined.
[:zh_CN] 因此，[`i == s] 也不再要求是良构的。
