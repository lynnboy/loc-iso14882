[section#iterator.concept.sentinel
    [:en] Concept [`:c sentinel_for]
    [:zh_CN] 概念 [`:c sentinel_for]
]

[para]
[:en] The [`:c sentinel_for] concept specifies the relationship between an
[`:c input_or_output_iterator] type and a [`:c semiregular] type whose values
denote a range.
[:zh_CN] [`:c sentinel_for] 概念指定了一个 [`:c input_or_output_iterator] 和一个
代表某个范围的 [`:c semiregular] 类型之间的关系。

[codeblock:declaration]
template<class S, class I>
  concept [[redoc("`:c@def", "i>")]]sentinel_for =
    semiregular<S> &&
    input_or_output_iterator<I> &&
    [*weakly-equality-comparable-with]<S, I>; // [:en] See [#concept.equalitycomparable] \
                                                 [:zh_CN] 见 [#concept.equalitycomparable]
[codeblock:end]

[begin:description]
[para]
[:en] Let [`s] and [`i] be values of type [`S] and [`I] such that [=range(i,s)]
denotes a range.
[:zh_CN] 令 [`s] 和 [`i] 为 [`S] 和 [`I] 类型的值，并使得 [=range(i,s)] 代表一个
范围。

[:en] Types [`S] and [`I] model [`[`:c sentinel_for]<S, I>] only if
[:zh_CN] 仅当符合以下条件时 [`S] 和 [`I] 构成 [`[`:c sentinel_for]<S, I>]：

[list]
[item]
[:en] [`i == s] is well-defined.
[:zh_CN] [`i == s] 良构。

[item]
[:en] If [`bool(i != s)] then [`i] is dereferenceable and [=range(++i,s)]
denotes a range.
[:zh_CN] 若 [`bool(i != s)]，则 [`i] 可解引用，且 [=range(++i,s)] 代表一个范围。
[list:end]
[end:description]

[para]
[:en] The domain of [`==] is not static.
[:zh_CN] [`==] 的定义域并不是静态的。

[:en] Given an iterator [`i] and sentinel [`s] such that [=range(i,s)] denotes
a range and [`i != s], [`i] and [`s] are not required to continue to denote a
range after incrementing any other iterator equal to [`i].
[:zh_CN] 给定迭代器 [`i] 和哨位 [`s] 使得 [=range(i,s)] 代表一个范围且
[`i != s]，对等于 [`i] 的任何其他迭代器进行增量之后，并不要求 [`i] 和 [`s] 继续
代表一个范围。

[:en] Consequently, [`i == s] is no longer required to be well-defined.
[:zh_CN] 因此，[`i == s] 也不再要求是良构的。
