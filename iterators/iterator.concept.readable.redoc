[section#iterator.concept.readable
    [:en] Concept [`:c readable]
    [:zh_CN] 概念 [`:c readable]
]

[para]
[:en] Types that are readable by applying [`operator*] model the [`:c readable]
concept, including pointers, smart pointers, and iterators.
[:zh_CN] 可以通过运用 [`operator*] 进行读取的类型构成 [`:c readable] 概念，包括
指针、智能指针和迭代器。

[codeblock:synopsis]
template<class In>
  concept [[redoc("`:c@def", "i>")]]readable =
    requires {
      typename iter_value_t<In>;
      typename iter_reference_t<In>;
      typename iter_rvalue_reference_t<In>;
    } &&
    common_reference_with<iter_reference_t<In>&&, iter_value_t<In>&> &&
    common_reference_with<iter_reference_t<In>&&, iter_rvalue_reference_t<In>&&> &&
    common_reference_with<iter_rvalue_reference_t<In>&&, const iter_value_t<In>&>;
[codeblock:end]

[para]
[:en] Given a value [`i] of type [`I], [`I] models [`:c readable] only if the
expression [`*i] is equality-preserving.
[:zh_CN] 给定 [`I] 类型的值 [`i]，仅当表达式 [`*i] 维持相等性时 [`I] 构成
[`:c readable]。

[begin:note]
[:en] The expression [`*i] is indirectly required to be valid via the
exposition-only [*dereferenceable] concept ([#iterator.synopsis]).
[:zh_CN] 表达式 [`*i] 被间接通过仅用于阐释的 [*dereferenceable] 概念
（[#iterator.synopsis]）要求时有效的。
[end:note]
