[section#range.iter.op.distance
    [:] [`ranges::distance]
]

[%@library distance]
[codeblock:declaration]
template<input_or_output_iterator I, sentinel_for<I> S>
  constexpr iter_difference_t<I> ranges::distance(I first, S last);
[codeblock:end]

[enter:description]
[para:expects]
[:en] [=range(first,last)] denotes a range, or [=range(last,first)] denotes
a range and [`S] and [`I] model [`same_as<S, I> && sized_sentinel_for<S, I>].
[:zh_CN] [=range(first,last)] 代表一个范围，或者 [=range(last,first)] 代表一个
范围且 [`S] 和 [`I] 构成 [`same_as<S, I> && sized_sentinel_for<S, I>]。

[para:effects]
[:en] If [`S] and [`I] model [`sized_sentinel_for<S, I>], returns
[`(last - first)]; otherwise, returns the number of increments needed to get
from [`first] to [`last].
[:zh_CN] 若 [`S] 和 [`I] 构成 [`sized_sentinel_for<S, I>]，则返回
[`(last - first)]；否则，返回从 [`first] 到 [`last] 所需要的增量次数。
[exit:description]

[%@library distance]
[codeblock:declaration]
template<Range R>
  constexpr range_difference_t<R> ranges::distance(R&& r);
[codeblock:end]

[enter:description]
[para:expects]
[:en] If [`R] models [`sized_range], equivalent to:
[:zh_CN] 当 [`R] 构成 [`sized_range] 时，等价于：

[codeblock]
return static_cast<range_difference_t<R>>(ranges::size(r));     // [#range.prim.size]
[codeblock:end]

[:en] Otherwise, equivalent to:
[:zh_CN] 否则，等价于：

[codeblock]
return ranges::distance(ranges::begin(r), ranges::end(r));      // [#range.access]
[codeblock:end]
[exit:description]
