[section#range.iter.op.distance
    [:] [`ranges::distance]
]

[%@library distance]
[codeblock:declaration]
template<Iterator I, Sentinel<I> S>
  constexpr iter_difference_t<I> ranges::distance(I first, S last);
[codeblock:end]

[enter:description]
[para:expects]
[:en] [=range(first,last)] denotes a range, or [=range(last,first)] denotes
a range and [`S] and [`I] model [`Same<S, I> && SizedSentinel<S, I>].
[:zh_CN] [=range(first,last)] 代表一个范围，或者 [=range(last,first)] 代表一个
范围且 [`S] 和 [`I] 构成 [`Same<S, I> && SizedSentinel<S, I>]。

[para:effects]
[:en] If [`S] and [`I] model [`SizedSentinel<S, I>], returns [`(last - first)];
otherwise, returns the number of increments needed to get from [`first] to
[`last].
[:zh_CN] 若 [`S] 和 [`I] 构成 [`SizedSentinel<S, I>]，则返回 [`(last - first)]；
否则，返回从 [`first] 到 [`last] 所需要的增量次数。
[exit:description]

[%@library distance]
[codeblock:declaration]
template<Range R>
  constexpr iter_difference_t<iterator_t<R>> ranges::distance(R&& r);
[codeblock:end]

[enter:description]
[para:expects]
[:en] If [`R] models [`SizedRange], equivalent to:
[:zh_CN] 当 [`R] 构成 [`SizedRange] 时，等价于：

[codeblock]
return ranges::size(r);                                         // [#range.prim.size]
[codeblock:end]

[:en] Otherwise, equivalent to:
[:zh_CN] 否则，等价于：

[codeblock]
return ranges::distance(ranges::begin(r), ranges::end(r));      // [#range.access]
[codeblock:end]
[exit:description]
