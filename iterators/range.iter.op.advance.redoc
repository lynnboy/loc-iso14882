[section#range.iter.op.advance
    [:] [`ranges::advance]
]

[%@library advance]
[codeblock:declaration]
template<Iterator I>
  constexpr void advance(I& i, iter_difference_t<I> n);
[codeblock:end]

[enter:description]
[para:expects]
[:en] If [`I] does not model [`BidirectionalIterator], [`n] is not negative.
[:zh_CN] 若 [`I] 并不构成 [`BidirectionalIterator]，则 [`n] 不能为负数。

[para:effects]
[list]
[item]
[:en] If [`I] models [`RandomAccessIterator], equivalent to [`i += n].
[:zh_CN] 当 [`I] 构成 [`RandomAccessIterator] 时，等价于 [`i += n]。
[item]
[:en] Otherwise, if [`n] is non-negative, increments [`i] by [`n].
[:zh_CN] 否则，当 [`n] 非负数时，对 [`i] 增加 [`n]。
[item]
[:en] Otherwise, decrements [`i] by [`-n].
[:zh_CN] 否则，对 [`i] 减少 [`-n]。
[list:end]
[exit:description]

[%@library advance]
[codeblock:declaration]
template<Iterator I, Sentinel<I> S>
  constexpr void advance(I& i, S bound);
[codeblock:end]

[enter:description]
[para:expects]
[:en] [=range(i,bound)] denotes a range.
[:zh_CN] [=range(i,bound)] 代表一个范围。

[para:effects]
[list]
[item]
[:en] If [`I] and [`S] model [`Assignable<I&, S>], equivalent to
[`i = std::move(bound)].
[:zh_CN] 当 [`I] 和 [`S] 构成 [`Assignable<I&, S>] 时，等价于
[`i = std::move(bound)]。
[item]
[:en] Otherwise, if [`S] and [`I] model [`SizedSentinel<S, I>], equivalent to
[`ranges::advance(i, bound - i)].
[:zh_CN] 否则，当 [`S] 和 [`I] 构成 [`SizedSentinel<S, I>] 时，等价于
[`ranges::advance(i, bound - i)]。
[item]
[:en] Otherwise, while [`bool(i != bound)] is [`true], increments [`i].
[:zh_CN] 否则，当 [`bool(i != bound)] 为 [`true] 时，持续增加 [`i]。
[list:end]
[exit:description]

[%@library advance]
[codeblock:declaration]
template<Iterator I, Sentinel<I> S>
  constexpr iter_difference_t<I> advance(I& i, iter_difference_t<I> n, S bound);
[codeblock:end]

[enter:description]
[para:expects]
[:en] If [`n > 0], [=range(i,bound)] denotes a range.
[:zh_CN] 当 [`n > 0] 时，[=range(i,bound)] 代表一个范围。

[:en] If [`n == 0], [=range(i,bound)] or [=range(bound,i)] denotes a range.
[:zh_CN] 当 [`n == 0] 时，[=range(i,bound)] 或 [=range(bound,i)] 代表一个范围。

[:en] If [`n < 0], [=range(bound,i)] denotes a range, [`I] models
[`BidirectionalIterator], and [`I] and [`S] model [`Same<I, S>].
[:zh_CN] 当 [`n < 0] 时，[=range(bound,i)] 代表一个范围，[`I] 构成
[`BidirectionalIterator]，而 [`I] 和 [`S] 构成 [`Same<I, S>]。

[para:effects]
[list]
[item]
[:en] If [`S] and [`I] model [`SizedSentinel<S, I>]:
[:zh_CN] 若 [`S] 和 [`I] 构成 [`SizedSentinel<S, I>]：

[list]
[item]
[:en] If [$|[`n]| \ge |[`bound - i]|], equivalent to
[`ranges::advance(i, bound)].
[:zh_CN] 当 [$|[`n]| \ge |[`bound - i]|] 时，等价于
[`ranges::advance(i, bound)]。
[item]
[:en] Otherwise, equivalent to [`ranges::advance(i, n)].
[:zh_CN] 否则，等价于 [`ranges::advance(i, n)]。
[list:end]

[item]
[:en] Otherwise,
[:zh_CN] 否则，

[list]
[item]
[:en] if [`n] is non-negative, while [`bool(i != bound)] is [`true], increments
[`i] but at most [`n] times.
[:zh_CN] 若 [`n] 为非负数，则当 [`bool(i != bound)] 为 [`true] 时，持续增加 [`i]
，但最多进行 [`n] 次。
[item]
[:en] Otherwise, while [`bool(i != bound)] is [`true], decrements [`i] but at
most [`-n] times.
[:zh_CN] 否则，当 [`bool(i != bound)] 为 [`true] 时，持续减少 [`i]，但最多进行
[`-n] 次。
[list:end]
[list:end]

[para:returns]
[:en] [`n - [$M]], where [$M] is the difference between the ending and starting
positions of [`i].
[:zh_CN] [`n - [$M]]，其中 [$M] 为 [`i] 的起始位置和终止位置的差。
[exit:description]
