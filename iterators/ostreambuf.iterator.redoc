[section#ostreambuf.iterator
    [:en] Class template [`ostreambuf_iterator]
    [:zh_CN] 类模板 [`ostreambuf_iterator]
]

[%@library ostreambuf_iterator]
[codeblock:synopsis]
namespace std {
  template<class charT, class traits = char_traits<charT>>
  class ostreambuf_iterator {
  public:
    using iterator_category = output_iterator_tag;
    using value_type        = void;
    using difference_type   = void;
    using pointer           = void;
    using reference         = void;
    using char_type         = charT;
    using traits_type       = traits;
    using streambuf_type    = basic_streambuf<charT,traits>;
    using ostream_type      = basic_ostream<charT,traits>;

    ostreambuf_iterator(ostream_type& s) noexcept;
    ostreambuf_iterator(streambuf_type* s) noexcept;
    ostreambuf_iterator& operator=(charT c);

    ostreambuf_iterator& operator*();
    ostreambuf_iterator& operator++();
    ostreambuf_iterator& operator++(int);
    bool failed() const noexcept;

  private:
    streambuf_type* sbuf_;                // [=Expos]
  };
}
[codeblock:end]

[para]
[:en] The class template [`ostreambuf_iterator] writes successive
[em characters] onto the output stream from which it was constructed.
[:zh_CN] 类模板 [`ostreambuf_iterator] 向用以构造它的输出流中连续写出[em 字符]。

[:en] It is not possible to get a character value out of the output iterator.
[:zh_CN] 不可能从输出迭代器中获得字符值。

[include ostreambuf.iter.cons]

[include ostreambuf.iter.ops]
