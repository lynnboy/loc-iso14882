[section#istream.iterator.cons
    [:en] Constructors and destructor
    [:zh_CN] 构造函数和析构函数
]

[%@library istream_iterator[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr istream_iterator();
constexpr istream_iterator(default_sentinel_t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs the end-of-stream iterator, value-initializing [`value].
[:zh_CN] 构造流结束迭代器，值初始化 [`value]。

[para:ensures]
[:en] [`in_stream == nullptr].
[:zh_CN] [`in_stream == nullptr]。

[para:remarks]
[:en] If the initializer [`T()] in the declaration [`auto x = T();] is a
constant initializer ([#expr.const]), then these constructors are [`constexpr]
constructors.
[:zh_CN] 若声明式“[`auto x = T();]”中的初始化式 [`T()] 是常量初始化式
（[#expr.const]），则这些构造函数均为 [`constexpr] 构造函数。
[exit:description]

[%@library istream_iterator[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
istream_iterator(istream_type& s);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Initializes [`in_stream] with [`addressof(s)], value-initializes [`value],
and then calls [`operator++()].
[:zh_CN] 以 [`addressof(s)] 初始化 [`in_stream]，值初始化 [`value]，然后调用
[`operator++()]。
[exit:description]

[%@library istream_iterator[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
istream_iterator(const istream_iterator& x) = default;
[codeblock:end]

[enter:description]
[para:ensures]
[:en] [`in_stream == x.in_stream] is [`true].
[:zh_CN] [`in_stream == x.in_stream] 为 [`true]。

[para:remarks]
[:en] If [`is_trivially_copy_constructible_v<T>] is [`true], then this
constructor is trivial.
[:zh_CN] 当 [`is_trivially_copy_constructible_v<T>] 为 [`T] 时，这个构造函数是
平凡的。
[exit:description]

[%@library istream_iterator[![:en]destructor[:zh_CN]析构函数]]
[codeblock:declaration]
~istream_iterator() = default;
[codeblock:end]

[enter:description]
[para:remarks]
[:en] If [`is_trivially_destructible_v<T>] is [`true], then this destructor is
trivial.
[:zh_CN] 当 [`is_trivially_destructible_v<T>] 为 [`true]时，这个析构函数是平凡的
。
[exit:description]
