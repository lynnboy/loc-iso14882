[section#istream.iterator
    [:en] Class template [`istream_iterator]
    [:zh_CN] 类模板 [`istream_iterator]
]

[para]
[%@lib istream_iterator]
[:en] The class template [`istream_iterator] is an input iterator
([#input.iterators]) that reads successive elements from the input stream for
which it was constructed.
[:zh_CN] 类模板 [`istream_iterator] 是一种输入迭代器（[#input.iterators]），从
用以构造它的输入流中读取连续的元素。

[codeblock:synopsis]
namespace std {
  template<class T, class charT = char, class traits = char_traits<charT>,
      class Distance = ptrdiff_t>
  class istream_iterator {
  public:
    using iterator_category = input_iterator_tag;
    using value_type        = T;
    using difference_type   = Distance;
    using pointer           = const T*;
    using reference         = const T&;
    using char_type         = charT;
    using traits_type       = traits;
    using istream_type      = basic_istream<charT,traits>;

    constexpr istream_iterator();
    constexpr istream_iterator(default_sentinel_t);
    istream_iterator(istream_type& s);
    istream_iterator(const istream_iterator& x) = default;
    ~istream_iterator() = default;
    istream_iterator& operator=(const istream_iterator&) = default;

    const T& operator*() const;
    const T* operator->() const;
    istream_iterator& operator++();
    istream_iterator  operator++(int);

    friend bool operator==(const istream_iterator& i, default_sentinel_t);

  private:
    basic_istream<charT,traits>* in_stream; // [=expos]
    T value;                                // [=expos]
  };
}
[codeblock:end]

[para]
[:en]
The type [`T] shall meet the [^:oc DefaultConstructible],
[^:oc CopyConstructible], and [^:oc CopyAssignable] requirements.
[:zh_CN]
类型 [`T] 应当满足 [^:oc DefaultConstructible]、[^:oc CopyConstructible] 和
[^:oc CopyAssignable] 的规定。

[include istream.iterator.cons]

[include istream.iterator.ops]
