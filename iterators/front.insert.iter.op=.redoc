[section#front.insert.iter.op=
    [`front_insert_iterator::operator=]
]

[%@library operator=[!front_insert_iterator]]
[%@library front_insert_iterator[!operator=]]
[codeblock:declaration]
front_insert_iterator& operator=(const typename Container::value_type& value);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`container->push_front(value);]
[:zh_CN] 如同执行：[`container->push_front(value);]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator=[!front_insert_iterator]]
[%@library front_insert_iterator[!operator=]]
[codeblock:declaration]
front_insert_iterator& operator=(typename Container::value_type&& value);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`container->push_front(std::move(value));]
[:zh_CN] 如同执行：[`container->push_front(std::move(value));]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]
