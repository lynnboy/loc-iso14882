[section#common.iter.types
    [:en] Associated types
    [:zh_CN] 关联类型
]

[para]
[:en] The nested [~typedef-name]s of the specialization of [`iterator_traits]
for [`common_iterator<I, S>] are defined as follows.
[:zh_CN] [`iterator_traits] 针对 [`common_iterator<I, S>] 的特化式的各个嵌套
[~typedef-名]的定义如下。

[list]
[item]
[:en] [`iterator_concept] denotes [`forward_iterator_tag] if [`I] models
[`:c forward_iterator]; otherwise it denotes [`input_iterator_tag].
[:zh_CN] 当 [`I] 构成 [`:c forward_iterator] 时，[`iterator_concept] 代表
[`forward_iterator_tag]；否则它代表 [`input_iterator_tag]。

[item]
[:en] [`iterator_category] denotes [`forward_iterator_tag] if the [~qualified-id]
[`iterator_traits<I>::iterator_category] is valid and denotes a type that models
[`[`:c derived_from]<forward_iterator_tag>]; otherwise it denotes
[`input_iterator_tag].
[:zh_CN] 当[~限定标识] [`iterator_traits<I>::iterator_category] 有效且代表构成了
[`[`:c derived_from]<forward_iterator_tag>] 的类型时，[`iterator_category] 代表
[`forward_iterator_tag]；否则它代表 [`input_iterator_tag]。

[item]
[:en] If the expression [`a.operator->()] is well-formed, where [`a] is an
lvalue of type [`const common_iterator<I, S>], then [`pointer] denotes the type
of that expression.
[:zh_CN] 若表达式 [`a.operator->()] 良构，其中 [`a] 为
[`const common_iterator<I, S>] 类型的左值，则 [`pointer] 代表该表达式的类型。

[:en] Otherwise, [`pointer] denotes [`:key void].
[:zh_CN] 否则，[`pointer] 代表 [`:key void]。
[list:end]
