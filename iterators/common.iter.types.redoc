[section#common.iter.types
    [:en] Associated types
    [:zh_CN] 关联类型
]

[para]
[:en] The nested [~typedef-name] [`iterator_category] of the specialization of
[`iterator_traits] for [`common_iterator<I, S>] is defined if and only if
[`iter_difference_t<I>] is an integral type.
[:zh_CN] 当且仅当 [`iter_difference_t<I>] 为整型类型时，[`iterator_traits] 针对
[`common_iterator<I, S>] 的特例的嵌套 [~typedef-名] [`iterator_category] 有定义。

[:en] In that case, [`iterator_category] denotes [`forward_iterator_tag] if
the [~qualified-id] [`iterator_traits<I>::iterator_category] is valid and
denotes a type that models [`[`:c derived_from]<forward_iterator_tag>];
otherwise it denotes [`input_iterator_tag].
[:zh_CN] 这种情况下，当[~限定标识] [`iterator_traits<I>::iterator_category] 有效
且代表构成了 [`[`:c derived_from]<forward_iterator_tag>] 的类型时，
[`iterator_category] 代表 [`forward_iterator_tag]；否则它代表
[`input_iterator_tag]。

[para]
[:en] The remaining nested [~typedef-name]s of the specialization of
[`iterator_traits] for [`common_iterator<I, S>] are defined as follows.
[:zh_CN] [`iterator_traits] 针对 [`common_iterator<I, S>] 的特例的其余各个嵌套
[~typedef-名]的定义如下。

[list]
[item]
[:en] [`iterator_concept] denotes [`forward_iterator_tag] if [`I] models
[`:c forward_iterator]; otherwise it denotes [`input_iterator_tag].
[:zh_CN] 当 [`I] 构成 [`:c forward_iterator] 时，[`iterator_concept] 代表
[`forward_iterator_tag]；否则它代表 [`input_iterator_tag]。

[item]
[:en] Let [`a] denote an lvalue of type [`const common_iterator<I, S>].
[:zh_CN] 令 [`a] 代表 [`const common_iterator<I, S>] 类型的左值。

[:en] If the expression [`a.operator->()] is well-formed, then [`pointer]
denotes [`decltype(a.operator->())].
[:zh_CN] 若表达式 [`a.operator->()] 良构，则 [`pointer] 代表
[`decltype(a.operator->())]。

[:en] Otherwise, [`pointer] denotes [`:key void].
[:zh_CN] 否则，[`pointer] 代表 [`:key void]。
[list:end]
