[section#const.iterators.alias
    [:en] Alias templates
    [:zh_CN] 别名模板
]

[codeblock:declaration]
template<[[redoc("`:c>")]]indirectly_readable It>
  using [[redoc("`:lib>")]]iter_const_reference_t =
    common_reference_t<const iter_value_t<It>&&, iter_reference_t<It>>;

template<class It>
  concept [[redoc("*:c@def>")]]constant-iterator =                                                   // [=expos]
    [[redoc("`:c>")]]input_iterator<It> && [[redoc("`:c>")]]same_as<iter_const_reference_t<It>, iter_reference_t<It>>;

template<[[redoc("`:c>")]]input_iterator I>
  using [[redoc("`:lib")]]const_iterator = [[redoc("[=seebelow]")]];
[codeblock:end]

[div:description]
[para:result]
[:en] If [`I] models [*:c constant-iterator], [`I].
[:zh_CN] 如果 [`I] 构成 [*:c constant-iterator] 则为 [`I]。

[:en] Otherwise, [`basic_const_iterator<I>].
[:zh_CN] 否则为 [`basic_const_iterator<I>]。
[div:end]

[codeblock:declaration]
template<[[redoc("`:c>")]]semiregular S>
  using [[redoc("`:lib")]]const_sentinel = [[redoc("[=seebelow]")]];
[codeblock:end]

[div:description]
[para:result]
[:en] If [`S] models [`:c input_iterator], [`const_iterator<S>].
[:zh_CN] 如果 [`S] 构成 [`:c input_iterator] 则为 [`const_iterator<S>]。

[:en] Otherwise, [`S].
[:zh_CN] 否则为 [`S]。
[div:end]
