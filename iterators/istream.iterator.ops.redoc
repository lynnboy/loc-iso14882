[section#istream.iterator.ops
    [:en] Operations
    [:zh_CN] 操作
]

[%@library operator*[!istream_iterator]]
[%@library istream_iterator[!operator*]]
[codeblock:declaration]
const T& operator*() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`value].
[:zh_CN] [`value]。
[exit:description]

[%@library operator->[!istream_iterator]]
[%@library istream_iterator[!operator->]]
[codeblock:declaration]
const T* operator->() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`addressof(operator*())].
[:zh_CN] [`addressof(operator*())]。
[exit:description]

[%@library operator++[!istream_iterator]]
[%@library istream_iterator[!operator++]]
[codeblock:declaration]
istream_iterator& operator++();
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`in_stream != nullptr].
[:zh_CN] [`in_stream != nullptr]。

[para:effects]
[:en] As if by: [`*in_stream >> value;]
[:zh_CN] 如同执行：[`*in_stream >> value;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator++[!istream_iterator]]
[%@library istream_iterator[!operator++]]
[codeblock:declaration]
istream_iterator operator++(int);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`in_stream != nullptr].
[:zh_CN] [`in_stream != nullptr]。

[para:effects]
[:en] As if by:
[:zh_CN] 如同执行：

[codeblock:notation]
istream_iterator tmp = *this;
*in_stream >> value;
return tmp;
[codeblock:end]
[exit:description]

[%@library operator==[!istream_iterator]]
[%@library istream_iterator[!operator==]]
[codeblock:declaration]
template<class T, class charT, class traits, class Distance>
  bool operator==(const istream_iterator<T,charT,traits,Distance>& x,
                  const istream_iterator<T,charT,traits,Distance>& y);
[codeblock:end]

[%@library istream_iterator[!operator==]]
[enter:description]
[para:returns]
[:en] [`x.in_stream == y.in_stream].
[:zh_CN] [`x.in_stream == y.in_stream]。
[exit:description]

[%@library operator==[!istream_iterator]]
[%@library istream_iterator[!operator==]]
[codeblock:declaration]
friend bool operator==(default_sentinel_t, const istream_iterator& i);
friend bool operator==(const istream_iterator& i, default_sentinel_t);
[codeblock:end]

[%@library istream_iterator[!operator==]]
[enter:description]
[para:returns]
[:en] [`!i.in_stream].
[:zh_CN] [`!i.in_stream]。
[exit:description]

[%@library operator!=[!istream_iterator]]
[%@library istream_iterator[!operator!=]]
[codeblock:declaration]
template<class T, class charT, class traits, class Distance>
  bool operator!=(const istream_iterator<T,charT,traits,Distance>& x,
                  const istream_iterator<T,charT,traits,Distance>& y);
friend bool operator!=(default_sentinel_t x, const istream_iterator& y);
friend bool operator!=(const istream_iterator& x, default_sentinel_t y);
[codeblock:end]

[%@library istream_iterator[!operator!=]]
[enter:description]
[para:returns]
[`!(x == y)]
[exit:description]
