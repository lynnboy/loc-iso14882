[section#bidirectional.iterators
    [:en] Bidirectional iterators
    [:zh_CN] 双向迭代器
]

[para]
[:en] A class or pointer type [`X] meets the requirements of a bidirectional
iterator if, in addition to meeting the [^:oc ForwardIterator] requirements,
the following expressions are valid as shown in [#:tab#bidirectionaliterator].
[:zh_CN] 如果除了满足 [^:oc ForwardIterator] 的规定以外，以下表达式如在
[#:tab#bidirectionaliterator] 所示为有效的，则类或指针类型 [`X] 满足双向迭代器的
规定。

[table:grid#bidirectionaliterator
    [:en] [^:oc BidirectionalIterator] requirements (in addition to [^:oc ForwardIterator])
    [:zh_CN] [^:oc BidirectionalIterator]（除 [^:oc ForwardIterator] 之外的）规定

    [|@code
        [:en] Expression
        [:zh_CN] 表达式
    ]
    [|
        [:en] Return type
        [:zh_CN] 返回类型
    ]
    [|@code
        [:en] Operational semantics
        [:zh_CN] 操作性语义
    ]
    [|
        [:en] Assertion/note [br] pre-/post-condition
        [:zh_CN] 断言/注解 [br] 前/后条件
    ]
]

[|] --r
[|] [`X&]
[|]
[|] [para:expects]
    [:en] there exists [`s] such that [`r == ++s].
    [:zh_CN] 存在 [`s] 使得 [`r == ++s]。

    [para:ensures]
    [:en] [`r] is dereferenceable.
    [:zh_CN] [`r] 可解引用。

    [para]
    [:en] [`--(++r) == r].
    [:zh_CN] [`--(++r) == r]。

    [para]
    [:en] [`--r == --s] implies [`r == s].
    [:zh_CN] [`--r == --s] 蕴含 [`r == s]。

    [para]
    [:en] [`addressof(r) == addressof(--r)].
    [:zh_CN] [`addressof(r) == addressof(--r)]。
[-]
[|] r--
[|] [:en] convertible to [`const X&]
    [:zh_CN] 可以转换为 [`const X&]
[|]
{ X tmp = r; [br]
  --r; [br]
  return tmp; }
[|]
[-]
[|] *r--
[|] [`reference]
[|]
[|]
[-]
[table:end]

[para]
[begin:note]
[:en] Bidirectional iterators allow algorithms to move iterators backward as
well as forward.
[:zh_CN] 双向迭代器允许算法向前或者向后移动迭代器。
[end:note]
