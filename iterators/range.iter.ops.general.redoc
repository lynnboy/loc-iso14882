[section#range.iter.ops.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] The library includes the function templates [`ranges::advance],
[`ranges::distance], [`ranges::next], and [`ranges::prev] to manipulate
iterators.
[:zh_CN] 程序库中包含用以操作迭代器的函数模板 [`ranges::advance]，
[`ranges::distance]，[`ranges::next]，和 [`ranges::prev]。

[:en] These operations adapt to the set of operators provided by each iterator
category to provide the most efficient implementation possible for a concrete
iterator type.
[:zh_CN] 这些操作依据各个迭代器类别所提供的运算符集合，为具体的迭代器类型提供
可能的最高效的实现。

[begin:example]
[:en] [`ranges::advance] uses the [`+] operator to move a
[`:c random_access_iterator] forward [`n] steps in constant time.
[:zh_CN] [`ranges::advance] 利用 [`+] 运算符以常量时间将
[`:c random_access_iterator] 向前移动 [`n] 步。

[:en] For an iterator type that does not model [`:c random_access_iterator],
[`ranges::advance] instead performs [`n] individual increments with the [`++]
operator.
[:zh_CN] 而对于不构成 [`:c random_access_iterator] 的迭代器类型，
[`ranges::advance] 转而以 [`++] 运算符来实施 [`n] 次独立的增量操作。
[end:example]

[para]
[:en] The function templates defined in [#range.iter.ops] are not found by
argument-dependent name lookup ([#basic.lookup.argdep]).
[:zh_CN] [#range.iter.ops] 中定义的各个函数模板并不会被依赖于实参的名字查找
（[#basic.lookup.argdep]）所找到。

[:en] When found by unqualified ([#basic.lookup.unqual]) name lookup for the
[~postfix-expression] in a function call ([#expr.call]), they inhibit
argument-dependent name lookup.
[:zh_CN] 当由对函数调用中的[~后缀表达式]（[#expr.call]）进行的无限定名字查找
（[#basic.lookup.unqual]）所找到时，它们抑制了依赖于实参的名字查找。

[begin:example]
[codeblock]
void foo() {
    using namespace std::ranges;
    std::vector<int> vec{1,2,3};
    distance(begin(vec), end(vec));     // #1
}
[codeblock:end]

[:en] The function call expression at [`#1] invokes [`std::ranges::distance],
not [`std::distance], despite that (a) the iterator type returned from
[`begin(vec)] and [`end(vec)] may be associated with namespace [`std] and
(b) [`std::distance] is more specialized ([#temp.func.order]) than
[`std::ranges::distance] since the former requires its first two parameters
to have the same type.
[:zh_CN] [`#1] 处的函数调用表达式调用的是 [`std::ranges::distance] 而不是
[`std::distance]，尽管（A）[`begin(vec)] 和 [`end(vec)] 所返回的迭代器类型可能与
命名空间 [`std] 相关联，亦或（B）[`std::distance] 与 [`std::ranges::distance]
相比，由于前者要求其前两个形参为相同类型而比后者更加特殊（[#temp.func.order]）。
[end:example]

[para]
[:en] The number and order of deducible template parameters for the function
templates defined in [#range.iter.ops] is unspecified, except where explicitly
stated otherwise.
[:zh_CN] 除非明确指定，[#range.iter.ops] 中所定义的各个函数模板的可推断模板形参
的数量和顺序都是未指明的。
