[section#iterator.concept.input
    [:en] Concept [`:c input_iterator]
    [:zh_CN] 概念 [`:c input_iterator]
]

[para]
[:en] The [`:c input_iterator] concept defines requirements for a type whose
referenced values can be read (from the requirement for [`:c readable]
([#iterator.concept.readable])) and which can be both pre- and post-incremented.
[:zh_CN] [`:c input_iterator] 概念针对可以读取其所引用的值（源于 [`:c readable]
的规定（[#iterator.concept.readable]）），并同时可以进行前缀和后缀增量的类型定义
了一组规定。

[begin:note]
[:en] Unlike the [^:oc InputIterator] requirements ([#input.iterators]), the
[`:c input_iterator] concept does not need equality comparison since iterators
are typically compared to sentinels.
[:zh_CN] 与 [^:oc InputIterator] 的规定（[#input.iterators]）不同，由于迭代器
通常是与哨位相比较，[`:c input_iterator] 概念并不需要相等性比较。
[end:note]

[codeblock:synopsis]
template<class I>
  concept [[redoc("`:c@def>")]]input_iterator =
    input_or_output_iterator<I> &&
    readable<I> &&
    requires { typename [[redoc("^>")]]ITER_CONCEPT(I); } &&
    derived_from<[[redoc("^>")]]ITER_CONCEPT(I), input_iterator_tag>;
[codeblock:end]
