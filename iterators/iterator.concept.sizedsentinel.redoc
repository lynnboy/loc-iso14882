[section#iterator.concept.sizedsentinel
    [:en] Concept [`SizedSentinel]
    [:zh_CN] 概念 [`SizedSentinel]
]

[para]
[:en] The [`SizedSentinel] concept specifies requirements on an [`Iterator] and
a [`Sentinel] that allow the use of the [`-] operator to compute the distance
between them in constant time.
[:zh_CN] [`SizedSentinel] 概念针对允许使用 [`-] 运算符以常量时间来计算其距离的
一个 [`Iterator] 和一个 [`Sentinel] 给出了规定。

[%@library SizedSentinel]
[codeblock:declaration]
template<class S, class I>
  concept SizedSentinel =
    Sentinel<S, I> &&
    !disable_sized_sentinel<remove_cv_t<S>, remove_cv_t<I>> &&
    requires(const I& i, const S& s) {
      { s - i } -> Same<iter_difference_t<I>>;
      { i - s } -> Same<iter_difference_t<I>>;
    };
[codeblock:end]

[enter:description]
[para]
[:en] Let [`i] be an iterator of type [`I], and [`s] a sentinel of type [`S]
such that [=range(i,s)] denotes a range.
[:zh_CN] 令 [`i] 为 [`I] 类型的迭代器，并令 [`s] 为 [`S] 类型的哨位，使得
[=range(i,s)] 代表一个范围。

[:en] Let [$N] be the smallest number of applications of [`++i] necessary to
make [`bool(i == s)] be [`true].
[:zh_CN] 令 [$N] 为使得 [`bool(i == s)] 为 [`true] 所必须运用 [`++i] 的最小次数。

[:en] [`S] and [`I] model [`SizedSentinel<S, I>] only if
[:zh_CN] 仅当符合以下条件时 [`S] 和 [`I] 构成 [`SizedSentinel<S, I>]：

[list]
[item]
[:en] If [$N] is representable by [`iter_difference_t<I>], then [`s - i] is
well-defined and equals [$N].
[:zh_CN] 若 [$N] 可以由 [`iter_difference_t<I>] 表示，则 [`s - i] 良构并等于
[$N]。

[item]
[:en] If [$-N] is representable by [`iter_difference_t<I>], then [`i - s] is
well-defined and equals [$-N].
[:zh_CN] 若 [$-N] 可以由 [`iter_difference_t<I>] 表示，则 [`i - s] 良构并等于
[$-N]。
[list:end]
[exit:description]

[para]
[enter:note]
[:en] [`disable_sized_sentinel] allows use of sentinels and iterators with the
library that satisfy but do not in fact model [`SizedSentinel].
[:zh_CN] 通过 [`disable_sized_sentinel] 可以对程序库使用满足但并不真正构成
[`SizedSentinel] 的哨位和迭代器。
[exit:note]

[para]
[enter:example]
[:en] The [`SizedSentinel] concept is modeled by pairs of
[`RandomAccessIterator]s ([#iterator.concept.random.access]) and by counted
iterators and their sentinels ([#counted.iterator]).
[:zh_CN] 一对 [`RandomAccessIterator]（[#iterator.concept.random.access]），以及
计数的迭代器及其哨位（[#counted.iterator]），均可以构成 [`SizedSentinel] 概念。
[exit:example]
