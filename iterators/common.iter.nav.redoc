[section#common.iter.nav
    [:en] Navigation
    [:zh_CN] 导航
]

[%@lib@member operator++[!common_iterator]]
[codeblock:declaration]
common_iterator& operator++();
[codeblock:end]

[div:description]
[para:expects]
[:en] [`holds_alternative<I>(v_)] is [`true].
[:zh_CN] [`holds_alternative<I>(v_)] 为 [`true]。

[para:effects]
[:en] Equivalent to: [`++get<I>(v_)].
[:zh_CN] 等价于：[`++get<I>(v_)]。
[div:end]

[%@lib@member operator++[!common_iterator]]
[codeblock:declaration]
decltype(auto) operator++(int);
[codeblock:end]

[div:description]
[para:expects]
[:en] [`holds_alternative<I>(v_)] is [`true].
[:zh_CN] [`holds_alternative<I>(v_)] 为 [`true]。

[para:effects]
[:en] If [`I] models [`:c forward_iterator], equivalent to:
[:zh_CN] 若 [`I] 构成 [`:c forward_iterator]，则等价于：
[codeblock]
common_iterator tmp = *this;
++*this;
return tmp;
[codeblock:end]

[:en] Otherwise, if [`requires (I& i) { { *i++ } -> [*:c can-reference]; }] is
[`true] or [`[`:c constructible_from]<iter_value_t<I>, iter_reference_t<I>>] is
[`false], equivalent to:
[:zh_CN] 否则，当 [`requires (I& i) { { *i++ } -> [*:c can-reference]; }] 为
[`true] 或 [`[`:c constructible_from]<iter_value_t<I>, iter_reference_t<I>>] 为
[`false] 时，等价于：
[codeblock]
return get<I>(v_)++;
[codeblock:end]

[:en] Otherwise, equivalent to:
[:zh_CN] 否则，等价于：
[codeblock:notation]
[*postfix-proxy] p(**this);
++*this;
return p;
[codeblock:end]
[:en@~] where [*postfix-proxy] is the exposition-only class:
[:zh_CN@~] 其中 [*postfix-proxy] 为仅用于阐释的类：
[codeblock:notation]
class [*postfix-proxy] {
  iter_value_t<I> keep_;
  [*postfix-proxy](iter_reference_t<I>&& x)
    : keep_(std::move(x)) {}
public:
  const iter_value_t<I>& operator*() const {
    return keep_;
  }
};
[codeblock:end]
[div:end]
