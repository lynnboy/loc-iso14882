[section#output.iterators
    [:en] Output iterators
    [:zh_CN] 输出迭代器
]

[para]
[:en] A class or pointer type [`X] meets the requirements of an output iterator
if [`X] meets the [^:oc Iterator] requirements ([#iterator.iterators]) and the
expressions in [#:tab#outputiterator] are valid and have the indicated semantics.
[:zh_CN] 如果类或指针类型 [`X] 满足 [^:oc Iterator] 的规定
（[#iterator.iterators]），并且 [#:tab#outputiterator] 中的表达式有效且具有所
指定的语义，则 [`X] 满足输出迭代器的规定。

[table:grid#outputiterator
    [:en] [^:oc@def OutputIterator] requirements (in addition to [^:oc Iterator])
    [:zh_CN] [^:oc@def OutputIterator]（除 [^:oc Iterator] 之外的）规定

    [|  [:en] Expression
        [:zh_CN] 表达式 ]
    [|  [:en] Return type
        [:zh_CN] 返回类型 ]
    [|  [:en] Operational semantics
        [:zh_CN] 操作性语义 ]
    [|  [:en] Assertion/note [br] pre-/post-condition
        [:zh_CN] 断言/注解 [br] 前/后条件 ]
]

[|] [`*r = o]
[|] [:en] result is not used
    [:zh_CN] 其结果未被使用
[|]
[|] [para:remarks]
    [:en] After this operation [`r] is not required to be dereferenceable.
    [:zh_CN] 这个操作之后，[`r] 不要求为可解引用。

    [para:ensures]
    [:en] [`r] is incrementable.
    [:zh_CN] [`r] 可增量。
[-]
[|] [`++r]
[|] [`X&]
[|]
[|] [:en] [`addressof(r) == addressof(++r)].
    [:zh_CN] [`addressof(r) == addressof(++r)]。

    [para:remarks]
    [:en] After this operation [`r] is not required to be dereferenceable.
    [:zh_CN] 这个操作之后，[`r] 不要求为可解引用。

    [para:ensures]
    [:en] [`r] is incrementable.
    [:zh_CN] [`r] 可增量。
[-]
[|] [`r++]
[|] [:en] convertible to [`const X&]
    [:zh_CN] 可以转换为 [`const X&]
[|]
[`{ X tmp = r;] [br]
[`  ++r;] [br]
[`  return tmp; }]
[|] [para:remarks]
    [:en] After this operation [`r] is not required to be dereferenceable.
    [:zh_CN] 这个操作之后，[`r] 不要求为可解引用。

    [para:ensures]
    [:en] [`r] is incrementable.
    [:zh_CN] [`r] 可增量。
[-]
[|] [`*r++ = o]
[|] [:en] result is not used
    [:zh_CN] 其结果未被使用
[|]
[|] [para:remarks]
    [:en] After this operation [`r] is not required to be dereferenceable.
    [:zh_CN] 这个操作之后，[`r] 不要求为可解引用。

    [para:ensures]
    [:en] [`r] is incrementable.
    [:zh_CN] [`r] 可增量。
[-]
[table:end]

[para:recommended]
[:en] The implementation of an algorithm on onput iterators should never attempt
to pass through the same iterator twice; such an algorithm should be a
single-pass algorithm.
[:zh_CN] 针对输出迭代器的算法的实现不能试图将同一个迭代器传递两次；这种算法应当
是单遍算法。

[begin:note]
[:en] The only valid use of an [`operator*] is on the left side of the
assignment statement.
[:zh_CN] [`operator*] 的唯一有效用法是作为赋值语句的左边。

[:en] Assignment through the same value of the iterator happens only once.
[:zh_CN] 通过同一个迭代器值进行的赋值仅会发生一次。

[:en] Equality and inequality are not necessarily defined.
[:zh_CN] 不必定义其相等性和不相等性。
[end:note]
