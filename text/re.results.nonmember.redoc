[section#re.results.nonmember
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@lib@member operator==[!match_results]]
[codeblock:declaration]
template<class BidirectionalIterator, class Allocator>
  bool operator==(const match_results<BidirectionalIterator, Allocator>& m1,
                  const match_results<BidirectionalIterator, Allocator>& m2);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if neither match result is ready, [`false] if one match result is
ready and the other is not.
[:zh_CN] 当没有就绪的匹配结果时返回 [`true]，当一个匹配结果就绪而另一个不是时返回 [`false]。

[:en] If both match results are ready, returns [`true] only if:
[:zh_CN] 当两个匹配结果均就绪时，仅当以下情况时返回 [`true]：

[list]
[item]
[:en] [`m1.empty() && m2.empty()], or
[:zh_CN] [`m1.empty() && m2.empty()]，或者

[item]
[:en] [`!m1.empty() && !m2.empty()], and the following conditions are satisfied:
[:zh_CN] [`!m1.empty() && !m2.empty()]，并且满足下列条件：

[list]
[item]
[:en] [`m1.prefix() == m2.prefix()],
[:zh_CN] [`m1.prefix() == m2.prefix()]，

[item]
[:en] [`m1.size() == m2.size() && equal(m1.begin(), m1.end(), m2.begin())], and
[:zh_CN] [`m1.size() == m2.size() && equal(m1.begin(), m1.end(), m2.begin())]，以及

[item]
[:en] [`m1.suffix() == m2.suffix()].
[:zh_CN] [`m1.suffix() == m2.suffix()]。
[list:end]
[list:end]

[begin:note]
[:en] The algorithm [`equal] is defined in [#algorithms].
[:zh_CN] 算法 [`equal] 在 [#algorithms] 中定义。
[end:note]
[div:end]
