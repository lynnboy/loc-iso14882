[section#locale.moneypunct.virtuals
    [:en] Virtual functions
    [:zh_CN] 虚函数
]

[%@lib@member moneypunct[!do_decimal_point]]
[codeblock:declaration]
charT do_decimal_point() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The radix separator to use in case [`do_frac_digits()] is greater than zero.[#:fn]
[:zh_CN] 用作当 [`do_frac_digits()] 大于零时的基数分隔符[#:fn]。

[note:foot]
[:en] In common U.S. locales this is [`'.'].
[:zh_CN] 在普通的美国地域中，这是 [`'.']。
[note:end]
[div:end]

[%@lib@member moneypunct[!do_thousands_sep]]
[codeblock:declaration]
charT do_thousands_sep() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The digit group separator to use in case [`do_grouping()] specifies a
digit grouping pattern.[#:fn]
[:zh_CN] 用作当 [`do_grouping()] 指定某种数字分组模式时的数字分组分隔符[#:fn]。

[note:foot]
[:en] In common U.S. locales this is [`','].
[:zh_CN] 在普通的美国地域中，这是 [`',']。
[note:end]
[div:end]

[%@lib@member moneypunct[!do_grouping]]
[codeblock:declaration]
string do_grouping() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A pattern defined identically as, but not necessarily equal to, the result
of [`numpunct<charT>::do_grouping()].[#:fn]
[:zh_CN] 定义为与 [`numpunct<charT>::do_grouping()] 相同，但不必等于其结果的一个模式[#:fn]。

[note:foot]
[:en] To specify grouping by 3s, the value is [`"\003"] [span:em not] [`"3"].
[:zh_CN] 为指定按每三个进行分组，其值应当为 [`"\003"] 而[span:em 不是] [`"3"]。
[note:end]
[div:end]

[%@lib@member moneypunct[!do_curr_symbol]]
[codeblock:declaration]
string_type do_curr_symbol() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A string to use as the currency identifier symbol.
[:zh_CN] 用作货币标识符号的字符串。

[begin:note]
[:en] For specializations where the second template parameter is [`true], this
is typically four characters long: a three-letter code as specified by
ISO 4217[#:cite@super#iso4217] followed by a space.
[:zh_CN] 对于第二个模板形参为 [`true] 的特例，这通常具有四个字符：由
ISO 4217[#:cite@super#iso4217] 所指定的三字母代码跟着一个空格。
[end:note]
[div:end]

[%@lib@member moneypunct[!do_positive_sign]]
[%@lib@member moneypunct[!do_negative_sign]]
[codeblock:declaration]
string_type do_positive_sign() const;
string_type do_negative_sign() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`do_positive_sign()] returns the string to use to indicate a positive
monetary value;[#:fn] [`do_negative_sign()] returns the string to use to
indicate a negative value.
[:zh_CN] [`do_positive_sign()] 返回用于指定正货币值的字符串[#:fn]；
[`do_negative_sign()] 返回用于指定负货币值的字符串。

[note:foot]
[:en] This is usually the empty string.
[:zh_CN] 这通常是空字符串。
[note:end]
[div:end]

[%@lib@member moneypunct[!do_frac_digits]]
[codeblock:declaration]
int do_frac_digits() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The number of digits after the decimal radix separator, if any.[#:fn]
[:zh_CN] 十进制基数分隔符之后的数字个数（如果有）[#:fn]。

[note:foot]
[:en] In common U.S. locales, this is 2.
[:zh_CN] 在普通的美国地域中，这是 2。
[note:end]
[div:end]

[%@lib@member moneypunct[!do_pos_format]]
[%@lib@member moneypunct[!do_neg_format]]
[codeblock:declaration]
pattern do_pos_format() const;
pattern do_neg_format() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The specializations required in [#:tab#locale.spec] ([#locale.category]),
namely
[:zh_CN] [#:tab#locale.spec]（[#locale.category]）中所要求的特例，亦即

[list]
[item]
[:en@~] [`moneypunct<char>],
[:zh_CN@~] [`moneypunct<char>]，
[item]
[:en@~] [`moneypunct<wchar_t>],
[:zh_CN@~] [`moneypunct<wchar_t>]，
[item]
[:en@~] [`moneypunct<char, true>], and
[:zh_CN@~] [`moneypunct<char, true>]，和
[item]
[:en@~] [`moneypunct<wchar_t, true>],
[:zh_CN@~] [`moneypunct<wchar_t, true>]，
[list:end]

[:en@~] return an object of type [`pattern] initialized to
[`{ symbol, sign, none, value }].[#:fn]
[:zh_CN@~] 返回被初始化为 [`{ symbol, sign, none, value }] 的 [`pattern] 类型的对象[#:fn]。

[note:foot]
[:en] Note that the international symbol returned by [`do_curr_symbol()] usually
contains a space, itself; for example, [`"USD "].
[:zh_CN] 注意由 [`do_curr_symbol()] 所返回的国际化符号通常自身就包含一个空格；例如 [`"USD "]。
[note:end]
[div:end]
