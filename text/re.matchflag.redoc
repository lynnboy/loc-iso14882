[section#re.matchflag
    [:en] Bitmask type [`match_flag_type]
    [:zh_CN] 掩码类型 [`match_flag_type]
]

[%@lib match_flag_type]
[%@lib@member regex_constants[!match_flag_type]]
[%@lib match_default]
[%@lib match_not_bol]
[%@lib match_not_eol]
[%@lib match_not_bow]
[%@lib match_not_eow]
[%@lib match_any]
[%@lib match_not_null]
[%@lib match_continuous]
[%@lib match_prev_avail]
[%@lib format_default]
[%@lib format_sed]
[%@lib format_no_copy]
[%@lib format_first_only]
[codeblock:synopsis]
namespace std::regex_constants {
  using match_flag_type = [[redoc("*>")]]T2;
  inline constexpr match_flag_type match_default = {};
  inline constexpr match_flag_type match_not_bol = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_not_eol = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_not_bow = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_not_eow = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_any = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_not_null = [[redoc("[=unspec]")]]
  inline constexpr match_flag_type match_continuous = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type match_prev_avail = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type format_default = {};
  inline constexpr match_flag_type format_sed = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type format_no_copy = [[redoc("[=unspec]")]];
  inline constexpr match_flag_type format_first_only = [[redoc("[=unspec]")]];
}
[codeblock:end]

[para]
[%@lib match_flag_type]
[:en] The type [`match_flag_type] is an [?impldef type of
[`regex_constants::match_flag_type]] bitmask type ([#bitmask.types]).
[:zh_CN] 类型 [`match_flag_type] 是一种[?impldef [`match_flag_type] 的类型]掩码
类型（[#bitmask.types]）。

[:en] The constants of that type, except for [`match_default] and
[`format_default], are bitmask elements.
[:zh_CN] 该类型的常量中，除了 [`match_default] 和 [`format_default] 之外都是掩码元素。

[:en] The [`match_default] and [`format_default] constants are empty bitmasks.
[:zh_CN] 常量 [`match_default] 和 [`format_default] 均为空掩码。

[:en] Matching a regular expression against a sequence of characters
[=range(first,last)] proceeds according to the rules of the grammar specified
for the regular expression object, modified according to the effects listed in
[#:tab#re.matchflag] for any bitmask elements set.
[:zh_CN] 正则表达式针对字符序列 [=range(first,last)] 的匹配，根据由该正则表达式
对象所指定的文法的规则进行，并对于所设置的任何掩码元素，根据 [#:tab#re.matchflag]
所列出的效果有所修改。

[table:grid#re.matchflag
    [:en] [`regex_constants::match_flag_type] effects when obtaining a match
    against a character container sequence [=range(first,last)].
    [:zh_CN] [`regex_constants::match_flag_type] 在获取针对字符容器序列
    [=range(first,last)] 时的效果
    [|  [:en] Element
        [:zh_CN] 元素 ]
    [|  [:en] Effect(s) if set
        [:zh_CN] 设置时的效果 ]
]

[%@lib match_not_bol]
[|] [`match_not_bol]
[|] [:en] The first character in the sequence [=range(first,last)] shall be
    treated as though it is not at the beginning of a line, so the character
    [`^] in the regular expression shall not match [=range(first,first)].
    [:zh_CN] 序列 [=range(first,last)] 的第一个字符应当被当做如同其并非是某行的
    开始，因此正则表达式中的字符 [`^] 将不会匹配 [=range(first,first)]。
[-]

[%@lib match_not_eol]
[|] [`match_not_eol]
[|] [:en] The last character in the sequence [=range(first,last)] shall be
    treated as though it is not at the end of a line, so the character [`"$"] in
    the regular expression shall not match [=range(last,last)].
    [:zh_CN] 序列 [=range(first,last)] 的最后一个字符应当被当做如同其并非是某行
    的末尾，因此正则表达式中的字符 [`"$"] 将不会匹配 [=range(last,last)]。
[-]

[%@lib match_not_bow]
[|] [`match_not_bow]
[|] [:en] The expression [`"\\b"] shall not match the sub-sequence
    [=range(first,first)].
    [:zh_CN] 表达式 [`"\\b"] 不应当匹配子序列 [=range(first,first)]。
[-]

[%@lib match_not_eow]
[|] [`match_not_eow]
[|] [:en] The expression [`"\\b"] shall not match the sub-sequence
    [=range(last,last)].
    [:zh_CN] 表达式 [`"\\b"] 不应当匹配子序列 [=range(last,last)]。
[-]

[%@lib match_any]
[|] [`match_any]
[|] [:en] If more than one match is possible then any match is an acceptable result.
    [:zh_CN] 当有多个可能匹配时，任何匹配都是可接受的结果。
[-]

[%@lib match_not_null]
[|] [`match_not_null]
[|] [:en] The expression shall not match an empty sequence.
    [:zh_CN] 表达式不应当匹配空序列。
[-]

[%@lib match_continuous]
[|] [`match_continuous]
[|] [:en] The expression shall only match a sub-sequence that begins at [`first].
    [:zh_CN] 表达式只能匹配以 [`first] 开始的某个子序列。
[-]

[%@lib match_prev_avail]
[|] [`match_prev_avail]
[|] [:en] [`--first] is a valid iterator position.
    [:zh_CN] [`--first] 是有效的迭代器位置。
    [:en] When this flag is set the flags [`match_not_bol] and [`match_not_bow]
    shall be ignored by the regular expression algorithms ([#re.alg]) and
    iterators ([#re.iter]).
    [:zh_CN] 如果设置了该标记，则各正则表达式算法（[#re.alg]）和迭代器
    （[#re.iter]）应当忽略标记 [`match_not_bol] 和 [`match_not_bow]。
[-]

[%@lib format_default]
[|] [`format_default]
[|] [:en] When a regular expression match is to be replaced by a new string, the
    new string shall be constructed using the rules used by the ECMAScript
    replace function in ECMA-262, part 15.5.4.11 String.prototype.replace.
    [:zh_CN] 当用新字符串来替换一个正则表达式匹配时，新字符串应当使用由 ECMA-262 章节
    15.5.4.11 String.prototype.replace 中的 ECMAScript replace 函数所使用的规则来构造。
    [:en] In addition, during search and replace operations all non-overlapping
    occurrences of the regular expression shall be located and replaced, and
    sections of the input that did not match the expression shall be copied
    unchanged to the output string.
    [:zh_CN] 此外，在搜索并替换操作中，正则表达式的所有未重叠的匹配都应当被定位
    和替换，且输入中并不匹配该表达式的各个部分应当不改动地复制到输出字符串中。
[-]

[%@lib format_sed]
[|] [`format_sed]
[|] [:en] When a regular expression match is to be replaced by a new string, the
    new string shall be constructed using the rules used by the sed utility in POSIX.
    [:zh_CN] 当用新字符串来替换一个正则表达式匹配时，新字符串应当使用由 POSIX 中
    的 sed 工具所使用的规则来构造。
[-]

[%@lib format_no_copy]
[|] [`format_no_copy]
[|] [:en] During a search and replace operation, sections of the character
    container sequence being searched that do not match the regular expression
    shall not be copied to the output string.
    [:zh_CN] 在搜索并替换操作中，所搜索的字符容器序列中并不匹配该正则表达式的
    各个部分，不会被复制到输出字符串中。
[-]

[%@lib format_first_only]
[|] [`format_first_only]
[|] [:en] When specified during a search and replace operation, only the first
    occurrence of the regular expression shall be replaced.
    [:zh_CN] 当在搜索并替换操作中指定时，只有正则表达式的第一次出现会被替换。
[-]
[table:end]
