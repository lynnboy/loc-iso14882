[section#dcl.attr.nouniqueaddr
    [:en] No unique address attribute
    [:zh_CN] 无唯一地址属性
[%  [:en] attribute[!no unique address]
    [:zh_CN] 属性[!无唯一地址] ]
]

[para]
[:en]
The [~attribute-token] [`no_unique_address] specifies that a non-static data
member is a potentially-overlapping subobject ([#intro.object]).
[:zh_CN]
[~属性记号] [`no_unique_address] 指明非静态数据成员是潜在重叠子对象
（[#intro.object]）。

[:en]
No [~attribute-argument-clause] shall be present.
[:zh_CN]
不能带有[~属性实参子句]。

[:en]
The attribute may appertain to a non-static data member other than a bit-field.
[:zh_CN]
这个属性可以属于除了位字段以外的非静态数据成员。

[para]
[begin:note]
[:en]
The non-static data member can share the address of another non-static data
member or that of a base class, and any padding that would normally be inserted
at the end of the object can be reused as storage for other members.
[:zh_CN]
非静态数据成员可以与另一个非静态数据成员或基类共享地址，并且通常要插入到该对象
末尾的填充字节可以重用以作为其他的成员的存储。
[end:note]

[begin:example]
[codeblock]
template<typename Key, typename Value,
         typename Hash, typename Pred, typename Allocator>
class hash_map {
  [[no_unique_address]] Hash hasher;
  [[no_unique_address]] Pred pred;
  [[no_unique_address]] Allocator alloc;
  Bucket *buckets;
  // ...
public:
  // ...
};
[codeblock:end]

[:en]
Here, [`hasher], [`pred], and [`alloc] could have the same address as [`buckets]
if their respective types are all empty.
[:zh_CN]
这里，当相应的类型都为空时，[`hasher]、[`pred] 和 [`alloc] 可以与 [`buckets]
具有相同的地址。
[end:example]
