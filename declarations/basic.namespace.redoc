[section#basic.namespace
    [:en] Namespaces
    [:zh_CN] 命名空间
[%:begin#namespaces
    [:en] namespaces
    [:zh_CN] 命名空间
]
]

[para]
[:en]
A namespace is an optionally-named declarative region.
[:zh_CN]
命名空间是可选地带有名字的声明区。

[:en]
The name of a namespace can be used to access entities declared in that
namespace; that is, the members of the namespace.
[:zh_CN]
命名空间的名字可用于访问在该命名空间中声明的实体；它们也就是该命名空间的成员。

[:en]
Unlike other declarative regions, the definition of a namespace can be split
over several parts of one or more translation units.
[:zh_CN]
不像其他声明区，命名空间的定义式可以被分割为一个或多个翻译单元中的几个不同部分。

[para]
[begin:note]
[:en]
A namespace name with external linkage is exported if any of its
[~namespace-definition]s is exported, or if it contains any
[~export-declaration]s ([#module.interface]).
[:zh_CN]
对于带有外部连接的命名空间名，若其任何[~命名空间定义式]被导出，或者它包含了任何
[~导出声明式]（[#module.interface]），则它也被导出。

[:en]
A namespace is never attached to a module, and never has module linkage even if
it is not exported.
[:zh_CN]
命名空间从来不会附属于某个模块，而且即便被导出也从来不会具有模块连接。
[end:note]

[begin:example]
[codeblock]
export module M;
namespace N1 {}                 // [:en] [`N1] is not exported
                                // [|:zh_CN] [`N1] 未被导出
export namespace N2 {}          // [:en] [`N2] is exported
                                // [|:zh_CN] [`N2] 被导出
namespace N3 { export int n; }  // [:en] [`N3] is exported
                                // [|:zh_CN] [`N3] 被导出
[codeblock:end]
[end:example]

[para]
[:en]
The outermost declarative region of a translation unit is a namespace; see
[#basic.scope.namespace].
[:zh_CN]
翻译单元的最外层声明区是命名空间；参见 [#basic.scope.namespace]。

[include namespace.def]

[include namespace.alias]

[include namespace.udir]

[%:end#namespaces]
