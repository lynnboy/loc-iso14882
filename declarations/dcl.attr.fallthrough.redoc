[section#dcl.attr.fallthrough
    [:en] Fallthrough attribute
    [:zh_CN] fallthrough 特性标注

[%  [:en] attribute[!fallthrough]
    [:zh_CN] 特性标注[!fallthrough] ]
]

[para]
[:en]
The [~attribute-token] [`fallthrough] may be applied to a null statement
([#stmt.expr]); [%statement[!fallthrough]] such a statement is a fallthrough
statement.
[:zh_CN]
[~特性记号] [`fallthrough] 可以应用于空语句（[#stmt.expr]）；
[%语句[!fallthrough]]这种语句是直落（fallthrough）语句。

[:en]
The [~attribute-token] [`fallthrough] shall appear at most once in each
[~attribute-list] and no [~attribute-argument-clause] shall be present.
[:zh_CN]
[~特性记号] [`fallthrough] 在每个[~特性列表]中最多出现一次，且不能带有[~特性实参
子句]。

[:en]
A fallthrough statement may only appear within an enclosing [`switch] statement
([#stmt.switch]).
[:zh_CN]
直落语句只能出现于 [`switch] 语句（[#stmt.switch]）之中。

[:en]
The next statement that would be executed after a fallthrough statement shall be
a labeled statement whose label is a case label or default label for the same
[`switch] statement.
[:zh_CN]
直落语句之后执行的语句应当是带标号语句，其标号应当是同一个 [`switch] 语句的
case 标号或 default 标号。

[:en]
The program is ill-formed if there is no such statement.
[:zh_CN]
如果没有这种语句，则程序非良构。

[para]
[enter:note]
[:en]
The use of a fallthrough statement is intended to suppress a warning that an
implementation might otherwise issue for a case or default label that is
reachable from another case or default label along some path of execution.
[:zh_CN]
使用直落语句的目的在于，对实现可能针对某个 case 或 default 标号给出的警告进行
抑制，从别的 case 或 default 标号沿着某个执行路径可能达到这个标号。

[:en]
Implementations should issue a warning if a fallthrough statement is
not dynamically reachable.
[:zh_CN]
实现最好为并非动态可达的直落语句给出警告。
[exit:note]

[para]
[enter:example]
[codeblock]
void f(int n) {
  void g(), h(), i();
  switch (n) {
  case 1:
  case 2:
    g();
    [[fallthrough]];
  case 3:                       // [:en] warning on fallthrough discouraged
                                // [|:zh_CN] 不鼓励对直落的警告
    h();
  case 4:                       // [:en] implementation may warn on fallthrough
                                // [|:zh_CN] 实现可能会对直落给出警告
    i();
    [[fallthrough]];            // [:en] ill-formed
                                // [|:zh_CN] 非良构
  }
}
[codeblock:end]
[exit:example]
