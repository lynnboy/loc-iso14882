[section#basic.namespace.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en]
A namespace is an optionally-named entity whose scope can contain declarations
of any kind of entity.
[:zh_CN]
命名空间是一种可选地带有名字的实体，其作用域可以包含任何种类实体的声明式。

[:en]
The name of a namespace can be used to access entities that belong to that
namespace; that is, the [+members[%member[!namespace]]] of the namespace.
[:zh_CN]
命名空间的名字可用于访问属于该命名空间的实体；它们是该命名空间的
[+成员[%成员[!命名空间]]]。

[:en]
Unlike other entities, the definition of a namespace can be split over several
parts of one or more translation units and modules.
[:zh_CN]
不像其他实体，命名空间的定义式可以被分割为一个或多个翻译单元和模块中的几个不同
部分。

[para]
[begin:note]
[:en]
A [~namespace-definition] is exported if it contains any [~export-declaration]s
([#module.interface]).
[:zh_CN]
如果[~命名空间定义式]包含了任何[~导出声明式]（[#module.interface]），则它被导出。

[:en]
A namespace is never attached to a named module and never has a name with module
linkage.
[:zh_CN]
命名空间从来不会附属于具名模块，而且从来不会有具有模块连接的名字。
[end:note]

[begin:example]
[codeblock]
export module M;
namespace N1 {}                 // [:en] [`N1] is not exported \
                                   [:zh_CN] [`N1] 未被导出
export namespace N2 {}          // [:en] [`N2] is exported \
                                   [:zh_CN] [`N2] 被导出
namespace N3 { export int n; }  // [:en] [`N3] is exported \
                                   [:zh_CN] [`N3] 被导出
[codeblock:end]
[end:example]

[para]
[:en]
There is a [+:adj global[!namespace]] with no declaration;
see [#basic.scope.namespace].
[:zh_CN]
有一个没有声明式的[+:adj 全局[!命名空间]]；参见 [#basic.scope.namespace]。

[:en]
The global namespace belongs to the global scope; it is not an unnamed namespace
([#namespace.unnamed]).
[:zh_CN]
全局命名空间属于全局作用域；它不是无名命名空间（[#namespace.unnamed]）。

[begin:note]
[:en]
Lacking a declaration, it cannot be found by name lookup.
[:zh_CN]
由于缺少声明式，它不会被名字查找找到。
[end:note]
