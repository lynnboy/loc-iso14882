[section#namespace.unnamed
    [:en] Unnamed namespaces
    [:zh_CN] 无名命名空间

[%  [:en] namespace[!unnamed]
    [:zh_CN] 命名空间[!无名～] ]
]

[para]
[:en]
An [~unnamed-namespace-definition] behaves as if it were replaced by
[:zh_CN]
[~无名命名空间定义式]相当于被替换为

[syntax:explanation]
[`:opt:key inline] [`:key namespace] [`[*unique]] [`{ /* empty body */ }] [br]
[`:key using] [`:key namespace] [`[*unique]] [`;] [br]
[`:key namespace] [`[*unique]] [`{] [~namespace-body] [`}]
[syntax:end]

[:en@~]
where [`inline] appears if and only if it appears in the
[~unnamed-namespace-definition] and all occurrences of [`[*unique]] in a
translation unit are replaced by the same identifier, and this identifier
differs from all other identifiers in the translation unit.
[:zh_CN@~]
其中当且仅当[~无名命名空间定义式]中包含 [`inline] 时包含 [`inline]，在翻译单元中
出现的所有 [`[*unique]] 都被替换为相同的标识符，而此标识符与该翻译单元中的所有
其他标识符都不相同。

[:en]
The optional [~attribute-specifier-seq] in the [~unnamed-namespace-definition]
appertains to [`[*unique]].
[:zh_CN]
[~无名命名空间定义式]中可选的[~特性说明符序列]属于 [`[*unique]]。

[begin:example]
[codeblock]
namespace { int i; }            // [`[*unique]::i]
void f() { i++; }               // [`[*unique]::i++]

namespace A {
  namespace {
    int i;                      // [`A::[*unique]::i]
    int j;                      // [`A::[*unique]::j]
  }
  void g() { i++; }             // [`A::[*unique]::i++]
}

using namespace A;
void h() {
  i++;                          // [:en] error: [`[*unique]::i] or [`A::[*unique]::i] \
                                   [:zh_CN] 错误：[`[*unique]::i] 还是 [`A::[*unique]::i]
  A::i++;                       // [`A::[*unique]::i]
  j++;                          // [`A::[*unique]::j]
}
[codeblock:end]
[end:example]
