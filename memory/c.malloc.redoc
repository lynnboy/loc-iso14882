[section#c.malloc
    [:en] C library memory allocation
    [:zh_CN] C 程序库的内存分配
]

[para]
[begin:note]
[:en] The header [?libheader@ref cstdlib] declares the functions described in
this subclause.
[:zh_CN] 头文件 [?libheader@ref cstdlib] 声明了本子条款所说明的各个函数。
[end:note]

[%@lib aligned_alloc]
[%@lib calloc]
[%@lib malloc]
[codeblock:declaration]
void* aligned_alloc(size_t alignment, size_t size);
void* calloc(size_t nmemb, size_t size);
void* malloc(size_t size);
[codeblock:end]

[div:description]
[para:effects]
[:en] These functions have the semantics specified in the C standard library.
[:zh_CN] 这些函数具有它们在 C 标准程序库中所指定的语义。

[para:remarks]
[:en] These functions do not attempt to allocate storage by calling
[%@lib@member new[!operator]] [`::operator new()] ([#new.delete]).
[:zh_CN] 这些函数并不试图通过调用 [%@lib@member new[!operator]] [`::operator new()]
（[#new.delete]）来分配存储。

[para]
[:en] These functions implicitly create objects ([#intro.object]) in the returned
region of storage and return a pointer to a suitable created object.
[:zh_CN] 这些函数在所返回的存储区域中隐式创建对象（[#intro.object]）并返回指向一个适当
创建的对象的指针。

[:en] In the case of [`calloc], the objects are created before the storage is zeroed.
[:zh_CN] 对于 [`calloc] 的情况，这些对象是在存储被清零之前创建的。
[div:end]

[%@lib realloc]
[codeblock:declaration]
void* realloc(void* ptr, size_t size);
[codeblock:end]

[div:description]
[para:expects]
[:en] [`free(ptr)] has well-defined behavior.
[:zh_CN] [`free(ptr)] 具有良定义的行为。

[para:effects]
[:en] If [`ptr] is not null and [`size] is zero,
the behavior is erroneous and the effects are implementation-defined.
[:zh_CN] 如果 [`ptr] 非空且 [`size] 为零，那么具有错误行为，且其效果是由实现定义的。

[:en] Otherwise, this function has the semantics specified in the C standard library.
[:zh_CN] 否则，此函数具有其在 C 标准程序库中所指定的语义。

[para:remarks]
[:en] This functions does not attempt to allocate storage by calling
[`::operator new()] ([#new.delete]).
[:zh_CN] 此函数并不试图通过调用 [`::operator new()]（[#new.delete]）来分配存储。

[para]
[:en] When a non-null pointer is returned, this function implicitly creates objects ([#intro.object])
in the returned region of storage and returns a pointer to a suitable created object.
[:zh_CN] 当返回非空指针时，此函数在所返回的存储区域中隐式创建对象（[#intro.object]）
并返回指向一个适当创建的对象的指针。

[:en] The objects are created before the storage is copied.
[:zh_CN] 这些对象是在存储被复制之前创建的。
[div:end]

[%@lib free]
[codeblock:declaration]
void free(void* ptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] This function has the semantics specified in the C standard library.
[:zh_CN] 这个函数具有它在 C 标准程序库中所指定的语义。

[para:remarks]
[:en] This function does not attempt to deallocate storage by calling
[%@lib@member delete[!operator]] [`::operator delete()].
[:zh_CN] 这个函数并不试图通过调用 [%@lib@member delete[!operator]] [`::operator delete()]
来回收存储。

[para:xref@c] 7.22.3
