[section#indirect.relops
    [:en] Relational operators
    [:zh_CN] 关系运算符
]

[%@lib@member operator==[!indirect]]
[codeblock:declaration]
template<class U, class AA>
  constexpr bool operator==(const indirect& lhs, const indirect<U, AA>& rhs)
    noexcept(noexcept(*lhs == *rhs));
[codeblock:end]

[div:description]
[para:mandates]
[:en] The expression [`*lhs == *rhs] is well-formed and its result is convertible to [`bool].
[:zh_CN] 表达式 [`*lhs == *rhs] 良构，且其结果可以转换为 [`bool]。

[para:returns]
[:en] If [`lhs] is valueless or [`rhs] is valueless,
[`lhs.valueless_after_move() == rhs.valueless_after_move()]; otherwise [`*lhs == *rhs].
[:zh_CN] 如果 [`lhs] 无值或者 [`rhs] 无值，则返回
[`lhs.valueless_after_move() == rhs.valueless_after_move()]；否则返回 [`*lhs == *rhs]。
[div:end]

[%@lib@member 【*synth-three-way-result][!indirect]]
[codeblock:declaration]
template<class U, class AA>
  constexpr [[redoc("*>")]]synth-three-way-result<T, U>
    operator<=>(const indirect& lhs, const indirect<U, AA>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] If [`lhs] is valueless or [`rhs] is valueless,
[`!lhs.valueless_after_move() <=> !rhs.valueless_after_move()];
otherwise [`[*synth-three-way](*lhs, *rhs)].
[:zh_CN] 如果 [`lhs] 无值或者 [`rhs] 无值，则返回
[`!lhs.valueless_after_move() <=> !rhs.valueless_after_move()]；
否则返回 [`[*synth-three-way](*lhs, *rhs)]。
[div:end]
