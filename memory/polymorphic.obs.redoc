[section#polymorphic.obs
    [:en] Observers
    [:zh_CN] 探察函数
]

[%@lib@member operator*[!polymorphic]]
[codeblock:declaration]
constexpr const T& operator*() const & noexcept;
constexpr T& operator*() & noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [`*this] is not valueless.
[:zh_CN] [`*this] 并非无值。

[para:returns]
[:en] A reference to the owned object.
[:zh_CN] 到所拥有对象的引用。
[div:end]


[%@lib@member operator->[!polymorphic]]
[codeblock:declaration]
constexpr const_pointer operator->() const noexcept;
constexpr pointer operator->() noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [`*this] is not valueless.
[:zh_CN] [`*this] 并非无值。

[para:returns]
[:en] A pointer to the owned object.
[:zh_CN] 指向所拥有对象的指针。
[div:end]

[%@lib@member valueless_after_move[!polymorphic]]
[codeblock:declaration]
constexpr bool valueless_after_move() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if [`*this] is valueless, otherwise [`false].
[:zh_CN] 若 [`*this] 无值则返回 [`true]，否则返回 [`false]。
[div:end]

[%@lib@member get_allocator[!polymorphic]]
[codeblock:declaration]
constexpr allocator_type get_allocator() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [*alloc].
[:zh_CN] [*alloc]。
[div:end]
