[section#range.adaptors.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] Subclause [#range.adaptors] defines [+:% range adaptors], which are
utilities that transform a [`:c range] into a [`:c view] with custom behaviors.
[:zh_CN] 子条款 [#range.adaptors] 定义了一些[+:% 范围适配器]，它们是用于将
[`:c range] 转变为具有自定义行为的 [`:c view] 的辅助工具。

[:en] These adaptors can be chained to create pipelines of range transformations
that evaluate lazily as the resulting view is iterated.
[:zh_CN] 可以将这些适配器串联起来创建范围变换的管道，并在对结果视图的迭代中进行
惰性求值。

[para]
[:en] Range adaptors are declared in namespace [`std::ranges::views].
[:zh_CN] 范围适配器都声明于 [`std::ranges::views] 命名空间中。

[para]
[:en] The bitwise [=logop OR] operator is overloaded for the purpose of creating
adaptor chain pipelines.
[:zh_CN] 重载了按位或（[=logop OR]）运算符，以便于建立适配器链管道。

[:en] The adaptors also support function call syntax with equivalent semantics.
[:zh_CN] 各适配器也支持具有等价语义的函数调用语法。

[para]
[begin:example]
[codeblock]
vector<int> ints{0,1,2,3,4,5};
auto even = [](int i){ return 0 == i % 2; };
auto square = [](int i) { return i * i; };
for (int i : ints | views::filter(even) | views::transform(square)) {
  cout << i << ' '; // [:en] prints: 0 4 16 \
                       [:zh_CN] 打印：0 4 16
}
assert(ranges::equal(ints | views::filter(even), views::filter(ints, even)));
[codeblock:end]
[end:example]
