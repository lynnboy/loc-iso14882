[section#range.access.rbegin
    [`ranges::rbegin]
]

[para]
[:en] The name [`ranges::rbegin] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`ranges::rbegin] 代表一个定制化点
（[#customization.point.object]）。

[:en] Given a subexpression [`E] and an lvalue [`t] that denotes the same object
as [`E], if [`E] is an rvalue and
[`enable_safe_range<remove_cvref_t<decltype((E))>>] is [`false],
[`ranges::rbegin(E)] is ill-formed.
[:zh_CN] 给定一个子表达式 [`E] 和一个指代与 [`E] 相同的对象的左值 [`t]，若 [`E]
为右值并且 [`enable_safe_range<remove_cvref_t<decltype((E))>>] 为 [`false]，
则 [`ranges::rbegin(E)] 非良构。

[:en] Otherwise, [`ranges::begin(E)] is expression-equivalent to:
[:zh_CN] 否则，[`ranges::begin(E)] 按表达式等价于：

[list]
[item]
[:en] [`[^decay-copy](t.rbegin())] if it is a valid expression and its type [`I]
models [`:c input_or_output_iterator].
[:zh_CN] 当 [`[^decay-copy](t.rbegin())] 是有效表达式且其类型 [`I] 构成
[`:c input_or_output_iterator] 时为该表达式。

[item]
[:en] Otherwise, [`[^decay-copy](begin(t))] if it is a valid expression and its
type [`I] models [`:c input_or_output_iterator] with overload resolution
performed in a context that includes the declarations:
[:zh_CN] 否则，当 [`[^decay-copy](begin(t))] 为有效表达式且其类型 [`I] 构成
[`:c input_or_output_iterator] 时，在包含下列声明式：
[codeblock]
template<class T> void rbegin(T&&) = delete;
[codeblock:end]
[:en@~] and does not include a declaration of [`ranges::rbegin].
[:zh_CN@~] 但不包含 [`ranges::rbegin] 的声明式的语境中实施重载决议，则为该表达式。

[item]
[:en] Otherwise, [`make_reverse_iterator(ranges::end(t))] if both
[`ranges::begin(t)] and [`ranges::end(t)] are valid expressions of the same type
[`I] which models [`:c bidirectional_iterator] ([#iterator.concept.bidir]).
[:zh_CN] 否则，如果 [`ranges::begin(t)] 和 [`ranges::end(t)] 都是相同类型 [`I]
的有效表达式，且 [`I] 构成 [`:c bidirectional_iterator]
（[#iterator.concept.bidir]），则为 [`make_reverse_iterator(ranges::end(t))]。

[item]
[:en] Otherwise, [`ranges::rbegin(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::rbegin(E)] 非良构。

[begin:note]
[:en] This case can result in substitution failure when [`ranges::rbegin(E)]
appears in the immediate context of a template instantiation.
[:zh_CN] 这种情况下，当 [`ranges::rbegin(E)] 出现在某个模板实例化的直接语境中时
会导致替换失败。
[end:note]
[list:end]

[para]
[begin:note]
[:en] Whenever [`ranges::rbegin(E)] is a valid expression, its type models
[`:c input_or_output_iterator].
[:zh_CN] 只要 [`ranges::rbegin(E)] 是有效表达式，则其类型就构成
[`:c input_or_output_iterator]。
[end:note]
