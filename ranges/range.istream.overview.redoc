[section#range.istream.overview
    [:en] Overview
    [:zh_CN] 概述
]

[para]
[:en] [`basic_istream_view] models [`:c input_range] and reads (using
[`operator>>]) successive elements from its corresponding input stream.
[:zh_CN] [`basic_istream_view] 构成 [`:c input_range]，并（使用 [`operator>>]）
从其所对应的输入流中读取连续的元素。

[para]
[:en] The name [`views::istream<T>] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`views::istream<T>] 代表一个定制化点对象
（[#customization.point.object]）。

[:en] Given a type [`T] and a subexpression [`E] of type [`U], if [`U] models
[`[`:c derived_from]<basic_istream<typename U::char_type, typename U::traits_type>>],
then the expression [`views::istream<T>(E)] is expression-equivalent to
[`basic_istream_view<T, typename U::char_type, typename U::traits_type>(E)];
otherwise, [`views::istream<T>(E)] is ill-formed.
[:zh_CN] 给定类型 [`T] 和一个 [`U] 类型的子表达式 [`E]，如果 [`U] 构成
[`[`:c derived_from]<basic_istream<typename U::char_type, typename U::traits_type>>]，
则表达式 [`views::istream<T>(E)] 按表达式等价于
[`basic_istream_view<T, typename U::char_type, typename U::traits_type>(E)]；
否则 [`views::istream<T>(E)] 非良构。

[para]
[begin:example]
[codeblock]
auto ints = istringstream{"0 1  2   3     4"};
ranges::copy(views::istream<int>(ints), ostream_iterator<int>{cout, "-"});
// [:en] prints [`0-1-2-3-4-] \
[:zh_CN] 打印出：[`0-1-2-3-4-]
[codeblock:end]
[end:example]
