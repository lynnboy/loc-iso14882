[section#range.prim.empty
    [`ranges::empty]
]

[para]
[:en] The name [`empty] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`empty] 代表一个定制化点（[#customization.point.object]）。

[:en] The expression [`ranges::empty(E)] for some subexpression [`E]
is expression-equivalent to:
[:zh_CN] 对于某个子表达式 [`E]，表达式 [`ranges::empty(E)] 按表达式等价于：

[list]
[item]
[:en] [`bool((E).empty())] if it is a valid expression.
[:zh_CN] 若 [`bool((E).empty())] 为有效表达式则为该表达式。

[item]
[:en] Otherwise, [`(ranges::size(E) == 0)] if it is a valid expression.
[:zh_CN] 否则，若 [`(ranges::size(E) == 0)] 为有效表达式则为该表达式。

[item]
[:en] Otherwise, [`EQ], where [`EQ] is
[`bool(ranges::begin(E) == ranges::end(E))] except that [`E] is only evaluated
once, if [`EQ] is a valid expression and the type of [`ranges::begin(E)] models
[`:c forward_iterator].
[:zh_CN] 否则，令 [`EQ] 为 [`bool(ranges::begin(E) == ranges::end(E))]（但 [`E]
仅被求值一次），若 [`EQ] 为有效表达式，且 [`ranges::begin(E)] 构成
[`:c forward_iterator]，则为 [`EQ]。

[item]
[:en] Otherwise, [`ranges::empty(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::empty(E)] 非良构。

[begin:note]
[:en] This case can result in substitution failure when [`ranges::empty(E)]
appears in the immediate context of a template instantiation.
[:zh_CN] 这种情况下，当 [`ranges::empty(E)] 出现在某个模板实例化的直接语境中时
会导致替换失败。
[end:note]
[list:end]

[para]
[begin:note]
[:en] Whenever [`ranges::empty(E)] is a valid expression, it has type [`bool].
[:zh_CN] 只要 [`ranges::empty(E)] 是有效表达式，则其类型为 [`bool]。
[end:note]
