[section#range.refinements
    [:en] Other range refinements
    [:zh_CN] 其他范围精化概念
]

[para]
[:en] The [`output_range] concept specifies requirements of a [`range] type for
which [`ranges::begin] returns a model of [`output_iterator]
([#iterator.concept.output]).
[:zh_CN] [`output_range] 概念对 [`ranges::begin] 所返回的类型构成
[`output_iterator]（[#iterator.concept.output]）的 [`range] 类型指定了一些规定。

[:en] [`input_range], [`forward_range], [`bidirectional_range], and
[`random_access_range] are defined similarly.
[:zh_CN] 也类似地定义了[`input_range]，[`forward_range]，[`bidirectional_range]，
以及 [`random_access_range]。

[%@librry output_range]
[%@librry input_range]
[%@librry forward_range]
[%@librry bidirectional_range]
[%@librry random_access_range]
[codeblock:declaration]
template<class R, class T>
  concept output_range =
    range<R> && output_iterator<iterator_t<R>, T>;

template<class T>
  concept input_range =
    range<T> && input_iterator<iterator_t<T>>;

template<class T>
  concept forward_range =
    input_range<T> && forward_iterator<iterator_t<T>>;

template<class T>
  concept bidirectional_range =
    forward_range<T> && bidirectional_iterator<iterator_t<T>>;

template<class T>
  concept random_access_range =
    bidirectional_range<T> && random_access_iterator<iterator_t<T>>;
[codeblock:end]

[para]
[:en] [`contiguous_range] additionally requires that the [`ranges::data]
customization point ([#range.prim.data]) is usable with the range.
[:zh_CN] [`contiguous_range] 额外规定了可以对范围使用 [`ranges::data] 定制化点
（[#range.prim.data]）。

[%@librry contiguous_range]
[codeblock:declaration]
template<class T>
  concept contiguous_range =
    random_access_range<T> && contiguous_iterator<iterator_t<T>> &&
    requires(T& t) {
      { ranges::data(t) } -> same_as<add_pointer_t<range_reference_t<T>>>;
    };
[codeblock:end]

[para]
[:en] The [`common_range] concept specifies requirements of a [`range] type for
which [`ranges::begin] and [`ranges::end] return objects of the same type.
[:zh_CN] [`common_range] 概念针对 [`range] 类型规定，[`ranges::begin] 和
[`ranges::end] 返回的对象具有相同类型。

[enter:example]
[:en] The standard containers ([#containers]) model [`common_range].
[:zh_CN] 标准容器（[#containers]）均构成 [`common_range]。
[exit:example]

[%@librry common_range]
[codeblock:declaration]
template<class T>
  concept common_range =
    range<T> && same_as<iterator_t<T>, sentinel_t<T>>;
[codeblock:end]

[para]
[:en] The [`viewable_range] concept specifies the requirements of a [`range]
type that can be converted to a [`view] safely.
[:zh_CN] [`viewable_range] 概念为可以安全地转换为 [`view] 的 [`range] 类型做出了
规定。

[%@librry viewable_range]
[codeblock:declaration [!:var forwarding-range]]
template<class T>
  concept viewable_range =
    range<T> && ([*forwarding-range]<T> || view<decay_t<T>>);
[codeblock:end]
