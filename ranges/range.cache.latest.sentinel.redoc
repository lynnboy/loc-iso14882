[section#range.cache.latest.sentinel
    [:en] Class [`cache_latest_view::[*sentinel]]
    [:zh_CN] 类 [`cache_latest_view::[*sentinel]]
]

[codeblock:synopsis]
namespace std::ranges {
  template<[[redoc("`:c>")]]input_range V>
    requires [[redoc("`:c>")]]view<V>
  class cache_latest_view<V>::[[redoc("*>")]]sentinel {
    sentinel_t<V> [[redoc("*>")]]end_ = sentinel_t<V>();                       // [=expos]

    constexpr explicit [[redoc("*>")]]sentinel(cache_latest_view& parent);     // [=expos]

  public:
    [[redoc("*>")]]sentinel() = default;

    constexpr sentinel_t<V> base() const;

    friend constexpr bool operator==(const [[redoc("*>")]]iterator& x, const [[redoc("*>")]]sentinel& y);

    friend constexpr range_difference_t<V> operator-(const [[redoc("*>")]]iterator& x, const [[redoc("*>")]]sentinel& y)
      requires sized_sentinel_for<sentinel_t<V>, iterator_t<V>>;
    friend constexpr range_difference_t<V> operator-(const [[redoc("*>")]]sentinel& x, const [[redoc("*>")]]iterator& y)
      requires sized_sentinel_for<sentinel_t<V>, iterator_t<V>>;
  };
}
[codeblock:end]

[%@lib@ctor cache_latest_view::[*sentinel]]
[codeblock:declaration]
constexpr explicit [[redoc("*>")]]sentinel(cache_latest_view& parent);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [*end_] with [`ranges::end(parent.[*base_])].
[:zh_CN] 以 [`ranges::end(parent.[*base_])] 初始化 [*end_]。
[div:end]

[%@lib@member base[!cache_latest_view::[*sentinel]]]
[codeblock:declaration]
constexpr sentinel_t<V> base() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [*end_].
[:zh_CN] [*end_]。
[div:end]

[%@lib@member operator==[!cache_latest_view::[*iterator]]]
[%@lib@member operator==[!cache_latest_view::[*sentinel]]]
[codeblock:declaration]
friend constexpr bool operator==(const iterator& x, const sentinel& y);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.[*current_] == y.[*end_]].
[:zh_CN] [`x.[*current_] == y.[*end_]]。
[div:end]

[%@lib@member operator-[!cache_latest_view::[*iterator]]]
[%@lib@member operator-[!cache_latest_view::[*sentinel]]]
[codeblock:declaration]
friend constexpr range_difference_t<V> operator-(const [[redoc("*>")]]iterator& x, const [[redoc("*>")]]sentinel& y)
  requires sized_sentinel_for<sentinel_t<V>, iterator_t<V>>;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.[*current_] - y.[*end_]].
[:zh_CN] [`x.[*current_] - y.[*end_]]。
[div:end]

[%@lib@member operator-[!cache_latest_view::[*iterator]]]
[%@lib@member operator-[!cache_latest_view::[*sentinel]]]
[codeblock:declaration]
friend constexpr range_difference_t<V> operator-(const [[redoc("*>")]]sentinel& x, const [[redoc("*>")]]iterator& y)
  requires sized_sentinel_for<sentinel_t<V>, iterator_t<V>>;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.[*end_] - y.[*current_]].
[:zh_CN] [`x.[*end_] - y.[*current_]]。
[div:end]
