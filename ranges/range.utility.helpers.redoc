[section#range.utility.helpers
    [:en] Helper concepts
    [:zh_CN] 辅助概念
]

[para]
[:en] Many of the types in subclause [#range.utility] are specified in terms of
the following exposition-only concepts:
[:zh_CN] 子条款 [#range.utility] 中的许多类型都是以下列仅用于阐述的概念来给出的：

[codeblock:declaration]
template<class R>
  concept [[redoc("*:c@def>")]]simple-view =                         // [=expos]
    [[redoc("`:c>")]]view<R> && [[redoc("`:c>")]]range<const R> &&
    [[redoc("`:c>")]]same_as<iterator_t<R>, iterator_t<const R>> &&
    [[redoc("`:c>")]]same_as<sentinel_t<R>, sentinel_t<const R>>;

template<class I>
  concept [[redoc("*:c@def>")]]has-arrow =                           // [=expos]
    [[redoc("`:c>")]]input_iterator<I> && (is_pointer_v<I> || requires(I i) { i.operator->(); });

template<class T, class U>
  concept [[redoc("*:c@def>")]]not-same-as =                         // [=expos]
    ![[redoc("`:c>")]]same_as<remove_cvref_t<T>, remove_cvref_t<U>>;
[codeblock:end]
