[section#range.access.begin
    [`ranges::begin]
]

[para]
[:en] The name [`ranges::begin] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`ranges::begin] 代表一个定制化点（[#customization.point.object]）。

[para]
[:en] Given a subexpression [`E] with type [`T], let [`t] be an lvalue that
denotes the reified object for [`E].
[:zh_CN] 给定一个类型为 [`T] 的子表达式 [`E]，令 [`t] 为一个代表 [`E] 的具象化
对象的左值。

[:en] Then:
[:zh_CN] 则有：

[list]
[item]
[:en] If [`E] is an rvalue and [`enable_borrowed_range<remove_cv_t<T>>] is
[`false], [`ranges::begin(E)] is ill-formed.
[:zh_CN] 若 [`E] 为左值且 [`enable_borrowed_range<remove_cv_t<T>>] 为 [`false]，
则 [`ranges::begin(E)] 非良构。

[item]
[:en] Otherwise, if [`T] is an array type ([#basic.compound]) and
[`remove_all_extents_t<T>] is an incomplete type, [`ranges::begin(E)] is
ill-formed with no diagnostic required.
[:zh_CN] 否则，若 [`T] 为数组类型（[#basic.compound]）且
[`remove_all_extents_t<T>] 为不完整类型，则 [`ranges::begin(E)] 非良构且无须诊断。

[item]
[:en] Otherwise, if [`T] is an array type, [`ranges::begin(E)] is
expression-equivalent to [`t + 0].
[:zh_CN] 否则，若 [`T] 为数组类型，则 [`ranges::begin(E)] 按表达式等价于 [`t + 0]。

[item]
[:en] Otherwise, if [`[^decay-copy](t.begin())] is a valid expression whose type
models [`:c input_or_output_iterator], [`ranges::begin(E)] is
expression-equivalent to [`[^decay-copy](t.begin())].
[:zh_CN] 否则，若 [`[^decay-copy](t.begin())] 为其类型构成
[`:c input_or_output_iterator] 的有效表达式，则 [`ranges::begin(E)] 按表达式
等价于 [`[^decay-copy](t.begin())]。

[item]
[:en] Otherwise, if [`T] is a class or enumeration type and
[`[^decay-copy](begin(t))] is a valid expression whose type models
[`:c input_or_output_iterator] with overload resolution performed in a context
in which unqualified lookup for [`begin] finds only the declarations
[:zh_CN] 否则，若 [`T] 为类或枚举类型，且在某个对 [`begin] 进行未限定查找仅会
找到以下声明式的语境中进行重载决议的条件下 [`[^decay-copy](begin(t))] 为有效
表达式且其类型构成 [`:c input_or_output_iterator]，
[codeblock]
void begin(auto&) = delete;
void begin(const auto&) = delete;
[codeblock:end]
[:en@~] then [`ranges::begin(E)] is expression-equivalent to
[`[^decay-copy](begin(t))] with overload resolution performed in the above
context.
[:zh_CN@~] 则 [`ranges::begin(E)] 在上述语境中进行重载决议的条件下按表达式等价于
[`[^decay-copy](begin(t))]。

[item]
[:en] Otherwise, [`ranges::begin(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::begin(E)] 非良构。
[list:end]

[para]
[begin:note]
[:en] Diagnosable ill-formed cases above result in substitution failure when
[`ranges::begin(E)] appears in the immediate context of a template instantiation.
[:zh_CN] 以上各种可诊断的非良构情况，当 [`ranges::begin(E)] 出现在某个模板实例化
的直接语境中时会导致替换失败。
[end:note]

[para]
[begin:note]
[:en] Whenever [`ranges::begin(E)] is a valid expression, its type models
[`:c input_or_output_iterator].
[:zh_CN] 只要 [`ranges::begin(E)] 是有效表达式，则其类型就构成
[`:c input_or_output_iterator]。
[end:note]
