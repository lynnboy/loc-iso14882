[section#range.elements.overview
    [:en] Overview
    [:zh_CN] 概述
]

[para]
[:en] [`elements_view] takes a [`:c view] of tuple-like values and a [`size_t],
and produces a [`:c view] with a value-type of the [$N^\text{th}] element of the
adapted [`:c view][=']s value-type.
[:zh_CN] [`elements_view] 接受元组式值的一个 [`:c view] 和一个 [`size_t]，并产生
一个 [`:c view]，其值类型为其所适配的 [`:c view] 的值类型的第 [$N] 个元素。

[para]
[%@lib@member elements[!views]]
[:en] The name [`views::elements<N>] denotes a range adaptor object
([#range.adaptor.object]).
[:zh_CN] 名字 [`views::elements<N>] 代表一个范围适配器对象
（[#range.adaptor.object]）。

[:en] Given subexpression [`E] and constant expression [`N], the expression
[`views::elements<N>(E)] is expression-equivalent to
[`elements_view<views::all_t<decltype((E))>, N>{E}].
[:zh_CN] 给定子表达式 [`E] 和常量 [`N]，表达式 [`views::elements<N>(E)] 按表达式
等价于 [`elements_view<views::all_t<decltype((E))>, N>{E}]。

[para:~]
[begin:example]
[codeblock]
auto historical_figures = map{
  pair{"Lovelace"sv, 1815},
  {"Turing"sv, 1912},
  {"Babbage"sv, 1791},
  {"Hamilton"sv, 1936}
};

auto names = historical_figures | views::elements<0>;
for (auto&& name : names) {
  cout << name << ' ';          // [:en] prints [`Babbage Hamilton Lovelace Turing ] \
                                [:zh_CN] 打印出：[`Babbage Hamilton Lovelace Turing ]
}

auto birth_years = historical_figures | views::elements<1>;
for (auto&& born : birth_years) {
  cout << born << ' ';          // [:en] prints [`1791 1936 1815 1912 ] \
                                [:zh_CN] 打印出：[`1791 1936 1815 1912 ]
}
[codeblock:end]
[end:example]

[para]
[:en] [`keys_view] is an alias for [`elements_view<views::all_t<R>, 0>], and is
useful for extracting keys from associative containers.
[:zh_CN] [`keys_view] 是 [`elements_view<views::all_t<R>, 0>] 的别名，有助于从
关联容器中提取键。

[para:~]
[begin:example]
[codeblock]
auto names = historical_figures | views::keys;
for (auto&& name : names) {
  cout << name << ' ';          // [:en] prints [`Babbage Hamilton Lovelace Turing ] \
                                [:zh_CN] 打印出：[`Babbage Hamilton Lovelace Turing ]
}
[codeblock:end]
[end:example]

[para]
[:en] [`values_view] is an alias for [`elements_view<views::all_t<R>, 1>], and
is useful for extracting keys from associative containers.
[:zh_CN] [`values_view] 是 [`elements_view<views::all_t<R>, 1>] 的别名，有助于从
关联容器中提取值。

[para:~]
[begin:example]
[codeblock]
auto is_even = [](const auto x) { return x % 2 == 0; };
cout << ranges::count_if(historical_figures | views::values, is_even);  // [:en] prints [`2] \
                                                                        [:zh_CN] 打印出：[`2]
[codeblock:end]
[end:example]
