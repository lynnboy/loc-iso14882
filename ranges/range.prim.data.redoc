[section#range.prim.data
    [`ranges::data]
]

[para]
[:en] The name [`data] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`data] 代表一个定制化点（[#customization.point.object]）。

[:en] The expression [`ranges::data(E)] for some subexpression [`E]
is expression-equivalent to:
[:zh_CN] 对于某个子表达式 [`E]，表达式 [`ranges::data(E)] 按表达式等价于：

[list]
[item]
[:en] If [`E] is an lvalue, [`[*decay-copy](E.data())] if it is a valid
expression of pointer to object type.
[:zh_CN] 若 [`E] 为左值，则当 [`[*decay-copy](E.data())] 是有效的对象指针类型的
表达式时，为该表达式。

[item]
[:en] Otherwise, if [`ranges::begin(E)] is a valid expression whose type models
[`ContiguousIterator],
[:zh_CN] 否则，若 [`ranges::begin(E)] 是有效表达式，且其类型构成
[`ContiguousIterator]，则为
[codeblock:notation]
ranges::begin(E) == ranges::end(E) ? nullptr : addressof(*ranges::begin(E))
[codeblock:end]
[:en@~] except that [`E] is evaluated only once.
[:zh_CN@~] 但 [`E] 仅被求值一次。

[item]
[:en] Otherwise, [`ranges::data(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::data(E)] 非良构。

[enter:note]
[:en] This case can result in substitution failure when [`ranges::data(E)]
appears in the immediate context of a template instantiation.
[:zh_CN] 这种情况下，当 [`ranges::data(E)] 出现在某个模板实例化的直接语境中时
会导致替换失败。
[exit:note]
[list:end]

[para]
[enter:note]
[:en] Whenever [`ranges::data(E)] is a valid expression, it has pointer to
object type.
[:zh_CN] 只要 [`ranges::data(E)] 是有效表达式，则其具有对象指针类型。
[exit:note]
