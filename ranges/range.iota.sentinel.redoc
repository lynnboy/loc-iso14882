[section#range.iota.sentinel
    [:en] Class template [`iota_view::sentinel]
    [:zh_CN] 类模板 [`iota_view::sentinel]
]

[codeblock:synopsis]
namespace std::ranges {
  template<class W, class Bound>
  struct iota_view<W, Bound>::sentinel {
  private:
    Bound bound_ = Bound();     // [=Expos]
  public:
    sentinel() = default;
    constexpr explicit sentinel(Bound bound);

    friend constexpr bool operator==(const iterator& x, const sentinel& y);
    friend constexpr bool operator==(const sentinel& x, const iterator& y);
    friend constexpr bool operator!=(const iterator& x, const sentinel& y);
    friend constexpr bool operator!=(const sentinel& x, const iterator& y);
  };
}
[codeblock:end]

[%@library sentinel[!iota_view::sentinel]]
[codeblock:declaration]
constexpr explicit sentinel(Bound bound);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Initializes [`bound_] with [`bound].
[:zh_CN] 以 [`bound] 初始化 [`bound_]。
[exit:description]

[%@library operator==[!iota_view::sentinel]]
[codeblock:declaration]
friend constexpr bool operator==(const iterator& x, const sentinel& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return x.value_ == y.bound_;]
[:zh_CN] 等价于：[`return x.value_ == y.bound_;]
[exit:description]

[%@library operator==[!iota_view::sentinel]]
[codeblock:declaration]
friend constexpr bool operator==(const sentinel& x, const iterator& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return y == x;]
[:zh_CN] 等价于：[`return y == x;]
[exit:description]

[%@library operator!=[!iota_view::sentinel]]
[codeblock:declaration]
friend constexpr bool operator!=(const iterator& x, const sentinel& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return !(x == y);]
[:zh_CN] 等价于：[`return !(x == y);]
[exit:description]

[%@library operator!=[!iota_view::sentinel]]
[codeblock:declaration]
friend constexpr bool operator!=(const sentinel& x, const iterator& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return !(y == x);]
[:zh_CN] 等价于：[`return !(y == x);]
[exit:description]
