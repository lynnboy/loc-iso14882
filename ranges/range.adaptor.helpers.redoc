[section#range.adaptor.helpers
    [:en] Range adaptor helpers
    [:zh_CN] 范围适配器辅助函数
]

[codeblock:synopsis]
namespace std::ranges {
  template<class F, class Tuple>
  constexpr auto [[redoc("*>")]]tuple-transform(F&& f, Tuple&& t) { // [=expos]
    return apply([&]<class... Ts>(Ts&&... elements) {
      return tuple<invoke_result_t<F&, Ts>...>(invoke(f, std::forward<Ts>(elements))...);
    }, std::forward<Tuple>(t));
  }

  template<class F, class Tuple>
  constexpr void [[redoc("*>")]]tuple-for-each(F&& f, Tuple&& t) { // [=expos]
    apply([&]<class... Ts>(Ts&&... elements) {
      (static_cast<void>(invoke(f, std::forward<Ts>(elements))), ...);
    }, std::forward<Tuple>(t));
  }

  template<class T>
  constexpr T& [[redoc("*>")]]as-lvalue(T&& t) {                   // [=expos]
    return static_cast<T&>(t);
  }
}
[codeblock:end]
