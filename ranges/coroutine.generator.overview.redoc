[section#coroutine.generator.overview
    [:en] Overview
    [:zh_CN] 概述
]

[para]
[:en] Class template [`generator] presents a view of the elements yielded
by the evaluation of a coroutine.
[:zh_CN] 类模板 [`generator] 呈现由一个协程所产出元素的视图。

[para]
[:en] A [`generator] generates a sequence of elements by repeatedly resuming the
coroutine from which it was returned.
[:zh_CN] [`generator] 通过重复地恢复返回它的协程来产生元素的序列。

[:en] Elements of the sequence are produced by the coroutine
each time a [`co_yield] statement is evaluated.
[:zh_CN] 该序列的各元素是由协程每次求值 [`co_yield] 语句所产生的。

[:en] When the [`co_yield] statement is of the form [`co_yield elements_of(r)],
each element of the range [`r] is successively produced as an element of the
sequence.
[:zh_CN] 当 [`co_yield] 语句的形式为 [`co_yield elements_of(r)] 时，连续产生范围
[`r] 的各元素作为该序列的元素。

[begin:example]
[codeblock]
generator<int> ints(int start = 0) {
  while (true)
    co_yield start++;
}

void f() {
  for (auto i : ints() | views::take(3))
    cout << i << ' ';       // [:en] prints [`0 1 2] \
                            [:zh_CN] 打印 [`0 1 2]
}
[codeblock:end]
[end:example]
