[section#range.take.sentinel
    [:en] Class template [`take_view::sentinel]
    [:zh_CN] 类模板 [`take_view::sentinel]
]

[codeblock:synopsis]
namespace std::ranges {
  template<class V>
  template<bool Const>
  class take_view<V>::sentinel {
  private:
    using Base = conditional_t<Const, const V, V>;      // [=expos]
    using CI = counted_iterator<iterator_t<Base>>;      // [=expos]
    sentinel_t<Base> end_ = sentinel_t<Base>();         // [=expos]
  public:
    sentinel() = default;
    constexpr explicit sentinel(sentinel_t<Base> end);
    constexpr sentinel(sentinel<!Const> s)
      requires Const && convertible_to<sentinel_t<V>, sentinel_t<Base>>;

    constexpr sentinel_t<Base> base() const;

    friend constexpr bool operator==(const CI& y, const sentinel& x);
  };
}
[codeblock:end]

[%@library sentinel[!take_view::sentinel]]
[codeblock:declaration]
constexpr explicit sentinel(sentinel_t<Base> end);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Initializes [`end_] with [`end].
[:zh_CN] 以 [`end] 初始化 [`end_]。
[end:description]

[%@library sentinel[!take_view::sentinel]]
[codeblock:declaration]
constexpr sentinel(sentinel<!Const> s)
  requires Const && convertible_to<sentinel_t<V>, sentinel_t<Base>>;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Initializes [`end_] with [`std::move(s.end_)].
[:zh_CN] 以 [`std::move(s.end_)] 初始化 [`end_]。
[end:description]

[%@library base[!take_view::sentinel]]
[codeblock:declaration]
constexpr sentinel_t<Base> base() const;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return end_;]
[:zh_CN] 等价于：[`return end_;]
[end:description]

[%@library operator==[!take_view::sentinel]]
[codeblock:declaration]
friend constexpr bool operator==(const CI& y, const sentinel& x);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`return y.count() == 0 || y.base() == x.end_;]
[:zh_CN] 等价于：[`return y.count() == 0 || y.base() == x.end_;]
[end:description]
