[section#range.prim.size
    [`ranges::size]
]

[para]
[:en] The name [`size] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`size] 代表一个定制化点（[#customization.point.object]）。

[:en] The expression [`ranges::size(E)] for some subexpression [`E] with type
[`T] is expression-equivalent to:
[:zh_CN] 对于 [`T] 类型的某个子表达式 [`E]，表达式 [`ranges::begin(E)] 按表达式
等价于：

[list]
[item]
[:en] [`[*decay-copy](extent_v<T>)] if [`T] is an array type ([#basic.compound]).
[:zh_CN] 若 [`T] 为数组类型（[#basic.compound]），则为
[`[*decay-copy](extent_v<T>)]。

[item]
[:en] Otherwise, if [`disable_sized_range<remove_cv_t<T>>] ([#range.sized]) is
[`false]:
[:zh_CN] 否则，若 [`disable_sized_range<remove_cv_t<T>>]（[#range.sized]）为
[`false]：

[list]
[item]
[:en] [`[*decay-copy](E.size())] if it is a valid expression and its type [`I]
models [`Integral].
[:zh_CN] 若 [`[*decay-copy](E.size())] 为有效表达式且其类型 [`I] 构成
[`Integral]，则为该表达式。

[item]
[:en] Otherwise, [`[*decay-copy](size(E))] if it is a valid expression and its
type [`I] models [`Integral] with overload resolution performed in a context
that includes the declaration:
[:zh_CN] 否则，当 [`[*decay-copy](size(E))] 为有效表达式且其类型 [`I] 构成
[`Iterator] 时，在包含下列声明式：
[codeblock:notation]
template<class T> void size(T&&) = delete;
[codeblock:end]
[:en@~] and does not include a declaration of [`ranges::size].
[:zh_CN@~] 但不包含 [`ranges::size] 的声明式的语境中实施重载决议，则为该表达式。
[list:end]

[item]
[:en] Otherwise, [`(ranges::end(E) - ranges::begin(E))] if it is a valid
expression and the types [`I] and [`S] of [`ranges::begin(E)] and
[`ranges::end(E)] model [`SizedSentinel<S, I>]
([#iterator.concept.sizedsentinel]) and [`ForwardIterator<I>].
[:zh_CN] 否则，当 [`(ranges::end(E) - ranges::begin(E))] 为有效表达式，且
[`ranges::begin(E)] 和 [`ranges::end(E)] 的类型 [`I] 和 [`S] 构成
[`SizedSentinel<S, I>]（[#iterator.concept.sizedsentinel]）和
[`ForwardIterator<I>]，则为该表达式。

[:en] However, [`E] is evaluated only once.
[:zh_CN] 不过，[`E] 仅被求值一次。

[item]
[:en] Otherwise, [`ranges::size(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::size(E)] 非良构。

[enter:note]
[:en] This case can result in substitution failure when [`ranges::size(E)]
appears in the immediate context of a template instantiation.
[:zh_CN] 这种情况下，当 [`ranges::size(E)] 出现在某个模板实例化的直接语境中时
会导致替换失败。
[exit:note]
[list:end]

[para]
[enter:note]
[:en] Whenever [`ranges::size(E)] is a valid expression, its type models
[`Integral].
[:zh_CN] 只要 [`ranges::size(E)] 是有效表达式，则其类型就构成 [`Integral]。
[exit:note]
