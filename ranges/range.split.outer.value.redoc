[section#range.split.outer.value
    [:en] Class [`split_view::outer_iterator::value_type]
    [:zh_CN] 类 [`split_view::outer_iterator::value_type]
]

[%@lib split_view::outer_iterator::value_type]
[codeblock:synopsis]
namespace std::ranges {
  template<class V, class Pattern>
  template<bool Const>
  struct split_view<V, Pattern>::outer_iterator<Const>::value_type
    : view_interface<value_type> {
  private:
    outer_iterator i_ = outer_iterator();               // [=expos]
  public:
    value_type() = default;
    constexpr explicit value_type(outer_iterator i);

    constexpr inner_iterator<Const> begin() const requires copyable<outer_iterator>;
    constexpr inner_iterator<Const> begin() requires (!copyable<outer_iterator>);
    constexpr default_sentinel_t end() const;
  };
}
[codeblock:end]

[%@lib@ctor split_view::outer_iterator::value_type]
[codeblock:declaration]
constexpr explicit value_type(outer_iterator i);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [`i_] with [`std::move(i)].
[:zh_CN] 以 [`std::move(i)] 初始化 [`i_]。
[div:end]

[%@lib@member begin[!split_view::outer_iterator::value_type]]
[codeblock:declaration]
constexpr inner_iterator<Const> begin() const requires copyable<outer_iterator>;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return inner_iterator<Const>{i_};]
[:zh_CN] 等价于：[`return inner_iterator<Const>{i_};]
[div:end]

[%@lib@member begin[!split_view::outer_iterator::value_type]]
[codeblock:declaration]
constexpr inner_iterator<Const> begin() requires (!copyable<outer_iterator>);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return inner_iterator<Const>{std::move(i_)};]
[:zh_CN] 等价于：[`return inner_iterator<Const>{std::move(i_)};]
[div:end]

[%@lib@member end[!split_view::outer_iterator::value_type]]
[codeblock:declaration]
constexpr default_sentinel_t end() const;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return default_sentinel;]
[:zh_CN] 等价于：[`return default_sentinel;]
[div:end]
