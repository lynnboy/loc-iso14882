[section#range.chunk.by.overview
    [:en] Overview
    [:zh_CN] 概述
]

[para]
[:en] [`chunk_by_view] takes a [`:c view] and a predict, and splits the
[`:c view] into [`subrange]s between each pair of adjacent elements for which
the predicate returns [`false].
[:zh_CN] [`chunk_by_view] 接受一个 [`:c view] 和一个谓词，将该 [`:c view] 按照
其中每对使得谓词返回 [`false] 的相邻元素之间的位置切分为 [`subrange]。

[%@lib@member chunk_by[!views]]
[para]
[:en] The name [`views::chunk_by] denotes a range adaptor object
([#range.adaptor.object]).
[:zh_CN] 名字 [`views::chunk_by] 代表一个范围适配器对象（[#range.adaptor.object]）。

[:en] Given subexpressions [`E] and [`F], the expression [`views::chunk_by(E, F)]
is expression-equivalent to [`chunk_by_view(E, F)].
[:zh_CN] 给定子表达式 [`E] 和 [`F]，表达式 [`views::chunk_by(E, F)] 按表达式等价于
[`chunk_by_view(E, F)]。

[para@~]
[begin:example]
[codeblock]
vector v = {1, 2, 2, 3, 0, 4, 5, 2};

for (auto r : v | views::chunk_by(ranges::less_equal{})) {
  cout << '[';
  auto sep = "";
  for(auto i : r) {
    cout << sep << i;
    sep = ", ";
  }
  cout << "] ";
}
[codeblock:end]
[end:example]

[:en] The above prints: [``[1, 2, 2, 3`] `[0, 4, 5`] `[2`]]
[:zh_CN] 以上代码打印：[``[1, 2, 2, 3`] `[0, 4, 5`] `[2`]]
