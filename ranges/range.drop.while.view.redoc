[section#range.drop.while.view
    [:en] Class template [`drop_while_view]
    [:zh_CN] 类模板 [`drop_while_view]
]

[%@lib drop_while_view]
[codeblock:synopsis]
namespace std::ranges {
  template<view R, class Pred>
  requires input_range<R> && is_object_v<Pred> &&
    indirect_unary_predicate<const Pred, iterator_t<R>>
  class drop_while_view : public view_interface<drop_while_view<R, Pred>> {
  public:
    drop_while_view() = default;
    constexpr drop_while_view(R base, Pred pred);

    constexpr R base() const;
    constexpr const Pred& pred() const;

    constexpr auto begin();

    constexpr auto end()
    { return ranges::end(base_); }

  private:
    R base_;                                            // [=expos]
    [[redoc("^>")]]semiregular-box<Pred> pred_;                        // [=expos]
  };

  template<class R, class Pred>
    drop_while_view(R&&, Pred) -> drop_while_view<all_view<R>, Pred>;
}
[codeblock:end]

[%@lib@ctor drop_while_view]
[codeblock:declaration]
constexpr drop_while_view(R base, Pred pred);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [`base_] with [`std::move(base)] and [`pred_] with
[`std::move(pred)].
[:zh_CN] 以 [`std::move(base)] 初始化 [`base_] 并以 [`std::move(pred)] 初始化
[`pred_]。
[div:end]

[%@lib@member base[!drop_while_view]]
[codeblock:declaration]
constexpr R base() const;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return base_;]
[:zh_CN] 等价于：[`return base_;]
[div:end]

[%@lib@member pred[!drop_while_view]]
[codeblock:declaration]
constexpr const Pred& pred() const;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return *pred_;]
[:zh_CN] 等价于：[`return *pred_;]
[div:end]

[%@lib@member begin[!drop_while_view]]
[codeblock:declaration]
constexpr auto begin();
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ranges::find_if_not(base_, cref(*pred_))].
[:zh_CN] [`ranges::find_if_not(base_, cref(*pred_))]。

[para:remarks]
[:en] In order to provide the amortized constant-time complexity required by the
[`range] concept, the first call caches the result within the [`drop_while_view]
for use on subsequent calls.
[:zh_CN] 为了提供由 [`range] 概念所要求的均摊常量时间复杂度，第一个重载在
[`drop_while_view] 中将其结果进行缓存以在后续的调用中使用。

[begin:note]
[:en] Without this, applying a [`reverse_view] over a [`drop_while_view] would
have quadratic iteration complexity.
[:zh_CN] 不这样的话，在 [`drop_while_view] 上运用 [`reverse_view] 将具有平方级的
循环复杂度。
[end:note]
[div:end]
