[section#range.adaptor.object
    [:en] Range adaptor objects
    [:zh_CN] 范围适配器对象
]

[para]
[:en] A [+:% range adaptor closure object] is a unary function object that
accepts a [`:c viewable_range] argument and returns a [`:c view].
[:zh_CN] [+:% 范围适配器闭包对象]，是接受一个 [`:c viewable_range] 实参并返回
一个 [`:c view] 的一元函数对象。

[:en] For a range adaptor closure object [`C] and an expression [`R] such that
[`decltype((R))] models [`:c viewable_range], the following expressions are
equivalent and yield a [`:c view]:
[:zh_CN] 对于范围适配器闭包对象 [`C] 以及一个使得 [`decltype((R))] 构成
[`:c viewable_range] 的表达式 [`R]，以下各表达式都等价且产生一个 [`:c view]：

[codeblock]
C(R)
R | C
[codeblock:end]

[:en] Given an additional range adaptor closure object [`D], the expression
[`C | D] produces another range adaptor closure object [`E].
[:zh_CN] 给定一个额外的范围适配器闭包对象 [`D]，表达式 [`C | D] 产生另一个范围
适配器闭包对象 [`E]。

[:en] [`E] is a perfect forwarding call wrapper ([#func.require]) with the
following properties:
[:zh_CN] [`E] 为具有以下性质的完美转发调用包装器（[#func.require]）：

[list]
[item]
[:en] Its target object is an object [`d] of type [`decay_t<decltype((D))>]
direct-non-list-initialized with [`D].
[:zh_CN] 其目标对象为 [`decay_t<decltype((D))>] 类型的对象 [`d] 并以 [`D] 直接
非列表初始化。
[item]
[:en] It has one bound argument entity, an object [`c] of type
[`decay_t<decltype((C))>] direct-non-list-initialized with [`C].
[:zh_CN] 它具有一个绑定的实参实体，[`decay_t<decltype((C))>] 类型的对象 [`c]，
并以 [`C] 直接非列表初始化。
[item]
[:en] Its call pattern is [`d(c(arg))], where [`arg] is the argument used in
a function call expression of [`E].
[:zh_CN] 其调用模式为 [`d(c(arg))]，其中 [`arg] 为 [`E] 的函数调用表达式中所用的
实参。
[list:end]

[:en] The expression [`C | D] is well-formed if and only if the initializations
of the state entities of [`E] are all well-formed.
[:zh_CN] 当且仅当 [`E] 的各状态实体的初始化良构时，表达式 [`C | D] 良构。

[para]
[:en] A [+:% range adaptor object] is a customization point object
([#customization.point.object]) that accepts a [`:c viewable_range] as its first
argument and returns a [`:c view].
[:zh_CN] [+:% 范围适配器对象]是一个定制化点对象（[#customization.point.object]），
接受一个 [`:c viewable_range] 作为其第一个实参并返回一个 [`:c view]。

[para]
[:en] If a range adaptor object accepts only one argument, then it is a range
adaptor closure object.
[:zh_CN] 如果一个范围适配器对象仅接受一个实参，则它是个范围适配器闭包对象。

[para]
[:en] If a range adaptor object [`adaptor] accepts more than one argument, then
let [`range] be an expression such that [`decltype((range))] models
[`:c viewable_range], let [`args...] be arguments such that
[`adaptor(range, args...)] is a well-formed expression as specified in the rest
of subclause [#range.adaptors], and let [`BoundArgs] be a pack that denotes
[`decay_t<decltype((args))>...].
[:zh_CN] 如果一个范围适配器对象 [`adaptor] 接受多于一个实参，则令 [`range] 为
使得 [`decltype((range))] 构成 [`:c viewable_range] 的表达式，令 [`args...] 为
使得 [`adaptor(range, args...)] 根据子条款 [#range.adaptors] 的余下部分所指定为
良构表达式的实参，并令 [`BoundArgs] 为代表 [`decay_t<decltype((args))>...] 的
包组。

[list]
[item]
[:en] Its target object is a copy of [`adaptor].
[:zh_CN] 其目标对象为 [`adaptor] 的副本。
[item]
[:en] Its bound argument entities [`bound_args] consist of objects of types
[`BoundArgs...] direct-non-list-initialized with
[`std::forward<decltype((args))>(args)...], respectively.
[:zh_CN] 其绑定实参实体 [`bound_args] 由类型为 [`BoundArgs...] 的对象组成，并
分别以 [`std::forward<decltype((args))>(args)...] 直接非列表初始化。
[item]
[:en] Its call pattern is [`adaptor(r, bound_args...)], where [`r] is the
argument used in a function call expression of [`f].
[:zh_CN] 其调用模式为 [`adaptor(r, bound_args...)]，其中 [`r] 为在 [`f] 的函数
调用表达式中所用的实参。
[list:end]

[:en] The expression [`adaptor(args...)] is well-formed if and only if the
initializations of the bound argument entities of the result, as specified above,
are all well-formed.
[:zh_CN] 当且仅当如上所述的各绑定实参实体的初始化良构时，表达式
[`adaptor(args...)] 良构。
