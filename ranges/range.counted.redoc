[section#range.counted
    [:en] Counted view
    [:zh_CN] 计数视图
]

[para]
[:en] The name [`view::counted] denotes a range adaptor object
([#range.adaptor.object]).
[:zh_CN] 名字 [`view::counted] 代表一个范围适配器对象（[#range.adaptor.object]）。

[:en] Let [`E] and [`F] be expressions, and let [`T] be
[`decay_t<decltype((E))>].
[:zh_CN] 令 [`E] 和 [`F] 为表达式，并令 [`T] 为 [`decay_t<decltype((E))>]。

[:en] Then the expression [`view::counted(E, F)] is expression-equivalent to:
[:zh_CN] 则表达式 [`view::counted(E, F)] 按表达式等价于：

[list]
[item]
[:en] If [`T] models [`Iterator] and [`decltype((F))] models
[`ConvertibleTo<iter_difference_t<T>>],
[:zh_CN] 若 [`T] 构成 [`Iterator] 且 [`decltype((F))] 构成
[`ConvertibleTo<iter_difference_t<T>>]，则

[list]
[item]
[:en] [`subrange{E, E + static_cast<iter_difference_t<T>>(F)}] if [`T] models
[`RandomAccessIterator].
[:zh_CN] 若 [`T] 构成 [`RandomAccessIterator]，则为
[`subrange{E, E + static_cast<iter_difference_t<T>>(F)}]。
[item]
[:en] Otherwise, [`subrange{counted_iterator{E, F}, default_sentinel}].
[:zh_CN] 否则，为 [`subrange{counted_iterator{E, F}, default_sentinel}]。
[list:end]

[item]
[:en] Otherwise, [`view::counted(E, F)] is ill-formed.
[:zh_CN] 否则，[`view::counted(E, F)] 非良构。

[enter:note]
[:en] This case can result in substitution failure when [`view::counted(E, F)]
appears in the immediate context of a template instantiation.
[:zh_CN] 这种情况下在当 [`view::counted(E, F)] 出现于模板实例化的直接语境中时将
造成替换失败。
[exit:note]
[list:end]
