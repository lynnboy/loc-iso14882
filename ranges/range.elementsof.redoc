[section#range.elementsof
    [:en] Class template [`elements_of]
    [:zh_CN] 类模板 [`elements_of]
]

[para]
[:en] Specializations of [`elements_of] encapsulate a range and act as a tag in
overload sets to disambiguate when a range should be treated as a sequence
rather than a single value.
[:zh_CN] [`elements_of] 的特例封装一个范围，在重载集合中起到标签的作用，用以区分
范围应当被当做序列而不是单个值的情况。

[begin:example]
[codeblock]
template<bool YieldElements>
generator<any> f(ranges::[[redoc("`:c>")]]input_range auto&& r) {
  if constexpr (YieldElements)
    co_yield ranges::elements_of(r);        // [:en] yield each element of [`r] \
                                            [:zh_CN] 产生 [`r] 的每个元素
  else
    co_yield r;                             // [:en] yield [`r] as a single value \
                                            [:zh_CN] 作为单个值产生 [`r]
}
[codeblock:end]
[end:example]

[codeblock]
namespace std::ranges {
  template<[[redoc("`:c>")]]range R, class Allocator = allocator<byte>>
  struct elements_of {
    [[no_unique_address]] R range;
    [[no_unique_address]] Allocator allocator = Allocator();
  };

  template<class R, class Allocator = allocator<byte>>
    elements_of(R&&, Allocator = Allocator()) -> elements_of<R&&, Allocator>;
}
[codeblock:end]
