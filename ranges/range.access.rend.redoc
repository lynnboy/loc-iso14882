[section#range.access.rend
    [`ranges::rend]
]

[%@lib rend]

[para]
[:en] The name [`ranges::rend] denotes a customization point object
([#customization.point.object]).
[:zh_CN] 名字 [`ranges::rend] 代表一个定制化点（[#customization.point.object]）。

[para]
[:en] Given a subexpression [`E] with type [`T], let [`t] be an lvalue that
denotes the reified object for [`E].
[:zh_CN] 给定一个类型为 [`T] 的子表达式 [`E]，令 [`t] 为一个代表 [`E] 的具象化
对象的左值。

[:en] Then:
[:zh_CN] 则有：

[list]
[item]
[:en] If [`E] is an rvalue and [`enable_borrowed_range<remove_cv_t<T>>] is
[`false], [`ranges::rend(E)] is ill-formed.
[:zh_CN] 若 [`E] 为右值且 [`enable_borrowed_range<remove_cv_t<T>>] 为 [`false]，
则 [`ranges::rend(E)] 非良构。

[item]
[:en] Otherwise, if [`T] is an array type ([#term.array.type]) and
[`remove_all_extents_t<T>] is an incomplete type, [`ranges::rend(E)] is
ill-formed with no diagnostic required.
[:zh_CN] 否则，若 [`T] 为数组类型（[#term.array.type]）且
[`remove_all_extents_t<T>] 为不完整类型，则 [`ranges::rend(E)] 非良构且无须诊断。

[item]
[:en] Otherwise, if [`auto(t.rend())] is a valid expression whose type models
[`[`:c sentinel_for]<decltype(ranges::rbegin(E))>] then [`ranges::rend(E)]
is expression-equivalent to [`auto(t.rend())].
[:zh_CN] 否则，若 [`auto(t.rend())] 为其类型构成
[`[`:c sentinel_for]<decltype(ranges::rbegin(E))>] 的有效表达式，则
[`ranges::rend(E)] 按表达式等价于 [`auto(t.rend())]。

[item]
[:en] Otherwise, if [`T] is a class or enumeration type and [`auto(rend(t))] is
a valid expression whose type models [`[`:c sentinel_for]<iterator_t<T>>] where
the meaning of [`rend] is established as-if by performing argument-dependent
lookup only ([#basic.lookup.argdep]), then [`ranges::rend(E)] is
expression-equivalent to that expression.
[:zh_CN] 否则，若 [`T] 为类或枚举类型，且 [`auto(rend(t))] 为有效表达式且其
类型构成 [`[`:c sentinel_for]<iterator_t<T>>]，其中 [`rend] 的含义是如同通过仅
实施依赖于实参的查找（[#basic.lookup.argdep]）而建立的，则 [`ranges::rend(E)]
按表达式等价于该表达式。

[item]
[:en] Otherwise, if both [`ranges::begin(t)] and [`ranges::end(t)] are valid
expressions of the same type which models [`:c bidirectional_iterator]
([#iterator.concept.bidir]), then [`ranges::rend(E)] is expression-equivalent to
[`make_reverse_iterator(ranges::begin(t))].
[:zh_CN] 否则，若 [`ranges::begin(t)] 和 [`ranges::end(t)] 均为相同的构成
[`:c bidirectional_iterator]（[#iterator.concept.bidir]）的类型，则
[`ranges::rend(E)] 按表达式等价于 [`make_reverse_iterator(ranges::begin(t))]。

[item]
[:en] Otherwise, [`ranges::rend(E)] is ill-formed.
[:zh_CN] 否则，[`ranges::rend(E)] 非良构。
[list:end]

[para]
[begin:note]
[:en] Diagnosable ill-formed cases above result in substitution failure when
[`ranges::rend(E)] appears in the immediate context of a template instantiation.
[:zh_CN] 以上各种可诊断的非良构情况，当 [`ranges::rend(E)] 出现在某个模板实例化
的直接语境中时会导致代换失败。
[end:note]

[para]
[begin:note]
[:en] Whenever [`ranges::rend(E)] is a valid expression, the types [`S] and [`I]
of the expressions [`ranges::rend(E)] and [`ranges::rbegin(E)] model
[`[`:c sentinel_for]<S, I>].
[:zh_CN] 只要 [`ranges::rend(E)] 是有效表达式，则表达式 [`ranges::rend(E)] 和
[`ranges::rbegin(E)] 的类型 [`S] 和 [`I] 就构成 [`[`:c sentinel_for]<S, I>]。
[end:note]
