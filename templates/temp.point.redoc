[section#temp.point
    [:en] Point of instantiation
    [:zh_CN] 实例化点
]

[para]
[:en]
[%instantiation[!point of]]
For a function template specialization, a member function template
specialization, or a specialization for a member function or static data member
of a class template, if the specialization is implicitly instantiated because it
is referenced from within another template specialization and the context from
which it is referenced depends on a template parameter, the point of
instantiation of the specialization is the point of instantiation of the
enclosing specialization.
[:zh_CN]
[%实例化[!～点]]
对于函数模板特例，成员函数模板特例，或者类模板的成员函数或静态数据成员的特例，若
该特例因其从其它模板特化式中被涉指而实例化，且涉指它的语境依存于某个模板形参，则
该特例的实例化点是其外围特化式的实例化点。

[:en]
Otherwise, the point of instantiation for such a specialization immediately
follows the namespace scope declaration or definition that refers to the
specialization.
[:zh_CN]
否则，该特例的实例化点紧跟在对该特例进行涉指的命名空间作用域的声明式或定义式之后。

[para]
[:en]
If a function template or member function of a class template is called in a way
which uses the definition of a default argument of that function template or
member function, the point of instantiation of the default argument is the point
of instantiation of the function template or member function specialization.
[:zh_CN]
若某函数模板或类模板的成员函数的调用方式中使用了这个函数模板或成员函数的某个默认
实参，则该默认实参的实例化点是这个函数模板或成员函数的特例的实例化点。

[para]
[:en]
For an [~noexcept-specifier] of a function template specialization or
specialization of a member function of a class template, if the
[~noexcept-specifier] is implicitly instantiated because it is needed by another
template specialization and the context that requires it depends on a template
parameter, the point of instantiation of the [~noexcept-specifier] is the point
of instantiation of the specialization that requires it.
[:zh_CN]
对于函数模板特例或类模板的成员函数特例的 [~noexcept-说明符]，若该
[~noexcept-说明符]因其被其他模板特例所需要而实例化，且需要它的语境依存于某个模板
形参，则该 [~noexcept-说明符]的实例化点是需要它的特例的实例化点。

[:en]
Otherwise, the point of instantiation for such a [~noexcept-specifier]
immediately follows the namespace scope declaration or definition that requires
the [~noexcept-specifier].
[:zh_CN]
否则，该[~noexcept-说明符]的实例化点紧跟在需要该[~noexcept-说明符]的命名空间
作用域的声明式或定义式之后。

[para]
[:en]
For a class template specialization, a class member template specialization, or
a specialization for a class member of a class template, if the specialization
is implicitly instantiated because it is referenced from within another template
specialization, if the context from which the specialization is referenced
depends on a template parameter, and if the specialization is not instantiated
previous to the instantiation of the enclosing template, the point of
instantiation is immediately before the point of instantiation of the enclosing
template.
[:zh_CN]
对于类模板特例，类成员模板特例，或者类模板的类成员的特例，若该特例因其从其它模板
特化式中被涉指而实例化，若涉指它的语境依存于某个模板形参，且若该特例在其外围模板
的实例化之前未被实例化，则其实例化点紧跟在其外围模板的实例化点之前。

[:en]
Otherwise, the point of instantiation for such a specialization immediately
precedes the namespace scope declaration or definition that refers to the
specialization.
[:zh_CN]
否则，此特例的实例化点紧接对该特例进行涉指的命名空间作用域的声明式或定义式之前。

[para]
[:en]
If a virtual function is implicitly instantiated, its point of instantiation is
immediately following the point of instantiation of its enclosing class template
specialization.
[:zh_CN]
若虚函数被隐式实例化，则其实例化点紧跟其外围类模板特例的实例化点之后。

[para]
[:en]
An explicit instantiation definition is an instantiation point for the
specialization or specializations specified by the explicit instantiation.
[:zh_CN]
显式实例化定义式，是被该显式实例化式所指定的一个或多个特例的实例化点。

[para]
[:en]
A specialization for a function template, a member function template, or of a
member function or static data member of a class template may have multiple
points of instantiations within a translation unit, and in addition to the
points of instantiation described above,
[:zh_CN]
函数模板，成员函数模板，或者类模板的成员函数或静态数据成员的特例，可以在一个翻译
单元中有多个实例化点，而且，除了上述实例化点之外，

[list]
[item]
[:en]
for any such specialization that has a point of instantiation within the
[~declaration-seq] of the [~translation-unit], prior to the
[~private-module-fragment] (if any), the point after the [~declaration-seq] of
the [~translation-unit] is also considered a point of instantiation, and
[:zh_CN]
对于任何在[~翻译单元]的[~声明式序列]中，在[~私有模块分段]之前（如果有），存在
实例化点的这种特例，该[~翻译单元]的[~声明式序列]之后的位置也被当作是一个实例化点。

[item]
[:en]
for any such specialization that has a point of instantiation within the
[~private-module-fragment], the end of the translation unit is also considered
a point of instantiation.
[:zh_CN]
对于任何在[~私有模块分段]之中存在实例化点的这种特例，该翻译单元的末尾也被当作是
一个实例化点。
[list:end]

[:en]
A specialization for a class template has at most one point of instantiation
within a translation unit.
[:zh_CN]
类模板的一个特例在一个翻译单元中只能有最多一个实例化点。

[:en]
A specialization for any template may have points of instantiation in multiple
translation units.
[:zh_CN]
任意模板的特例可以在多个翻译单元中均有实例化点。

[:en]
If two different points of instantiation give a template specialization
different meanings according to the one definition rule ([#basic.def.odr]), the
program is ill-formed, no diagnostic required.
[:zh_CN]
若两个不同的实例化点根据唯一定义原则（[#basic.def.odr]）为模板特例给出了不同的
含义，则程序是非良构的，无须诊断。
