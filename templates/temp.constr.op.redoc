[section#temp.constr.op
    [:en] Logical operations
    [:zh_CN] 逻辑运算
]

[para]
[:en]
There are two binary logical operations on constraints: conjunction and
disjunction.
[:zh_CN]
约束有两种二元逻辑运算：合取和析取。

[begin:note]
[:en]
These logical operations have no corresponding [=Cpp] syntax.
[:zh_CN]
这些逻辑运算并没有相应的 [=Cpp] 语法。

[:en]
For the purpose of exposition, conjunction is spelled using the symbol [$\land]
and disjunction is spelled using the symbol [$\lor].
[:zh_CN]
为阐释目的，以符号 [$\land] 来拼写合取，并以符号 [$\lor] 来拼写析取。

[:en]
The operands of these operations are called the left and right operands.
[:zh_CN]
这些运算的操作数被称为其左和右操作数。

[:en]
In the constraint [$A \land B], [$A] is the left operand, and [$B] is the right
operand.
[:zh_CN]
在约束 [$A \land B] 中，[$A] 为左操作数，[$B] 为右操作数。
[end:note]

[para]
[:en]
A [+conjunction] is a constraint taking two operands.
[:zh_CN]
[+合取]是接受两个操作数的约束。

[:en]
To determine if a conjunction is [+satisfied[%constraint[!satisfaction
[!conjunction]]]], the satisfaction of the first operand is checked.
[:zh_CN]
为确定一个合取是否[+满足[%约束[!满足[!合取]]]]，检查其第一个操作数的满足情况。

[:en]
If that is not satisfied, the conjunction is not satisfied.
[:zh_CN]
若它未能满足，则合取不满足。

[:en]
Otherwise, the conjunction is satisfied if and only if the second operand is
satisfied.
[:zh_CN]
否则，当且仅当第二个操作数被满足时该合取得以满足。

[para]
[:en]
A [+disjunction] is a constraint taking two operands.
[:zh_CN]
[+析取]是接受两个操作数的约束。

[:en]
To determine if a disjunction is [+satisfied[%constraint[!satisfaction
[!disjunction]]]], the satisfaction of the first operand is checked.
[:zh_CN]
为确定一个析取是否[+满足[%约束[!满足[!析取]]]]，检查其第一个操作数的满足情况。

[:en]
If that is satisfied, the disjunction is satisfied.
[:zh_CN]
若它得以满足，则析取得以满足。

[:en]
Otherwise, the disjunction is satisfied if and only if the second operand is
satisfied.
[:zh_CN]
否则，当且仅当第二个操作数被满足时该析取得以满足。

[para]
[begin:example]
[codeblock]
template<typename T>
  constexpr bool get_value() { return T::value; }

template<typename T>
  requires (sizeof(T) > 1) && get_value<T>()
    void f(T);      // [:en] has associated constraint [`sizeof(T) > 1 [$\land] get_value<T>()] \
                       [:zh_CN] 具有关联约束 [`sizeof(T) > 1 [$\land] get_value<T>()]

void f(int);

f('a'); // [:en] OK: calls [`f(int)] \
           [:zh_CN] OK：调用 [`f(int)]
[codeblock:end]

[:en]
In the satisfaction of the associated constraints ([#temp.constr.decl]) of [`f],
the constraint [`sizeof(char) > 1] is not satisfied; the second operand is not
checked for satisfaction.
[:zh_CN]
在检查 [`f] 的关联约束（[#temp.constr.decl]）的满足情况时，约束
[`sizeof(char) > 1] 未能满足；未检查第二个操作数的满足情况。
[end:example]
