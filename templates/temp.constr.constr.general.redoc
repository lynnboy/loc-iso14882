[section#temp.constr.constr.general
    [:en] General
    [:zh_CN] 概述
]

[:en]
[%satisfy[%constraint[!satisfaction]]]
[:zh_CN]
[%符合[%约束[!符合]]]

[para]
[:en] A [+constraint] is a sequence of logical operations and operands that
specifies requirements on template arguments.
[:zh_CN] [+约束]是对模板实参提出要求的一系列逻辑运算及其操作数。

[:en] The operands of a logical operation are constraints.
[:zh_CN] 逻辑运算的操作数都是约束。

[:en] There are four different kinds of constraints:
[:zh_CN] 有四种不同的约束：

[list]
[item]
[:en@~] conjunctions ([#temp.constr.op]),
[:zh_CN@~] 合取（[#temp.constr.op]），
[item]
[:en@~] disjunctions ([#temp.constr.op]),
[:zh_CN@~] 析取（[#temp.constr.op]），
[item]
[:en@~] atomic constraints ([#temp.constr.atomic]), and
[:zh_CN@~] 原子约束（[#temp.constr.atomic]），以及
[item]
[:en@~] fold expanded constraints ([#temp.constr.fold]).
[:zh_CN@~] 折叠已展开的约束（[#temp.constr.fold]）。
[list:end]

[para]
[:en]
In order for a constrained template to be instantiated ([#temp.spec]),
its associated constraints ([#temp.constr.decl]) shall be satisfied as
described in the following subclauses.
[:zh_CN]
为了实例化受约束模板（[#temp.spec]），应当按以下各子条款所述满足其关联约束
（[#temp.constr.decl]）。

[begin:note]
[:en]
Forming the name of a specialization of a class template, a variable template,
or an alias template ([#temp.names]) requires the satisfaction of its
constraints.
[:zh_CN]
构成类模板、变量模板或别名模板的特例的名字（[#temp.names]）时，要求其约束得以
满足。

[:en]
Overload resolution ([#over.match.viable]) requires the satisfaction of
constraints on functions and function templates.
[:zh_CN]
重载决议（[#over.match.viable]）要求函数和函数模板的约束得以满足。
[end:note]
