[section#string.view.comparison
    [:en] Non-member comparison functions
    [:zh_CN] 非成员比较函数
]

[%@lib@member operator==[!basic_string_view]]
[codeblock:declaration]
template<class charT, class traits>
  constexpr bool operator==(basic_string_view<charT, traits> lhs,
                            type_identity_t<basic_string_view<charT, traits>> rhs) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`lhs.compare(rhs) == 0].
[:zh_CN] [`lhs.compare(rhs) == 0]。
[div:end]

[%@lib@member operator<=>[!basic_string_view]]
[codeblock:declaration]
template<class charT, class traits>
  constexpr [[redoc("[=seebelow]")]] operator<=>(basic_string_view<charT, traits> lhs,
                                  type_identity_t<basic_string_view<charT, traits>> rhs) noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [`R] denote the type [`traits::comparison_category] if that
[~qualified-id] is valid and denotes a type ([#temp.deduct]), otherwise [`R] is
[`weak_ordering].
[:zh_CN] 令 [`R] 当[~限定标识] [`traits::comparison_category] 有效且代表类型
（[#temp.deduct]）时代表该类型，否则 [`R] 代表 [`weak_ordering]。

[para:mandates]
[:en] [`R] demotes a comparison category type ([#cmp.categories]).
[:zh_CN] [`R] 代表某个比较类别类型（[#cmp.categories]）。

[para:returns]
[:en] [`static_cast<R>(lhs.compare(rhs) <=> 0)].
[:zh_CN] [`static_cast<R>(lhs.compare(rhs) <=> 0)]。

[para]
[begin:note]
[:en] The usage of [`type_identity_t] as parameter ensures that an object of
type [`basic_string_view<charT, traits>] can always be compared with an object
of a type [`T] with an implicit conversion to [`basic_string_view<charT, traits>],
and vice versa, as per [#over.match.oper].
[:zh_CN] 根据 [#over.match.oper]，将 [`type_identity_t] 用作形参的做法，确保
[`basic_string_view<charT, traits>] 类型的对象总可以和带有向
[`basic_string_view<charT, traits>] 的隐式转换的 [`T] 类型的对象进行比较，反之亦然。
[end:note]
[div:end]
