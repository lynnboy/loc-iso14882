[section#basic.string.hash
    [:en] Hash support
    [:zh_CN] 散列支持
]

[%@lib@member hash[!basic_string]]
[codeblock:declaration]
template<class A> struct hash<basic_string<char, char_traits<char>, A>>;
template<class A> struct hash<basic_string<char8_t, char_traits<char8_t>, A>>;
template<class A> struct hash<basic_string<char16_t, char_traits<char16_t>, A>>;
template<class A> struct hash<basic_string<char32_t, char_traits<char32_t>, A>>;
template<class A> struct hash<basic_string<wchar_t, char_traits<wchar_t>, A>>;
[codeblock:end]

[div:description]
[para]
[:en] If [`S] is one of these string types, [`SV] is the corresponding string
view type, and [`s] is an object of type [`S], then
[`hash<S>()(s) == hash<SV>()(SV(s))].
[:zh_CN] 设 [`S] 为这些字符串类型之一，[`SV] 为其对应的字符串视图类型，并设 [`s]
为 [`S] 类型的对象，则有 [`hash<S>()(s) == hash<SV>()(SV(s))]。
[div:end]
