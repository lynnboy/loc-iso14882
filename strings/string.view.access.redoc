[section#string.view.access
    [:en] Element access
    [:zh_CN] 元素访问
]

[%@library operator`[`][!basic_string_view]]
[%@library basic_string_view[!operator`[`]]]
[codeblock:declaration]
constexpr const_reference operator[](size_type pos) const;
[codeblock:end]

[enter:description]
[para:expects]
[:en] [`pos < size()].
[:zh_CN] [`pos < size()]。

[para:returns]
[:en] [`data_`[pos`]].
[:zh_CN] [`data_`[pos`]]。

[para:throws]
[:en] Nothing.
[:zh_CN] 无。

[para]
[enter:note]
[:en] Unlike [`basic_string::operator`[`]],
[`basic_string_view::operator`[`](size())] has undefined behavior instead of
returning [`charT()].
[:zh_CN] 与 [`basic_string::operator`[`]] 不同，
[`basic_string_view::operator`[`](size())] 将造成未定义的行为而不是返回
[`charT()]。
[exit:note]
[exit:description]

[%@library at[!basic_string_view]]
[%@library basic_string_view[!at]]
[codeblock:declaration]
constexpr const_reference at(size_type pos) const;
[codeblock:end]

[enter:description]
[para:throws]
[:en] [`out_of_range] if [`pos >= size()].
[:zh_CN] 当 [`pos >= size()] 时抛出 [`out_of_range]。

[para:returns]
[:en] [`data_`[pos`]].
[:zh_CN] [`data_`[pos`]]。
[exit:description]

[%@library front[!basic_string_view]]
[%@library basic_string_view[!front]]
[codeblock:declaration]
constexpr const_reference front() const;
[codeblock:end]

[enter:description]
[para:expects]
[:en] [`!empty()].
[:zh_CN] [`!empty()]。

[para:returns]
[:en] [`data_`[0`]].
[:zh_CN] [`data_`[0`]]。

[para:throws]
[:en] Nothing.
[:zh_CN] 无。
[exit:description]

[%@library back[!basic_string_view]]
[%@library basic_string_view[!back]]
[codeblock:declaration]
constexpr const_reference back() const;
[codeblock:end]

[enter:description]
[para:expects]
[:en] [`!empty()].
[:zh_CN] [`!empty()]。

[para:returns]
[:en] [`data_`[size() - 1`]].
[:zh_CN] [`data_`[size() - 1`]]。

[para:throws]
[:en] Nothing.
[:zh_CN] 无。
[exit:description]

[%@library data[!basic_string_view]]
[%@library basic_string_view[!data]]
[codeblock:declaration]
constexpr const_pointer data() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`data_].
[:zh_CN] [`data_]。

[para]
[enter:note]
[:en] Unlike [`basic_string::data()] and string literals, [`data()] may return a
pointer to a buffer that is not null-terminated.
[:zh_CN] 与 [`basic_string::data()] 和字符串字面量不同，[`data()] 可能会返回一个
指向并非以空终结的缓冲区的指针。

[:en] Therefore it is typically a mistake to pass [`data()] to a function that
takes just a [`const charT*] and expects a null-terminated string.
[:zh_CN] 因此，通常将 [`data()] 传递给某个仅接受一个 [`const charT*] 并期待一个
空终结字符串的函数都是错误的。
[exit:note]
[exit:description]
