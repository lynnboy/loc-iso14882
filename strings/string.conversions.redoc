[section#string.conversions
    [:en] Numeric conversions
    [:zh_CN] 数值转换
]

[%@lib stoi]
[%@lib stol]
[%@lib stoul]
[%@lib stoll]
[%@lib stoull]
[codeblock:declaration]
int stoi(const string& str, size_t* idx = nullptr, int base = 10);
long stol(const string& str, size_t* idx = nullptr, int base = 10);
unsigned long stoul(const string& str, size_t* idx = nullptr, int base = 10);
long long stoll(const string& str, size_t* idx = nullptr, int base = 10);
unsigned long long stoull(const string& str, size_t* idx = nullptr, int base = 10);
[codeblock:end]

[div:description]
[para:effects]
[:en] the first two functions call [`strtol(str.c_str(), ptr, base)], and the
last three functions call [`strtoul(str.c_str(), ptr, base)],
[`strtoll(str.c_str(), ptr, base)], and [`strtoull(str.c_str(), ptr, base)],
respectively.
[:zh_CN] 前两个函数调用 [`strtol(str.c_str(), ptr, base)]，而后三个函数分别调用
[`strtoul(str.c_str(), ptr, base)]，[`strtoll(str.c_str(), ptr, base)]，和
[`strtoull(str.c_str(), ptr, base)]。

[:en] Each function returns the converted result, if any.
[:zh_CN] 各个函数均返回转换后的值（如果有）。

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].
[:zh_CN] 实参 [`ptr] 代表指向函数之内的某个用于确定所要向 [`*idx] 存储的值的对象
的指针。

[:en] If the function does not throw an exception and [`idx != nullptr], the
function stores in [`*idx] the index of the first unconverted element of [`str].
[:zh_CN] 如果函数并未抛出异常并且 [`idx != nullptr]，则该函数向 [`*idx] 中存储
[`str] 中第一个未转换的元素的索引。

[para:returns]
[:en] The converted result.
[:zh_CN] 转换后的值。

[para:throws]
[:en] [`invalid_argument] if [`strtol], [`strtoul], [`strtoll], or [`strtoull]
reports that no conversion could be performed.
[:zh_CN] 如果 [`strtol]、[`strtoul]、[`strtoll] 或 [`strtoull] 报告无法进行任何
转换，则抛出 [`invalid_argument]。

[:en] Throws [`out_of_range] if [`strtol], [`strtoul], [`strtoll] or [`strtoull]
sets [`errno] to [`ERANGE], or if the converted value is outside the range of
representable values for the return type.
[:zh_CN] 如果 [`strtol]、[`strtoul]、[`strtoll] 或 [`strtoull] 将 [`errno] 设置
为 [`ERANGE]，或者转换后的值处于其返回类型能够表示的值的范围之外，则抛出
[`out_of_range]。
[div:end]

[%@lib stof]
[%@lib stod]
[%@lib stold]
[codeblock:declaration]
float stof(const string& str, size_t* idx = nullptr);
double stod(const string& str, size_t* idx = nullptr);
long double stold(const string& str, size_t* idx = nullptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] These functions call [`strtof(str.c_str(), ptr)],
[`strtod(str.c_str(), ptr)], and [`strtold(str.c_str(), ptr)], respectively.
[:zh_CN] 这些函数分别调用 [`strtof(str.c_str(), ptr)]，
[`strtod(str.c_str(), ptr)]，和 [`strtold(str.c_str(), ptr)]。

[:en] Each function returns the converted result, if any.
[:zh_CN] 各个函数均返回转换后的值（如果有）。

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].
[:zh_CN] 实参 [`ptr] 代表指向函数之内的某个用于确定所要向 [`*idx] 存储的值的对象
的指针。

[:en] If the function does not throw an exception and [`idx != nullptr], the
function stores in [`*idx] the index of the first unconverted element of [`str].
[:zh_CN] 如果函数并未抛出异常并且 [`idx != nullptr]，则该函数向 [`*idx] 中存储
[`str] 中第一个未转换的元素的索引。

[para:returns]
[:en] The converted result.
[:zh_CN] 转换后的值。

[para:throws]
[:en] [`invalid_argument] if [`strtof], [`strtod], or [`strtold] reports that no
conversion could be performed.
[:zh_CN] 如果 [`strtof]，[`strtod]，或 [`strtold] 报告无法进行任何转换，则抛出
[`invalid_argument]。

[:en] Throws [`out_of_range] if [`strtof], [`strtod], or [`strtold] sets
[`errno] to [`ERANGE] or if the converted value is outside the range of
representable values for the return type.
[:zh_CN] 如果 [`strtof]，[`strtod]，或 [`strtold] 将 [`errno] 设置为 [`ERANGE]，
或者转换后的值处于其返回类型能够表示的值的范围之外，则抛出 [`out_of_range]。
[div:end]

[%@lib to_string]
[codeblock:declaration]
string to_string(int val);
string to_string(unsigned val);
string to_string(long val);
string to_string(unsigned long val);
string to_string(long long val);
string to_string(unsigned long long val);
string to_string(float val);
string to_string(double val);
string to_string(long double val);
[codeblock:end]

[div:description]
[para:returns]
[:en] Each function returns a [`string] object holding the character
representation of the value of its argument that would be generated by calling
[`sprintf(buf, fmt, val)] with a format specifier of [`"%d"], [`"%u"], [`"%ld"],
[`"%lu"], [`"%lld"], [`"%llu"], [`"%f"], [`"%f"], or [`"%Lf"], respectively,
where [`buf] designates an internal character buffer of sufficient size.
[:zh_CN] 各个函数均返回一个 [`string] 对象，并分别持有当以格式说明符 [`"%d"]、
[`"%u"]、[`"%ld"]、[`"%lu"]、[`"%lld"]、[`"%llu"]、[`"%f"]、[`"%f"] 或 [`"%Lf"]
调用 [`sprintf(buf, fmt, val)] 时所能够产生的，其实参的值的字符表示。
[div:end]

[%@lib stoi]
[%@lib stol]
[%@lib stoul]
[%@lib stoll]
[%@lib stoull]
[codeblock:declaration]
int stoi(const wstring& str, size_t* idx = nullptr, int base = 10);
long stol(const wstring& str, size_t* idx = nullptr, int base = 10);
unsigned long stoul(const wstring& str, size_t* idx = nullptr, int base = 10);
long long stoll(const wstring& str, size_t* idx = nullptr, int base = 10);
unsigned long long stoull(const wstring& str, size_t* idx = nullptr, int base = 10);
[codeblock:end]

[div:description]
[para:effects]
[:en] the first two functions call [`wcstol(str.c_str(), ptr, base)], and the
last three functions call [`wcstoul(str.c_str(), ptr, base)],
[`wcstoll(str.c_str(), ptr, base)], and [`wcstoull(str.c_str(), ptr, base)],
respectively.
[:zh_CN] 前两个函数调用 [`wcstol(str.c_str(), ptr, base)]，而后三个函数分别调用
[`wcstoul(str.c_str(), ptr, base)]，[`wcstoll(str.c_str(), ptr, base)]，和
[`wcstoull(str.c_str(), ptr, base)]。

[:en] Each function returns the converted result, if any.
[:zh_CN] 各个函数均返回转换后的值（如果有）。

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].
[:zh_CN] 实参 [`ptr] 代表指向函数之内的某个用于确定所要向 [`*idx] 存储的值的对象
的指针。

[:en] If the function does not throw an exception and [`idx != nullptr], the
function stores in [`*idx] the index of the first unconverted element of [`str].
[:zh_CN] 如果函数并未抛出异常并且 [`idx != nullptr]，则该函数向 [`*idx] 中存储
[`str] 中第一个未转换的元素的索引。

[para:returns]
[:en] The converted result.
[:zh_CN] 转换后的值。

[para:throws]
[:en] [`invalid_argument] if [`wcstol], [`wcstoul], [`wcstoll], or [`wcstoull]
reports that no conversion could be performed.
[:zh_CN] 如果 [`wcstol]、[`wcstoul]、[`wcstoll] 或 [`wcstoull] 报告无法进行任何
转换，则抛出 [`invalid_argument]。

[:en] Throws [`out_of_range] if the converted value is outside the range of
representable values for the return type.
[:zh_CN] 如果 转换后的值处于其返回类型能够表示的值的范围之外，则抛出
[`out_of_range]。
[div:end]

[%@lib stof]
[%@lib stod]
[%@lib stold]
[codeblock:declaration]
float stof(const wstring& str, size_t* idx = nullptr);
double stod(const wstring& str, size_t* idx = nullptr);
long double stold(const wstring& str, size_t* idx = nullptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] These functions call [`wcstof(str.c_str(), ptr)],
[`wcstod(str.c_str(), ptr)], and [`wcstold(str.c_str(), ptr)], respectively.
[:zh_CN] 这些函数分别调用 [`wcstof(str.c_str(), ptr)]，
[`wcstod(str.c_str(), ptr)]，和 [`wcstold(str.c_str(), ptr)]。

[:en] Each function returns the converted result, if any.
[:zh_CN] 各个函数均返回转换后的值（如果有）。

[:en] The argument [`ptr] designates a pointer to an object internal to the
function that is used to determine what to store at [`*idx].
[:zh_CN] 实参 [`ptr] 代表指向函数之内的某个用于确定所要向 [`*idx] 存储的值的对象
的指针。

[:en] If the function does not throw an exception and [`idx != nullptr], the
function stores in [`*idx] the index of the first unconverted element of [`str].
[:zh_CN] 如果函数并未抛出异常并且 [`idx != nullptr]，则该函数向 [`*idx] 中存储
[`str] 中第一个未转换的元素的索引。

[para:returns]
[:en] The converted result.
[:zh_CN] 转换后的值。

[para:throws]
[:en] [`invalid_argument] if [`wcstof], [`wcstod], or [`wcstold] reports that no
conversion could be performed.
[:zh_CN] 如果 [`wcstof]，[`wcstod]，或 [`wcstold] 报告无法进行任何转换，则抛出
[`invalid_argument]。

[:en] Throws [`out_of_range] if [`wcstof], [`wcstod], or [`wcstold] sets
[`errno] to [`ERANGE].
[:zh_CN] 如果 [`wcstof]，[`wcstod]，或 [`wcstold] 将 [`errno] 设置为 [`ERANGE]，
则抛出 [`out_of_range]。
[div:end]

[%@lib to_wstring]
[codeblock:declaration]
wstring to_wstring(int val);
wstring to_wstring(unsigned val);
wstring to_wstring(long val);
wstring to_wstring(unsigned long val);
wstring to_wstring(long long val);
wstring to_wstring(unsigned long long val);
wstring to_wstring(float val);
wstring to_wstring(double val);
wstring to_wstring(long double val);
[codeblock:end]

[div:description]
[para:returns]
[:en] Each function returns a [`wstring] object holding the character
representation of the value of its argument that would be generated by calling
[`swprintf(buf, buffsz, fmt, val)] with a format specifier of [`L"%d"],
[`L"%u"], [`L"%ld"], [`L"%lu"], [`L"%lld"], [`L"%llu"], [`L"%f"], [`L"%f"], or
[`L"%Lf"], respectively, where [`buf] designates an internal character buffer of
sufficient size [`buffsz].
[:zh_CN] 各个函数均返回一个 [`wstring] 对象，并分别持有当以格式说明符 [`L"%d"]、
[`L"%u"]、[`"L%ld"]、[`L"%lu"]、[`L"%lld"]、[`L"%llu"]、[`L"%f"]、[`L"%f"] 或
[`L"%Lf"] 调用 [`swprintf(buf, buffsz, fmt, val)] 时所能够产生的，其实参的值的
字符表示。
[div:end]
