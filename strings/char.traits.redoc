[section#char.traits
    [:en] Character traits
    [:zh_CN] 字符特征
]

[para]
[:en]
This subclause defines requirements on classes representing [+:% character
traits], and defines a class template [`char_traits<charT>], along with five
specializations, [`char_traits<char>], [`char_traits<char8_t>],
[`char_traits<char16_t>], [`char_traits<char32_t>], and [`char_traits<wchar_t>],
that meet those requirements.
[:zh_CN]
本子条款定义了有关表示[+:% 字符特征]的类的规定，并定义了满足这些规定的类模板
[`char_traits<charT>] 及其五个特化式 [`char_traits<char>]、
[`char_traits<char8_t>]、[`char_traits<char16_t>]、[`char_traits<char32_t>] 和
[`char_traits<wchar_t>]。

[para]
[:en]
Most classes specified in [#string.classes], [#string.view], and [#input.output]
need a set of related types and functions to complete the definition of their
semantics.
[:zh_CN]
[#string.classes]，[#string.view]，和 [#input.output] 中所给出的大多数类，都需要
一组相关的类型和函数，以完成对它们的语义的定义。

[:en]
These types and functions are provided as a set of member [~typedef-name]s and
functions in the template parameter [`traits] used by each such template.
[:zh_CN]
这些类型和函数是以各个模板所使用的模板形参 [`traits] 中的一组成员 [~typedef-名]
和函数的方式提供的。

[:en]
This subclause defines the semantics of these members.
[:zh_CN]
本子条款定义了这些成员的语义。

[para]
[:en]
To specialize those templates to generate a string, string view, or iostream
class to handle a particular character container type
([#defns.character.container]) [`C], that and its related character traits class
[`X] are passed as a pair of parameters to the string, string view, or iostream
template as parameters [`charT] and [`traits].
[:zh_CN]
当对这些模板进行特化以产生处理某种特定的字符容器类型
（[#defns.character.container]）[`C] 的字符串、字符串视图或 I/O 流时，将这个类型
及其相关的类型特征类 [`X] 作为一对形参，指定为字符串、字符串视图或 I/O 流模板的
[`charT] 和 [`traits] 形参。

[:en]
If [`X::char_type] is not the same type as [`C], the program is ill-formed.
[:zh_CN]
如果 [`X::char_type] 与 [`C] 是不同类型，则程序非良构。

[include char.traits.require]

[include char.traits.typedefs]

[include char.traits.specializations]
