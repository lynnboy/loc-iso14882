[section#string.view.io
    [:en] Inserters and extractors
    [:zh_CN] 插入符和抽取符
]

[%@library operator<<[!basic_string_view]]
[%@library basic_string_view[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, basic_string_view<charT, traits> str);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Behaves as a formatted output function ([#ostream.formatted.reqmts]) of
[`os].
[:zh_CN] 行为如同对 [`os] 的格式化输出函数（[#ostream.formatted.reqmts]）。

[:en] Forms a character sequence [`seq], initially consisting of the elements
defined by the range [=range(str.begin(),str.end())].
[:zh_CN] 构成一个字符序列 [`seq]，开始时由范围 [=range(str.begin(),str.end())]
所定义的各元素构成。

[:en] Determines padding for [`seq] as described in [#ostream.formatted.reqmts].
[:zh_CN] 如 [#ostream.formatted.reqmts] 所述确定 [`seq] 所需的填充。

[:en] Then inserts [`seq] as if by calling [`os.rdbuf()->sputn(seq, n)], where
[`n] is the larger of [`os.width()] and [`str.size()]; then calls
[`os.width(0)].
[:zh_CN] 然后如同调用 [`os.rdbuf()->sputn(seq, n)] 一样插入 [`seq]，其中 [`n] 为
[`os.width()] 和 [`str.size()] 中的较大值；然后调用 [`os.width(0)]。

[para:returns]
[:] [`os]
[exit:description]
