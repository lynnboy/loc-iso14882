[section#string.view.cons
    [:en] Construction and assignment
    [:zh_CN] 构造与赋值
]

[%@library basic_string_view[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr basic_string_view() noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an empty [`basic_string_view].
[:zh_CN] 构造一个空的 [`basic_string_view]。

[para:postconditions]
[:en] [`size_ == 0] and [`data_ == nullptr].
[:zh_CN] [`size == 0] 且 [`date_ == nullptr]。
[exit:description]

[%@library basic_string_view[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr basic_string_view(const charT* str);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [=range(str,str + traits::length(str))] is a valid range.
[:zh_CN] [=range(str,str + traits::length(str))] 是有效范围。

[para:effects]
[:en] Constructs a [`basic_string_view], with the postconditions in
[#string.view.ctr.2].
[:zh_CN] 构造一个 [`basic_string_view]，并具有 [#string.view.ctr.2] 中的后条件。

[table:listing@fill=column@shape=?x1#tab:string.view.ctr.2
    [:en] [`basic_string_view(const charT*)] effects
    [:zh_CN] [`basic_string_view(const charT*)] 的效果
    
    [|@code
        [:en] Element
        [:zh_CN] 要素
    ]
    [|@code
        [:en] Value
        [:zh_CN] 值
    ]
]

[|] data_   [|] str
[|] size_   [|] traits::length(str)

[table:end]

[para:complexity]
[:en] [$[=O]([`traits::length(str)])].
[:zh_CN] [$[=O]([`traits::length(str)])]。
[exit:description]

[%@library basic_string_view[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr basic_string_view(const charT* str, size_type len);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [=range(str,str + len)] is a valid range.
[:zh_CN] [=range(str,str + len)] 是有效范围。

[para:effects]
[:en] Constructs a [`basic_string_view], with the postconditions in
[#string.view.ctr.3].
[:zh_CN] 构造一个 [`basic_string_view]，并具有 [#string.view.ctr.3] 中的后条件。

[table:listing@fill=column@shape=?x1#tab:string.view.ctr.3
    [:en] [`basic_string_view(const charT*, size_type)] effects
    [:zh_CN] [`basic_string_view(const charT*, size_type)] 的效果
    
    [|@code
        [:en] Element
        [:zh_CN] 要素
    ]
    [|@code
        [:en] Value
        [:zh_CN] 值
    ]
]

[|] data_   [|] str
[|] size_   [|] len

[table:end]
[exit:description]
