[section#string.copy
    [`basic_string::copy]
]

[%@library basic_string[!copy]]
[%@library copy[!basic_string]]
[codeblock:declaration]
size_type copy(charT* s, size_type n, size_type pos = 0) const;
[codeblock:end]

[enter:description]
[para]
[:en] Let [`rlen] be the smaller of [`n] and [`size() - pos].
[:zh_CN] 令 [`rlen] 为 [`n] 和 [`size() - pos] 中的较小值。

[para:throws]
[:en] [`out_of_range] if [`pos > size()].
[:zh_CN] 当 [`pos > size()] 时抛出 [`out_of_range]。

[para:requires]
[:en] [=range(s,s + rlen)] is a valid range.
[:zh_CN] [=range(s,s + rlen)] 为有效的范围。

[para:effects]
[:en] Equivalent to [`traits::copy(s, data() + pos, rlen)].
[:zh_CN] 等价于 [`traits::copy(s, data() + pos, rlen)]。

[enter:note]
[:en] This does not terminate [`s] with a null object.
[:zh_CN] 这并不会造成以空对象来截断 [`s]。
[exit:note]

[para:returns]
[:en] [`rlen].
[:zh_CN] [`rlen]。
[exit:description]
