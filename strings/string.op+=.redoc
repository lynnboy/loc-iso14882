[section#string.op+=
    [`basic_string::operator+=]
]

[%@library basic_string[!operator+=]]
[%@library operator+=[!basic_string]]
[codeblock:declaration]
basic_string& operator+=(const basic_string& str);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`append(str)].
[:zh_CN] 调用 [`append(str)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator+=[!basic_string]]
[%@library basic_string[!operator+=]]
[codeblock:declaration]
template<class T>
  basic_string& operator+=(const T& t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Creates a variable, [`sv], as if by
[`basic_string_view<charT, traits> sv = t;] and then calls [`append(sv)].
[:zh_CN] 如同以 [`basic_string_view<charT, traits> sv = t;] 创建一个变量 [`sv]，
然后调用 [`append(sv)] 相同。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。

[para:remarks]
[:en] This function shall not participate in overload resolution unless
[`is_convertible_v<const T&, basic_string_view<charT, traits>>] is [`true] and
[`is_convertible_v<const T&, const charT*>] is [`false].
[:zh_CN] 除非 [`is_convertible_v<const T&, basic_string_view<charT, traits>>] 为
[`true]，并且 [`is_convertible_v<const T&, const charT*>] 为 [`false]，否则这个
函数不能参与重载决议。
[list:end]
[exit:description]

[%@library operator+=[!basic_string]]
[%@library basic_string[!operator+=]]
[codeblock:declaration]
basic_string& operator+=(const charT* s);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`append(s)].
[:zh_CN] 调用 [`append(s)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library basic_string[!operator+=]]
[%@library operator+=[!basic_string]]
[codeblock:declaration]
basic_string& operator+=(charT c);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`push_back(c)];
[:zh_CN] 调用 [`push_back(c)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator+=[!basic_string]]
[%@library basic_string[!operator+=]]
[codeblock:declaration]
basic_string& operator+=(initializer_list<charT> il);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`append(il)].
[:zh_CN] 调用 [`append(il)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]
