[section#module.reach
    [:en] Reachability
    [:zh_CN] 可达性
]

[:en]
[%necessarily reachable[%reachable[!necessarily]]]
[:zh_CN]
[%必定可达[%可达[!必定～]]]

[para]
[:en]
A translation unit [$U] is [+necessarily reachable[%reachable[!necessarily
[!translation unit]]]] from a point [$P] if [$U] is a module interface unit on
which the translation unit containing [$P] has an interface dependency, or
the translation unit containing [$P] imports [$U], in either case prior to [$P]
([#module.import]).
[:zh_CN]
如果翻译单元 [$U] 是个模块接口单元且包含位置 [$P] 的翻译单元对其有接口依赖，或者
包含 [$P] 的翻译单元导入了 [$U]，两种情况下都在 [$P] 之前发生（[#module.import]）
，则 [$U] 从 [$P] 处[+必定可达[%可达[!必定～[!翻译单元]]]]。

[begin:note]
[:en]
While module interface units are reachable even when they are only transitively
imported via a non-exported import declaration, namespace-scope names from such
module interface units are not visible to name lookup ([#basic.scope.namespace]).
[:zh_CN]
即使这些模块接口单元只是通过无导出的导入声明式而传递导入的，他们也是可达的，这些
模块接口单元中的命名空间作用域的名字对于名字查找不可见
（[#basic.scope.namespace]）。
[end:note]

[para]
[:en]
All translation units that are necessarily reachable are [+reachable[%reachable
[!translation unit]]].
[:zh_CN]
所有必定可达的翻译单元都是[+可达[%可达[!翻译单元]]]的。

[:en]
It is unspecified whether additional translation units on which the point within
the program has an interface dependency are considered reachable, and under what
circumstances.[#:note#fn:$1]
[:zh_CN]
程序中的某个位置对之有接口依赖的其他翻译单元是否被当作可达，并在何中情况下可达，
是未指明的。[#:note#fn:$1]

[note:foot#fn:$1]
[:en]
Implementations are therefore not required to prevent the semantic effects of
additional translation units involved in the compilation from being observed.
[:zh_CN]
因而并不要求各个实现避免编译过程中所涉及的其他翻译单元的语义效果被观察到。
[note:end]

[begin:note]
[:en]
It is advisable to avoid depending on the reachability of any additional
translation units in programs intending to be portable.
[:zh_CN]
为了可移植性而避免对任何额外的翻译单元的可达性有所依赖，是明智的做法。
[end:note]

[para]
[:en]
A declaration [$D] is [+reachable[%reachable[!declaration]]] if, for any point
[$P] in the instantiation context ([#module.context]),
[:zh_CN]
如果对于实例化语境（[#module.context]）中的任何位置 [$P] 符合以下情况，则称
声明式 [$D] [+可达[%可达[!声明式]]]：

[list]
[item]
[:en@~]
[$D] appears prior to [$P] in the same translation unit, or
[:zh_CN@~]
[$D] 在同一个翻译单元中出现于 [$P] 之前，或者
[item]
[:en@~]
[$D] is not discarded ([#module.global]), appears in a translation unit that is
reachable from [$P], and either does not appear within a
[~private-module-fragment] or appears in a [~private-module-fragment] of the
module containing [$P].
[:zh_CN@~]
[$D] 未被弃用（[#module.global]），出现于从 [$P] 可达的翻译单元之中，并且两种
情况下都不处于[~私有模块分段]中，或处于包含 [$P] 的模块的[~私有模块分段]中。
[list:end]

[begin:note]
[:en]
Whether a declaration is exported has no bearing on whether it is reachable.
[:zh_CN]
声明式是否被导出与其是否可达无关。
[end:note]

[para]
[:en]
The accumulated properties of all reachable declarations of an entity within a
context determine the behavior of the entity within that context.
[:zh_CN]
某个实体在某个语境中的所有可达声明式所累积的各项性质，决定该实体在该语境中的行为。

[begin:note]
[:en]
These reachable semantic properties include type completeness, type definitions,
initializers, default arguments of functions or template declarations,
attributes, visibility of class or enumeration member names to ordinary lookup,
etc.
[:zh_CN]
这些可达的语义性质包括类型完整性，类型定义式，初始化式，函数或模板声明式的默认
实参，特性标注，类或枚举成员名对常规查找的可见性，等等。

[:en]
Since default arguments are evaluated in the context of the call expression,
the reachable semantic properties of the corresponding parameter types apply in
that context.
[:zh_CN]
由于默认实参是在调用表达式的语境中求值的，所以其对应形参类型的可达语义性质在这个
语境中适用。

[begin:example]
[:en] Translation unit #1:
[:zh_CN] 翻译单元 #1：
[codeblock]
export module M:A;
export struct B;
[codeblock:end]

[:en] Translation unit #2:
[:zh_CN] 翻译单元 #2：
[codeblock]
module M:B;
struct B {
  operator int();
};
[codeblock:end]

[:en] Translation unit #3:
[:zh_CN] 翻译单元 #3：
[codeblock]
module M:C;
import :A;
B b1;                           // [:en] error: no reachable definition of [`struct B] \
                                   [:zh_CN] 错误：没有可达的 [`struct B] 的定义式
[codeblock:end]

[:en] Translation unit #4:
[:zh_CN] 翻译单元 #4：
[codeblock]
export module M;
export import :A;
import :B;
B b2;
export void f(B b = B());
[codeblock:end]

[:en] Translation unit #5:
[:zh_CN] 翻译单元 #5：
[codeblock]
module X;
import M;
B b3;                           // [:en] error: no reachable definition of [`struct B] \
                                   [:zh_CN] 错误：没有可达的 [`struct B] 的定义式
void g() { f(); }               // [:en] error: no reachable definition of [`struct B] \
                                   [:zh_CN] 错误：没有可达的 [`struct B] 的定义式
[codeblock:end]
[end:example]
[end:note]

[para]
[begin:note]
[:en]
An entity can have reachable declarations even if it is not visible to name
lookup.
[:zh_CN]
即使实体对于名字查找不可见，它也可以具有可达的声明式。
[end:note]

[begin:example]
[codeblock]
export module A;
struct X {};
export using Y = X;

module B;
import A;
Y y;                // [:en] OK, definition of [`X] is reachable \
                       [:zh_CN] OK，[`X] 的定义式可达
X x;                // [:en] ill-formed: [`X] not visible to unqualified lookup \
                       [:zh_CN] 非良构：[`X] 对于未限定查找不可见
[codeblock:end]
[end:example]
