[section#meta.trans.ptr
    [:en] Pointer modifications
    [:zh_CN] 指针改造
]

[table:listing#meta.trans.ptr
    [:en] Pointer modifications
    [:zh_CN] 指针改造
    [|  [:en] Template
        [:zh_CN] 模板 ]
    [|  [:en] Comments
        [:zh_CN] 注释 ]
]

[%@lib remove_pointer]
[|]
[`template<class T>] [br]
[`struct remove_pointer;]
[|] [:en] If [`T] has type [=lq](possibly cv-qualified) pointer to [`T1][=rq]
    then the member typedef [`type] denotes [`T1]; otherwise, it denotes [`T].
    [:zh_CN] 若 [`T] 具有类型“[`T1] 的（可能被 cv 限定的）指针”，则成员 typedef
    [`type] 代表 [`T1]；否则，它代表 [`T]。
[-]

[%@lib add_pointer]
[|]
[`template<class T>] [br]
[`struct add_pointer;]
[|] [:en] If [`T] is a referenceable type ([#defns.referenceable]) or a
    [=cv] [`:key void] type then the member typedef [`type] denotes
    [`remove_reference_t<T>*]; otherwise, [`type] denotes [`T].
    [:zh_CN] 若 [`T] 是某个可被引用的类型（[#defns.referenceable]）或者
    [=cv] [`:key void]，则成员 typedef [`type] 代表 [`remove_reference_t<T>*]；
    否则，[`type] 代表 [`T]。
[-]
[table:end]
