[section#ratio.reflection.operators
    [:en] Operator representations
    [:zh_CN] 运算符的表示
]

[codeblock:declaration]
enum class [[redoc("`:lib>")]]operators {
  [[redoc("[=seebelow]")]];
};
using enum operators;
[codeblock:end]

[div:description]
[para]
[:en] The enumeration type [`operators] specifies constants used to identify
operators that can be overloaded, with the meanings listed in [#:tab#meta.reflection.operators].
[:zh_CN] 枚举类型 [`operators] 指定了用于标识可重载的运算符的常量，其含义列于 [#:tab#meta.reflection.operators]。

[:en] The values of the constants are distinct.
[:zh_CN] 各常量的值均不相同。
[div:end]

[table:listing@shape=?x1@fill=column#meta.reflection.operators
  [:en] Enum class [`operators]
  [:zh_CN] 枚举类 [`operators]
  [|@code [:en] Constant [:zh_CN] 常量 ]
  [|@code [:en] Corresponding [~operator-function-id] [:zh_CN] 相应[~运算符函数标识] ]
  [|@code [:en] Operator symbol name [:zh_CN] 运算符符号名称 ]
]
[|] op_new                    [|] operator new        [|] new         [-]
[|] op_delete                 [|] operator delete     [|] delete      [-]
[|] op_array_new              [|] operator new`[`]    [|] new`[`]     [-]
[|] op_array_delete           [|] operator delete`[`] [|] delete`[`]  [-]
[|] op_co_await               [|] operator co_await   [|] co_await    [-]
[|] op_parentheses            [|] operator()          [|] ()          [-]
[|] op_square_brackets        [|] operator`[`]        [|] `[`]        [-]
[|] op_arrow                  [|] operator->          [|] ->          [-]
[|] op_arrow_star             [|] operator->*         [|] ->*         [-]
[|] op_tilde                  [|] operator~           [|] ~           [-]
[|] op_exclamation            [|] operator!           [|] !           [-]
[|] op_plus                   [|] operator+           [|] +           [-]
[|] op_minus                  [|] operator-           [|] -           [-]
[|] op_star                   [|] operator*           [|] *           [-]
[|] op_slash                  [|] operator/           [|] /           [-]
[|] op_percent                [|] operator%           [|] %           [-]
[|] op_caret                  [|] operator^           [|] ^           [-]
[|] op_ampersand              [|] operator&           [|] &           [-]
[|] op_equals                 [|] operator=           [|] =           [-]
[|] op_pipe                   [|] operator|           [|] |           [-]
[|] op_plus_equals            [|] operator+=          [|] +=          [-]
[|] op_minus_equals           [|] operator-=          [|] -=          [-]
[|] op_star_equals            [|] operator*=          [|] *=          [-]
[|] op_slash_equals           [|] operator/=          [|] /=          [-]
[|] op_percent_equals         [|] operator%=          [|] %=          [-]
[|] op_caret_equals           [|] operator^=          [|] ^=          [-]
[|] op_ampersand_equals       [|] operator&=          [|] &=          [-]
[|] op_pipe_equals            [|] operator|=          [|] |=          [-]
[|] op_equals_equals          [|] operator==          [|] ==          [-]
[|] op_exclamation_equals     [|] operator!=          [|] !=          [-]
[|] op_less                   [|] operator<           [|] <           [-]
[|] op_greater                [|] operator>           [|] >           [-]
[|] op_less_equals            [|] operator<=          [|] <=          [-]
[|] op_greater_equals         [|] operator>=          [|] >=          [-]
[|] op_spaceship              [|] operator<=>         [|] <=>         [-]
[|] op_ampersand_ampersand    [|] operator&&          [|] &&          [-]
[|] op_pipe_pipe              [|] operator||          [|] ||          [-]
[|] op_less_less              [|] operator<<          [|] <<          [-]
[|] op_greater_greater        [|] operator>>          [|] >>          [-]
[|] op_less_less_equals       [|] operator<<=         [|] <<=         [-]
[|] op_greater_greater_equals [|] operator>>=         [|] >>=         [-]
[|] op_plus_plus              [|] operator++          [|] ++          [-]
[|] op_minus_minus            [|] operator--          [|] --          [-]
[|] op_comma                  [|] operator,           [|] ,           [-]
[table:end]

[%@lib operator_of]
[codeblock:declaration]
consteval operators operator_of(info r);
[codeblock:end]

[div:description]
[para:returns]
[:en] The value of the enumerator from the [`operators] whose corresponding
[~operator-function-id] is the unqualified name of the entity represented by [`r].
[:zh_CN] [`operators] 中枚举符的值，该枚举符的对应[~运算符函数标识]是 [`r] 所代表实体的无限定名。

[para:throws]
[:en] [`meta::exception] unless [`r] represents an operator function or operator
function template.
[:zh_CN] 除非 [`r] 表示某个运算符函数或者运算符函数模板，否则抛出 [`meta::exception]。
[div:end]

[%@lib symbol_of]
[%@lib u8symbol_of]
[codeblock:declaration]
consteval string_view symbol_of(operators op);
consteval u8string_view u8symbol_of(operators op);
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`string_view] or [`u8string_view] containing the characters of the
operator symbol name corresponding to [`op],
respectively encoded with the ordinary literal encoding or with UTF-8.
[:zh_CN] 一个 [`string_view] 或者 [`u8string_view]，包含对应于 [`op] 的运算符符号名称
的各字符，分别按普通字面编码或 UTF-8 编码。

[para:throws]
[:en] [`meta::exception] unless the value of [`op] corresponding to one of the
enumerators in [`operators].
[:zh_CN] 除非 [`op] 的值对应于 [`operators] 中的枚举符之一，否则抛出 [`meta::exception]。
[div:end]