[section#meta.trans.cv
    [:en] Const-volatile modifications
    [:zh_CN] const-volatile 改造
]

[para]
[:en]
The templates specified in [#:tab#meta.trans.cv] add or remove cv-qualifications
([#basic.type.qualifier]).
[:zh_CN]
[#:tab#meta.trans.cv] 中给出的各模板添加或移除 cv 限定（[#basic.type.qualifier]）。

[table:grid#meta.trans.cv
    [:en] Const-volatile modifications
    [:zh_CN] const-volatile 改造
    [|  [:en] Template
        [:zh_CN] 模板 ]
    [|  [:en] Comments
        [:zh_CN] 注释 ]
]

[%@lib remove_const]
[|]
[`template<class T>] [br]
[`struct remove_const;]
[|] [:en] The member typedef [`type] denotes the type formed by removing any
    top-level const-qualifier from [`T].
    [:zh_CN] 成员 typedef [`type] 代表从 [`T] 移除任何顶层 [`const] 限定符所形成
    的类型。
    [para]
    [begin:example]
    [:en] [`remove_const_t<const volatile int>] evaluates to [`volatile int],
    whereas [`remove_const_t<const int*>] evaluates to [`const int*].
    [:zh_CN] [`remove_const_t<const volatile int>] 求值为 [`volatile int]，而
    [`remove_const_t<const int*>] 为 [`const int*]。
    [end:example]
[-]

[%@lib remove_volatile]
[|]
[`template<class T>] [br]
[`struct remove_volatile;]
[|] [:en] The member typedef [`type] denotes the type formed by removing any
    top-level volatile-qualifier from [`T].
    [:zh_CN] 成员 typedef [`type] 代表从 [`T] 移除任何顶层 [`volatile] 限定符所
    形成的类型。
    [para]
    [begin:example]
    [:en] [`remove_volatile_t<const volatile int>] evaluates to [`const int],
    whereas [`remove_volatile_t<volatile int*>] evaluates to [`volatile int*].
    [:zh_CN] [`remove_volatile_t<const volatile int>] 求值为 [`const int]，而
    [`remove_volatile_t<volatile int*>] 求值为 [`volatile int*]。
    [end:example]
[-]

[%@lib remove_cv]
[|]
[`template<class T>] [br]
[`struct remove_cv;]
[|] [:en] The member typedef [`type] denotes the type formed by removing any
    top-level cv-qualifier from [`T].
    [:zh_CN] 成员 typedef [`type] 代表从 [`T] 移除任何顶层 cv 限定符所形成的类型。
    [para]
    [begin:example]
    [:en] [`remove_cv_t<const volatile int>] evaluates to [`int], whereas
    [`remove_cv_t<const volatile int*>] evaluates to [`const volatile int*].
    [:zh_CN] [`remove_cv_t<const volatile int>] 求值为 [`int]，而
    [`remove_cv_t<const volatile int*>] 求值为 [`const volatile int*]。
    [end:example]
[-]

[%@lib add_const]
[|]
[`template<class T>] [br]
[`struct add_const;]
[|] [:en] The member typedef [`type] denotes [`const T].
    [:zh_CN] 成员 typedef [`type] 代表 [`const T]。
    [begin:note@tail]
    [:en] [`:key const] has no effect when [`T] is a reference, function, or
    top-level const-qualified type.
    [:zh_CN] 当 [`T] 为引用、函数或带有顶层 const 限定的类型时，[`:key const] 没有效果。
    [end:note]
[-]

[%@lib add_volatile]
[|]
[`template<class T>] [br]
[`struct add_volatile;]
[|] [:en] The member typedef [`type] denotes [`volatile T].
    [:zh_CN] 成员 typedef [`type] 代表 [`volatile T]。
    [begin:note@tail]
    [:en] [`:key volatile] has no effect when [`T] is a reference, function, or
    top-level volatile-qualified type.
    [:zh_CN] 当 [`T] 为引用、函数或带有顶层 volatile 限定的类型时，[`:key volatile] 没有效果。
    [end:note]
[-]

[%@lib add_cv]
[|]
[`template<class T>] [br]
[`struct add_cv;]
[|] [:en] The member typedef [`type] denotes [`add_const_t<add_volatile_t<T>>].
    [:zh_CN] 成员 typedef [`type] 代表 [`add_const_t<add_volatile_t<T>>]。
[-]

[table:end]
