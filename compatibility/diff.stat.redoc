[section#diff.stat
    [:en] [#stmt.stmt]: statements
    [:zh_CN] [#stmt.stmt]：语句
]

[para:~] [#stmt.switch], [#stmt.goto]

[=Change]
[:en] It is now invalid to jump past a declaration with explicit or implicit
initializer (except across entire block not entered).
[:zh_CN] 跳转向后越过带有显式或隐式的初始化式（除非跳过整个块而不进入其中）现在
是无效的。

[=Rationale]
[:en] Constructors used in initializers may allocate resources which need to be
de-allocated upon leaving the block.
[:zh_CN] 初始化式所使用的构造函数可能会分配资源，并需要在离开块时进行回收。

[:en] Allowing jump past initializers would require complicated runtime
determination of allocation.
[:zh_CN] 允许向后跳过初始化式将要求复杂的运行时确定分配与否的逻辑。

[:en] Furthermore, any use of the uninitialized object could be a disaster.
[:zh_CN] 此外，任何使用未初始化对象都是一种灾难。

[:en] With this simple compile-time rule, [=Cpp] assures that if an initialized
variable is in scope, then it has assuredly been initialized.
[:zh_CN] 以这条简单的编译期规则，[=Cpp] 确保了如果某个已初始化变量在作用域中，
则它肯定是已经初始化的。

[=Effect]
[:en] Deletion of semantically well-defined feature.
[:zh_CN] 删除了有良好定义语义的功能特性。

[=Difficulty]
[:en] Semantic transformation.
[:zh_CN] 语义转换。

[=HowWide]
[:en] Seldom.
[:zh_CN] 少见。

[para:~] [#stmt.return]

[=Change]
[:en] It is now invalid to return (explicitly or implicitly) from a function
which is declared to return a value without actually returning a value.
[:zh_CN] 从一个被声明为返回值的函数中（显式或隐式）返回而不实际返回值，现在是
无效的。

[=Rationale]
[:en] The caller and callee may assume fairly elaborate return-value mechanisms
for the return of class objects.
[:zh_CN] 调用方和被调用方在类对象的返回方面会假定相当精细的返回值机制。

[:en] If some flow paths execute a return without specifying any value, the
implementation must embody many more complications.
[:zh_CN] 如果某些控制流路径中执行了返回语句但未指定任何值，则实现必须承担更多的
复杂性。

[:en] Besides, promising to return a value of a given type, and then not
returning such a value, has always been recognized to be a questionable
practice, tolerated only because very-old C had no distinction between void
functions and int functions.
[:zh_CN] 此外，承诺会返回某个给定类型的值却又不返回这样的值，一直被认为是一种
有问题的实践，允许它只不过是因为非常老旧的 C 中并不区分 [`void] 函数和 [`int]
函数而已。

[=Effect]
[:en] Deletion of semantically well-defined feature.
[:zh_CN] 删除了有良好定义语义的功能特性。

[=Difficulty]
[:en] Semantic transformation.
[:zh_CN] 语义转换。

[=HowWide]
[:en] Seldom.
[:zh_CN] 少见。

[:en] For several years, many existing C implementations have produced warnings
in this case.
[:zh_CN] 近几年，许多现存的 C 实现都已经对这种情况产生警告消息。
