[section#diff.cpp14.dcl.dcl
    [:en] [#dcl.dcl]: declarations
    [:zh_CN] [#dcl.dcl]：声明式
]

[para:diff] [#dcl.stc]
[:en] [%[`register] storage class]
[:zh_CN] [%[`register] 存储类]
[=Change]
[:en] Removal of [`register] [~storage-class-specifier].
[:zh_CN] 移除[~存储类说明符] [`register]。

[=Rationale]
[:en] Enable repurposing of deprecated keyword in future revisions of this
International Standard.
[:zh_CN] 准备在本国际标准的未来版本中为被摒弃的关键字重新设定功能。

[=Effect]
[:en] A valid [=CppXIV] declaration utilizing the [`register]
[~storage-class-specifier] is ill-formed in this International Standard.
[:zh_CN] 使用[~存储类说明符] [`register] 的有效 [=CppXIV] 声明式，在本国际标准中
非良构。

[:en] The specifier can simply be removed to retain the original meaning.
[:zh_CN] 可以直接移除这个说明符并保持其原有含义。

[para:diff] [#dcl.spec.auto]
[=Change]
[:en] [`auto] deduction from [~braced-init-list].
[:zh_CN] 从[~花括号初始化列表]进行 [`auto] 推断。

[=Rationale]
[:en] More intuitive deduction behavior.
[:zh_CN] 更自然的推断行为。

[=Effect]
[:en] Valid [=CppXIV] code may fail to compile or may change meaning
in this International Standard.
[:zh_CN] 有效的 [=CppXIV] 代码在本国际标准中可能无法编译或者改变其含义。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
auto x1{1};    // [:en] was [`std::initializer_list<int>], now [`int]
               // [|:zh_CN] 原来是 [`std::initializer_list<int>]，现在是 [`int]
auto x2{1, 2}; // [:en] was [`std::initializer_list<int>], now ill-formed
               // [|:zh_CN] 原来是 [`std::initializer_list<int>]，现在非良构
[codeblock:end]
