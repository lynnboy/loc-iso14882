[section#diff.cpp03.temp
    [:en] Clause [#temp]: templates
    [:zh_CN] 第 [#temp] 章：模板
]

[para:~] [#temp.param]
[=Change]
[:en] Remove [`export].
[:zh_CN] 移除了 [`export]。

[=Rationale]
[:en] No implementation consensus.
[:zh_CN] 没有实现的共识。

[=Effect]
[:en] A valid [=CppIII] declaration containing [`export] is ill-formed in this
International Standard.
[:zh_CN] 包含 [`export] 的有效的 [=CppIII] 声明式在本国际标准中非良构。

[para:~] [#temp.arg]
[=Change]
[:en] Remove whitespace requirement for nested closing template right angle
brackets.
[:zh_CN] 移除了对嵌套的闭合模板右角括号的空白的要求。

[=Rationale]
[:en] Considered a persistent but minor annoyance.
[:zh_CN] 这被认为是一种顽固但很小的麻烦。

[:en] Template aliases representing non-class types would exacerbate whitespace
issues.
[:zh_CN] 表示非类类型的模板别名会使空白问题恶化。

[=Effect]
[:en] Change to semantics of well-defined feature.
[:zh_CN] 改变了有良好定义的功能特性的语义。

[:en] A valid [=CppIII] expression containing a right angle bracket (["[`>]])
followed immediately by another right angle bracket may now be treated as
closing two templates.
[:zh_CN] 包含一个右角括号（“[`>]”）并紧跟着另一个右角括号的有效的 [=CppIII]
表达式，现在将被当做闭合两个模板。

[:en] For example, the following code is valid in [=CppIII] because ["[`>>]]
is a right-shift operator, but invalid in this International Standard because
["[`>>]] closes two templates.
[:zh_CN] 例如，以下代码在 [=CppIII] 中有效，因为“[`>>]”是一个右移运算符，但在
本国际标准中无效，因为“[`>>]”闭合两个模板。

[codeblock]
template <class T> struct X { };
template <int N> struct Y { };
X< Y< 1 >> 2 > > x;
[codeblock:end]

[para:~] [#temp.dep.candidate]
[=Change]
[:en] Allow dependent calls of functions with internal linkage.
[:zh_CN] 允许对具有内部连接的函数进行待决的调用。

[=Rationale]
[:en] Overly constrained, simplify overload resolution rules.
[:zh_CN] 过度约束，简化重载决议规则。

[=Effect]
[:en] A valid [=CppIII] program could get a different result than this
International Standard.
[:zh_CN] 有效的 [=CppIII] 程序可能获得与本国际标准不同的结果。
