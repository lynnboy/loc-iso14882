[section#diff.cpp03.expr
    [:en] [#expr]: expressions
    [:zh_CN] [#expr]：表达式
]

[para:diff] [#conv.ptr]
[=Change]
[:en] Only literals are integer null pointer constants.
[:zh_CN] 只有字面量才是整数空指针常量。

[=Rationale]
[:en] Removing surprising interactions with templates and constant expressions.
[:zh_CN] 移除了模板和常量表达式之间的预期之外的交互情形。

[=Effect]
[:en] Valid [=CppIII] code may fail to compile or produce different results in
this International Standard.
[:zh_CN] 有效的 [=CppIII] 代码可能在本国际标准中无法编译或产生不同的结果。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
void f(void *);     // #1
void f(...);        // #2
template<int N> void g() {
  f(0*N);           // [:en] calls #2; used to call #1 \
                       [:zh_CN] 调用 #2；以前调用的是 #1
}
[codeblock:end]

[para:diff] [#expr.mul]
[=Change]
[:en] Specify rounding for results of integer [`/] and [`%].
[:zh_CN] 为整数的 [`/] 和 [`%] 的结果指定了舍入规则。

[=Rationale]
[:en] Increase portability, C99 compatibility.
[:zh_CN] 增加可移植性，C99 兼容性。

[=Effect]
[:en] Valid [=CppIII] code that uses integer division rounds the result toward 0
or toward negative infinity, whereas this International Standard always rounds
the result toward 0.
[:zh_CN] 有效的 [=CppIII] 代码使用整数除法可能将其结果向 0 或向负无穷舍入，而本
国际标准总是将结果向 0 舍入。

[para:diff] [#expr.log.and]
[=Change]
[:en] [`&&] is valid in a [~type-name].
[:zh_CN] [~类型名]中 [`&&] 是有效的。

[=Rationale]
[:en] Required for new features.
[:zh_CN] 新功能特性所需要。

[=Effect]
[:en] Valid [=CppIII] code may fail to compile or produce different results in
this International Standard.
[:zh_CN] 有效的 [=CppIII] 代码可能在本国际标准中无法编译或产生不同的结果。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
bool b1 = new int && false;             // [:en] previously [`false], now ill-formed \
                                           [:zh_CN] 之前为 [`false]，现在非良构
struct S { operator int(); };
bool b2 = &S::operator int && false;    // [:en] previously [`false], now ill-formed \
                                           [:zh_CN] 之前为 [`false]，现在非良构
[codeblock:end]
