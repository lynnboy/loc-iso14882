[section#diff.cpp23.expr
    [:en] [#expr]: expressions
    [:zh_CN] [#expr]：表达式
]

[para:diff] [#expr.arith.conv]
[?change]
[:en] Operations mixing a value of an enumeration type and a value of a different
enumeration type or of a floating-point type are no longer valid.
[:zh_CN] 一个枚举类型的值和一个不同的枚举类型或浮点类型的值的混合运算不再合法。

[?rationale]
[:en] Reinforcing type safety.
[:zh_CN] 增强类型安全性。

[?effect]
[:en] A valid [=CppXXIII] program that performs operations mixing a value of an
enumeration type and a value of a different enumeration type or of a
floating-point type is ill-formed.
[:zh_CN] 进行一个枚举类型的值和一个不同的枚举类型或浮点类型的值的混合运算的合法
[=CppXXIII] 变为非良构。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
enum E1 { e };
enum E2 { f };
bool b = e <= 3.7;      // [:en] ill-formed; previously well-formed \
                        [:zh_CN] 非良构；之前为良构
int  k = f - e;         // [:en] ill-formed; previously well-formed \
                        [:zh_CN] 非良构；之前为良构
auto x = true ? e : f;  // [:en] ill-formed; previously well-formed \
                        [:zh_CN] 非良构；之前为良构
[codeblock:end]
