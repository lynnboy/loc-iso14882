[section#diff.cpp11.dcl.decl
    [:en] [#dcl.decl]: declarators
    [:zh_CN] [#dcl.decl]：声明符
]

[para:diff] [#dcl.init.aggr]
[=Change]
[:en] Classes with default member initializers can be aggregates.
[:zh_CN] 带有默认成员初始化式的类可以是聚合。

[=Rationale]
[:en] Necessary to allow default member initializers to be used by aggregate
initialization.
[:zh_CN] 为允许将默认成员初始化式用在聚合初始化中需要如此。

[=Effect]
[:en] Valid [=CppXI] code may fail to compile or may change meaning in this
International Standard.
[:zh_CN] 有效的 [=CppXI] 代码在本国际标准中可能无法编译或改变其含义。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
struct S { // [:en] Aggregate in [=CppXIV] onwards.
           // [|:zh_CN] 从 [=CppXIV] 开始是聚合。
  int m = 1;
};
struct X {
  operator int();
  operator S();
};
X a{};
S b{a};  // [:en] uses copy constructor in [=CppXI],
         // [|:zh_CN] 在 [=CppXI] 中使用复制构造函数，
         // [:en@~] performs aggregate initialization in this International Standard
         // [|:zh_CN@~] 在本国际标准中进行聚合初始化
[codeblock:end]
