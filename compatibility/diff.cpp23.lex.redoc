[section#diff.cpp23.lex
    [:en] [#lex]: lexical conventions
    [:zh_CN] [#lex]：词法约定
]

[para:diff] [#lex.operators]
[?change]
[:en] New operator [`^^].
[:zh_CN] 新运算符 [`^^]。

[?rationale]
[:en] Required for new features.
[:zh_CN] 新功能特性的要求。

[?effect]
[:en] Valid [=CppXXIII] code that contains two consecutive [`^] tokens can be
ill-formed in this revision of [=Cpp].
[:zh_CN] 包含两个连续 [`^] 记号的合法 [=CppXXIII] 代码，
在此版本的 [=Cpp] 中可能非良构。

[begin:example]
[codeblock]
struct C { int operator^(int); };
int operator^(int (C::*p)(int), C);
int i = &C::operator^^C{};              // [:en] ill-formed; previously well-formed [:zh_CN] 非良构；之前良构
[codeblock:end]
[end:example]

[para:diff] [#lex.key]
[?change]
[:en] New keywords.
[:zh_CN] 新关键词。

[?rationale]
[:en] Required for new features.
[:zh_CN] 新功能特性的要求。

[list]
[item]
[:en] The [`:key contract_assert] keyword is added to introduce a contract
assertion through an [~assertion-statement] ([#stmt.contract.assert]).
[:zh_CN] 添加 [`:key contract_assert] 关键词，用以通过[~断言语句]引入
契约断言（[#stmt.contract.assert]）。
[list:end]

[?effect]
[:en] Valid [=CppXXIII] code using [`:key contract_assert] as an identifier
is not valid in this revision of [=Cpp].
[:zh_CN] 将 [`:key contract_assert] 用作标识符的合法 [=CppXXIII] 代码，
在此版本的 [=Cpp] 中非法。
