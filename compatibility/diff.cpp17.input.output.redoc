[section#diff.cpp17.input.output
    [:en] [#input.output]: input/output library
    [:zh_CN] [#input.output]：输入/输出程序库
]

[para:diff] [#istream.extractors]
[?change]
[:en] Character array extraction only takes array types.
[:zh_CN] 字符数组的提取操作只接受数组类型。

[?rationale]
[:en] Increase safety via preventing buffer overflow at compile time.
[:zh_CN] 通过在编译期避免缓冲区溢出而提升安全性。

[?effect]
[:en] Valid [=CppXVII] code may fail to compile in this International Standard:
[:zh_CN] 有效的 [=CppXVII] 代码在本国际标准中可能无法编译：

[codeblock]
auto p = new char[100];
char q[100];
std::cin >> std::setw(20) >> p;         // [:en] ill-formed; previously well-formed \
                                           [:zh_CN] 非良构；之前是良构的
std::cin >> std::setw(20) >> q;         // OK
[codeblock:end]

[para:diff] [#ostream.inserters.character]
[?change]
[:en] Overload resolution for ostream inserters used with UTF-8 literals.
[:zh_CN] 对 UTF-8 字面量使用的输出流插入符的重载决议。

[?rationale]
[:en] Required for new features.
[:zh_CN] 由新功能特性所要求。

[?effect]
[:en] Valid [=CppXVII] code that passes UTF-8 literals to
[`basic_ostream<char, ...>::operator<<] or
[`basic_ostream<wchar_t, ...>::operator<<] is now ill-formed.
[:zh_CN] 向 [`basic_ostream<char, ...>::operator<<] 或
[`basic_ostream<wchar_t, ...>::operator<<] 传递 UTF-8 字面量的有效的 [=CppXVII]
代码，现在非良构。

[codeblock]
std::cout << u8"text";          // [:en] previously called [`operator<<(const char*)] and printed a string; \
                                   [:zh_CN] 之前调用的是 [`operator<<(const char*)] 并打印字符串；
                                // [:en@~] now ill-formed \
                                   [:zh_CN@~] 现在非良构
std::cout << u8'X';             // [:en] previously called [`operator<<(char)] and printed a character; \
                                   [:zh_CN] 之前调用的是 [`operator<<(char)] 并打印字符；
                                // [:en@~] now ill-formed \
                                   [:zh_CN@~] 现在非良构
[codeblock:end]

[para:diff] [#ostream.inserters.character]
[?change]
[:en] Overload resolution for ostream inserters used with [`wchar_t], [`char16_t],
or [`char32_t] types.
[:zh_CN] 针对用于 [`wchar_t]、[`char16_t] 或 [`char32_t] 类型的输出流插入符进行
的重载决议。

[?rationale]
[:en] Removal of surprising behavior.
[:zh_CN] 移除出人意料的行为。

[?effect]
[:en] Valid [=CppXVII] code that passes [`wchar_t], [`char16_t], or [`char32_t]
characters or strings to [`basic_ostream<char, ...>::operator<<] or that passes
[`char16_t] or [`char32_t] characters or strings to
[`basic_ostream<wchar_t, ...>::operator<<] is now ill-formed.
[:zh_CN] 将 [`wchar_t]、[`char16_t] 或 [`char32_t] 字符或字符串传递给
[`basic_ostream<char, ...>::operator<<]，或者将 [`char16_t] 或 [`char32_t] 字符
或字符串传递给 [`basic_ostream<wchar_t, ...>::operator<<] 的有效 [=CppXVII] 代码，
现在非良构。

[codeblock]
std::cout << u"text";           // [:en] previously formatted the string as a pointer value; \
                                   [:zh_CN] 之前将字符串格式化为一个指针值；
                                // [:en@~] now ill-formed \
                                   [:zh_CN@~] 现在非良构
std::cout << u'X';              // [:en] previously formatted the character as an integer value; \
                                   [:zh_CN] 之前将字符格式化为一个整数值；
                                // [:en@~] now ill-formed \
                                   [:zh_CN@~] 现在非良构
[codeblock:end]

[para:diff] [#fs.class.path]
[?change]
[:en] Return type of filesystem path format observer member functions.
[:zh_CN] 文件系统路径的格式探查成员函数的返回类型。

[?rationale]
[:en] Required for new features.
[:zh_CN] 由新功能特性所要求。

[?effect]
[:en] Valid [=CppXVII] code that depends on the [`u8string()] and
[`generic_u8string()] member functions of [`std::filesystem::path] returning
[`std::string] is not valid in this International Standard.
[:zh_CN] 依赖于 [`std::filesystem::path] 的成员函数 [`u8string()] 和
[`generic_u8string()] 返回 [`std::string] 的有效的 [=CppXVII] 代码在本国际标准中
无效。

[codeblock]
std::filesystem::path p;
std::string s1 = p.u8string();          // [:en] ill-formed; previously well-formed \
                                           [:zh_CN] 非良构；之前是良构的
std::string s2 = p.generic_u8string();  // [:en] ill-formed; previously well-formed \
                                           [:zh_CN] 非良构；之前是良构的
[codeblock:end]
