[section#diff.conv
    [:en] [#conv]: standard conversions
    [:zh_CN] [#conv]：标准转换
]

[para:diff] [#conv.ptr]

[=Change]
[:en] Converting [`void*] to a pointer-to-object type requires casting.
[:zh_CN] 将 [`void*] 转换为对象指针类型需要强制转换。

[codeblock]
char a[10];
void* b=a;
void foo() {
  char* c=b;
}
[codeblock:end]

[:en] ISO C will accept this usage of pointer to void being assigned to a
pointer to object type.
[:zh_CN] ISO C 可以接受这种将 [`void] 指针赋值给指向对象类型的指针的用法。

[:en] [=Cpp] will not.
[:zh_CN] [=Cpp] 则不会。

[=Rationale]
[:en] [=Cpp] tries harder than C to enforce compile-time type safety.
[:zh_CN] [=Cpp] 比 C 更加努力以强制实施编译期的类型安全性。

[=Effect]
[:en] Deletion of semantically well-defined feature.
[:zh_CN] 删除了有良好定义语义的功能特性。

[=Difficulty]
[:en] Could be automated.
[:zh_CN] 可以自动化。

[:en] Violations will be diagnosed by the [=Cpp] translator.
[:zh_CN] 规则违反可以被 [=Cpp] 翻译器诊断出来。

[:en] The fix is to add a cast.
[:zh_CN] 修正方法是添加强制转换。

[:en] For example:
[:zh_CN] 例如：

[codeblock]
char* c = (char*) b;
[codeblock]

[=HowWide]
[:en] This is fairly widely used but it is good programming practice to add the
cast when assigning pointer-to-void to pointer-to-object.
[:zh_CN] 这是相当广泛的用法，但在进行 [`void] 指针向对象指针进行赋值时添加强制
转换是一种良好的编程实践。

[:en] Some ISO C translators will give a warning if the cast is not used.
[:zh_CN] 一些 ISO C 翻译器在没有使用强制转换时会给出警告。
