[section:annex@informative#uaxid
    [:en] Conformance with UAX #31
    [:zh_CN] 遵循 UAX #31
]

[section#uaxid.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en]
This Annex describes the choices made in application of UAX #31
([=lq]Unicode Identifier and Pattern Syntax[=rq]) to [=Cpp] in terms of the
requirements from UAX #31 and how they do or do not apply to [=Cpp].
[:zh_CN]
本附录说明对 [=Cpp] 运用 UAX #31（《Unicode 标识符与模式语法》）时，针对 UAX #31
的规定所做出的选择，以及它们如何适用或不适用于 [=Cpp]。

[:en]
In terms of UAX #31, [=Cpp] conforms by meeting the requirements R1
[=lq]Default Identifiers[=rq] and R4 [=lq]Equivalent Normalized Identifiers[=rq].
[:zh_CN]
根据 UAX #31，[=Cpp] 满足 R1（默认标识符）和 R4（等价的规范化标识符）规定而遵循
UAX #31。

[:en]
The other requirements, also listed below, are either alternatives not taken or
do not apply to [=Cpp].
[:zh_CN]
下文中也列出了其他规定，它们是未选用的替代方式，或者不适用于 [=Cpp] 
[section:end]

[section#uaxid.def
    [:en] R1 Default identifiers
    [:zh_CN] R1 默认标识符
]

[section#uaxid.def.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en]
UAX #31 specifies a default syntax for identifiers based on properties from the
Unicode Character Database, UAX #44.
[:zh_CN]
UAX #31 指定了基于 Unicode 字符数据库（UAX #44）中的性质的默认标识符语法。

[:en]
The general syntax is
[:zh_CN]
一般语法为
[codeblock:notation]
<Identifier> := <Start> <Continue>* (<Medial> <Continue>+)*
[codeblock:end]
[:en@~]
where [`<Start>] has the XID_Start property, [`<Continue>] has the XID_Continue
property, and [`<Medial>] is a list of characters permitted between continue
characters.
[:zh_CN@~]
其中 [`<Start>] 具有 XID_Start 属性，[`<Continue>] 具有 XID_Continue 属性，而
[`<Medial>] 是允许在后续字符之间出现的字符的列表。

[:en]
For [=Cpp] we add the character U+005F, LOW LINE, or [`_], to the set of
permitted [`<Start>] characters, the [`<Medial>] set is empty, and the
[`<Continue>] characters are unmodified.
[:zh_CN]
对于 [=Cpp]，我们将字符 U+005F, LOW LINE，或 [`_] 加入到允许的 [`<Start>] 字符的
集合中，[`<Medial>] 集合为空，且不改动 [`<Continue>] 字符。

[:en]
In the grammer used in UAX #31, this is
[:zh_CN]
这在 UAX #31 所用的文法中为
[codeblock:notation]
<Identifier> := <Start> <Continue>*
<Start> := XID_Start + U+005F
<Continue> := <Start> + XID_Continue
[codeblock:end]

[para]
[:en]
This is described in the [=Cpp] grammar in [#lex.name], where [~identifier] is
formed from [~identifier-start] or [~identifier] followed by
[~identifier-continue].
[:zh_CN]
这在 [#lex.name] 中以 [=Cpp] 文法进行了描述，其中[~标识符]是由[~标识符开头]，或
由[~标识符]跟着[~标识符继续]构成。
[section:end]

[section#uaxid.def.rfmt
    [:en] R1a Restricted format characters
    [:zh_CN] R1a 受限的格式字符
]

[para]
[:en]
If an implementation of UAX #31 wishes to allow format characters such as
ZERO WIDTH JOINER or ZERO WIDTH NON-JOINER it must define a profile allowing
them, or describe precisely which combinations are permitted.
[:zh_CN]
如果 UAX #31 的实现希望允许如 ZERO WIDTH JOINER 或 ZERO WIDTH NON-JOINER 这样的
格式字符，则它必须定义一种允许它们的属性，或者确切描述允许哪些组合。

[para]
[:en]
[=Cpp] does not allow format characters in identifiers, so this does not apply.
[:zh_CN]
[=Cpp] 并不允许标识符中的格式字符，因此这条不适用。
[section:end]

[section#uaxid.def.stable
    [:en] R1b Stable identifiers
    [:zh_CN] R1a 稳定标识符
]

[para]
[:en]
An implementation of UAX #31 may choose to guarantee
that identifiers are stable across versions of the Unicode Standard.
[:zh_CN]
UAX #31 的实现可以选择保证标识符在各个 Unicode 标准中保持稳定。

[:en]
Once a string qualifies as an identifier it does so in all future versions.
[:zh_CN]
一旦字符串被标明为标识符，则在所有未来版本中都如此。

[para]
[:en]
[=Cpp] does not make this guarantee, except to the extent that UAX #31
guarantees the stability of the XID_Start and XID_Continue properties.
[:zh_CN]
除了 UAX #31 保证 XID_Start 和 XID_Continue 属性的稳定性之外，[=Cpp] 并不做出
这种保证。
[section:end]

[section:end]

[section#uaxid.immutable
    [:en] R2 Immutable identifiers
    [:zh_CN] R2 不可变标识符
]

[para]
[:en]
An implementation may choose to guarantee that the set of identifiers will never
change by fixing the set of code points allowed in identifiers forever.
[:zh_CN]
实现可以通过永远固定标识符中允许的代码点集合，来选择保证标识符的集合永不改变。

[para]
[:en]
[=Cpp] does not choose to make this guarantee.
[:zh_CN]
[=Cpp] 并不选择做出这种保证。

[:en]
As scripts are added to Unicode, additional characters in those scripts may
become available for use in identifiers.
[:zh_CN]
随着 Unicode 添加新文字，这些文字中的新字符可能成为标识符中可用的字符。
[section:end]

[section#uaxid.pattern
    [:en] R3 Pattern_White_Space and Pattern_Syntax characters
    [:zh_CN] R3 Pattern_White_Space 和 Pattern_Syntax 字符
]

[para]
[:en]
UAX #31 describes how languages that use or interpret patterns of characters,
such as regular expressions or number formats, may describe that syntax with
Unicode properties.
[:zh_CN]
UAX #31 描述各个使用或解读如正则表达式或数值格式这样的字符模式的语言，如何以
Unicode 属性描述其语法。

[para]
[:en]
[=Cpp] does not do this as part of the language,
deferring to library components for such usage of patterns.
[:zh_CN]
[=Cpp] 并不在语言中这样做，而是延迟给程序库组件对模式的这种用法。

[:en]
This requirement does not apply to [=Cpp].
[:zh_CN]
这条规定不适用于 [=Cpp]。
[section:end]

[section#uaxid.eqn
    [:en] R4 Equivalent nomralized identifiers
    [:zh_CN] R4 等价的规范标识符
]

[para]
[:en]
UAX #31 requires that implementations describe
how identifiers are compared and considered equivalent.
[:zh_CN]
UAX #31 要求实现描述标识符如何进行比较和认为互相等价。

[para]
[:en]
[=Cpp] requires that identifiers be in Normalization Form C and
therefore identifiers that compare the same under NFC are equivalent.
[:zh_CN]
[=Cpp] 要求标识符具有规范形式 C，因而在 NFC 中比较为相同的标识符互相等价。

[:en]
This is described in [#lex.name].
[:zh_CN]
[#lex.name] 中描述了这点。
[section:end]

[section#uaxid.eqci
    [:en] R5 Equivalent case-insensitive identifiers
    [:zh_CN] R5 等价的大小写不敏感标识符
]

[para]
[:en]
[=Cpp] considers case to be significant in identifier comparison, and
does not do any case folding.
[:zh_CN]
[=Cpp] 认为标识符比较中的大小写是重要的，且不进行任何大小写合并。

[:en]
This requirement does not apply to [=Cpp].
[:zh_CN]
这条规定不适用于 [=Cpp]。
[section:end]

[section#uaxid.filter
    [:en] R6 Filtered normalized identifiers
    [:zh_CN] R6 过滤的规范标识符
]

[para]
[:en]
If any characters are excluded from normalization,
UAX #31 requires a precise specification of those exclusions.
[:zh_CN]
如果规范化中排除了任何字符，UAX #31 要求严格说明这些排除。

[para]
[:en]
[=Cpp] does not make any such exclusions.
[:zh_CN]
[=Cpp] 未作出任何这种排除。
[section:end]

[section#uaxid.filterci
    [:en] R7 Filtered case-insensitive identifiers
    [:zh_CN] R7 过滤的大小写不敏感标识符
]

[para]
[:en]
[=Cpp] identifiers are case sensitive, and therefore this requirement does not
apply.
[:zh_CN]
[=Cpp] 标识符是大小写敏感的，因此这条规定不适用。
[section:end]

[section#uaxid.hashtag
    [:en] R8 Hashtag identifiers
    [:zh_CN] R8 散列标签标识符
]

[para]
[:en]
There are no hashtags in [=Cpp], so this requirement does not apply.
[:zh_CN]
[=Cpp] 中没有散列标签，因此这条规定不适用。
[section:end]
