[section#sort.heap
    [`sort_heap]
]

[%@library sort_heap]
[codeblock:declaration]
template<class RandomAccessIterator>
  constexpr void sort_heap(RandomAccessIterator first, RandomAccessIterator last);

template<class RandomAccessIterator, class Compare>
  constexpr void sort_heap(RandomAccessIterator first, RandomAccessIterator last,
                           Compare comp);

template<random_access_iterator I, sentinel_for<I> S, class Comp = ranges::less,
         class Proj = identity>
  requires sortable<I, Comp, Proj>
  constexpr I
    ranges::sort_heap(I first, S last, Comp comp = {}, Proj proj = {});
template<random_access_range R, class Comp = ranges::less, class Proj = identity>
  requires sortable<iterator_t<R>, Comp, Proj>
  constexpr safe_iterator_t<R>
    ranges::sort_heap(R&& r, Comp comp = {}, Proj proj = {});
[codeblock:end]

[begin:description]
[para]
[:e] Let [`comp] be [`less{}] and [`proj] be [`identity{}] for the overloads
with no parameters by those names.
[:zh_CN] 对于不带有这些名字的形参的重载，令 [`comp] 为 [`less()]，[`proj] 为
[`identity{}]。

[para:requires]
[:en] The range [=range(first,last)] shall be a valid heap with respect to
[`comp] and [`proj].
[:zh_CN] 范围 [=range(first,last)] 应当根据 [`comp] 和 [`proj] 是有效堆。

[:en] For the overloads in namespace [`std], [`RandomAccessIterator] shall meet
the [*Cpp17ValueSwappable] requirements ([#swappable.requirements]) and the type
of [`*first] shall meet the [*Cpp17MoveConstructible]
([#:tab cpp17.moveconstructible]) and [*Cpp17MoveAssignable]
([#:tab cpp17.moveassignable]) requirements.
[:zh_CN] 对于命名空间 [`std] 中的各重载，[`RandomAccessIterator] 应当满足
[*Cpp17ValueSwappable] 的规定（[#swappable.requirements]），并且 [`*first] 的
类型应当满足 [*Cpp17MoveConstructible]（[#:tab cpp17.moveconstructible]）和 
[*Cpp17MoveAssignable]（[#:tab cpp17.moveassignable]）的规定。

[para:effects]
[:en] Sorts elements in the heap [=range(first,last)] with respect to [`comp]
and [`proj].
[:zh_CN] 根据 [`comp] 和 [`proj] 对堆 [=range(first,last)] 中的元素进行排序。

[para:returns]
[:en] [`last] for the overloads in namespace [`ranges].
[:zh_CN] 命名空间 [`ranges] 中的各重载返回 [`last]。

[para:complexity]
[:en] At most [$2N \log N] comparisons, where [$N = [`last - first]], and twice
as many projections.
[:zh_CN] 最多进行 [$2N \log N] 次比较，其中 [$N = [`last - first]]，以及两倍于此
的投射。
[end:description]
