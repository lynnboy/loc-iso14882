[section#alg.ends.with
    [:en] Ends with
    [:zh_CN] 末尾为……
]

[%@lib ends_with]
[codeblock:declaration]
template<[[redoc("`:c>")]]input_iterator I1, [[redoc("`:c>")]]sentinel_for<I1> S1, [[redoc("`:c>")]]input_iterator I2, [[redoc("`:c>")]]sentinel_for<I2> S2,
         class Pred = ranges::equal_to, class Proj1 = identity, class Proj2 = identity>
  requires ([[redoc("`:c>")]]forward_iterator<I1> || [[redoc("`:c>")]]sized_sentinel_for<S1, I1>) &&
           ([[redoc("`:c>")]]forward_iterator<I2> || [[redoc("`:c>")]]sized_sentinel_for<S2, I2>) &&
           [[redoc("`:c>")]]indirectly_comparable<I1, I2, Pred, Proj1, Proj2>
  constexpr bool ranges::ends_with(I1 first1, S1 last1, I2 first2, S2 last2, Pred pred = {},
                                   Proj1 proj1 = {}, Proj2 proj2 = {});
[codeblock:end]

[div:description]
[para]
[:en] Let [`N1] be [`last1 - first1] and [`N2] be [`last2 - first2].
[:zh_CN] 令 [`N1] 为 [`last1 - first1]，[`N2] 为 [`last2 - first2]。

[para:returns]
[:en] [`false] if [$[`N1] < [`N2]], otherwise
[:zh_CN] 当 [$[`N1] < [`N2]] 时返回 [`false]，否则返回
[codeblock]
ranges::equal(std::move(first1) + (N1 - N2), last1, std::move(first2), last2,
              pred, proj1, proj2)
[codeblock:end]
[div:end]

[%@lib ends_with]
[codeblock:declaration]
template<[[redoc("`:c>")]]input_range R1, [[redoc("`:c>")]]input_range R2, class Pred = ranges::equal_to, class Proj1 = identity,
         class Proj2 = identity>
  requires ([[redoc("`:c>")]]forward_range<R1> || [[redoc("`:c>")]]sized_range<R1>) &&
           ([[redoc("`:c>")]]forward_range<R2> || [[redoc("`:c>")]]sized_range<R2>) &&
           [[redoc("`:c>")]]indirectly_comparable<iterator_t<R1>, iterator_t<R2>, Pred, Proj1, Proj2>
  constexpr bool ranges::ends_with(R1&& r1, R2&& r2, Pred pred = {},
                                   Proj1 proj1 = {}, Proj2 proj2 = {});
[codeblock:end]

[div:description]
[para]
[:en] Let [`N1] be [`ranges::distance(r1)] and [`N2] be [`ranges::distance(r2)].
[:zh_CN] 令 [`N1] 为 [`ranges::distance(r1)]，[`N2] 为 [`ranges::distance(r2)]。

[para:returns]
[:en] [`false] if [$[`N1] < [`N2]], otherwise
[:zh_CN] 当 [$[`N1] < [`N2]] 时返回 [`false]，否则返回
[codeblock]
ranges::equal(ranges::drop_view(ranges::ref_view(r1), N1 - N2), r2, pred, proj1, proj2)
[codeblock:end]
[div:end]
