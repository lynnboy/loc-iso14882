[section#alg.all_of
    [:en] All of
    [:zh_CN] 全部……均为……（All Of）
]

[%@library all_of]
[codeblock:declaration]
template<class InputIterator, class Predicate>
  constexpr bool all_of(InputIterator first, InputIterator last, Predicate pred);
template<class ExecutionPolicy, class ForwardIterator, class Predicate>
  bool all_of(ExecutionPolicy&& exec, ForwardIterator first, ForwardIterator last,
              Predicate pred);

namespace ranges {
  template<InputIterator I, Sentinel<I> S, class Proj = identity,
           IndirectUnaryPredicate<projected<I, Proj>> Pred>
    constexpr bool all_of(I first, S last, Pred pred, Proj proj = {});
  template<InputRange R, class Proj = identity,
           IndirectUnaryPredicate<projected<iterator_t<R>, Proj>> Pred>
    constexpr bool all_of(R&& r, Pred pred, Proj proj = {});
}
[codeblock:end]

[enter:description]
[para]
[:en] Let [$E] be [`pred(*i)] and [`invoke(pred, invoke(proj, *i))] for the
overloads in namespace [`std] and [`std::ranges], respectively.
[:zh_CN] 令 [$E] 为 [`pred(*i)] 和 [`invoke(pred, invoke(proj, *i))] 分别在
命名空间 [`std] 和 [`std::ranges] 中找到的重载。

[para:returns]
[:en] [`false] if [$E] is [`false] for some iterator [`i] in the range
[=range(first,last)], and [`true] otherwise.
[:zh_CN] 当在范围 [=range(first,last)] 中的某个迭代器 [`i] 使 [$E] 为 [`false]
时为 [`false]，否则为 [`true]。

[para:complexity]
[:en] At most [`last - first] applications of the predicate and any projection.
[:zh_CN] 最多进行 [`last - first] 次谓词和任何投射的运用。
[exit:description]
