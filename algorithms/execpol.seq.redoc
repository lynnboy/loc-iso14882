[section#execpol.seq
    [:en] Sequenced execution policy
    [:zh_CN] 顺序执行策略
]

[%@lib execution::sequenced_policy]
[codeblock:declaration]
class execution::sequenced_policy { [[redoc("[=unspec]")]] };
[codeblock:end]

[div:description]
[para]
[:en] The class [`execution::sequenced_policy] is an execution policy type used
as a unique type to disambiguate parallel algorithm overloading and require that
a parallel algorithm[=']s execution may not be parallelized.
[:zh_CN] 类 [`execution::sequenced_policy] 是一种执行策略类型，用作在并行算法
重载中进行歧义消解的独有类型，并要求并行算法的执行不能被并行化。

[para]
[:en] During the execution of a parallel algorithm with the
[`execution::sequenced_policy] policy, if the invocation of an element access
function exits via an exception, [`terminate] is invoked ([#except.terminate]).
[:zh_CN] 在具有 [`execution::sequenced_policy] 的并行算法的执行过程中，如果某次
元素访问函数的执行因异常而退出，则调用 [`terminate]（[#except.terminate]）。
[div:end]
