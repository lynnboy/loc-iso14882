[section#alg.transform
    [:en] Transform
    [:zh_CN] 变换
]

[%@library transform]
[codeblock:declaration]
template<class InputIterator, class OutputIterator,
         class UnaryOperation>
  constexpr OutputIterator
    transform(InputIterator first, InputIterator last,
              OutputIterator result, UnaryOperation op);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2,
         class UnaryOperation>
  ForwardIterator2
    transform(ExecutionPolicy&& exec,
              ForwardIterator1 first, ForwardIterator1 last,
              ForwardIterator2 result, UnaryOperation op);

template<class InputIterator1, class InputIterator2,
         class OutputIterator, class BinaryOperation>
  constexpr OutputIterator
    transform(InputIterator1 first1, InputIterator1 last1,
              InputIterator2 first2, OutputIterator result,
              BinaryOperation binary_op);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2,
         class ForwardIterator, class BinaryOperation>
  ForwardIterator
    transform(ExecutionPolicy&& exec,
              ForwardIterator1 first1, ForwardIterator1 last1,
              ForwardIterator2 first2, ForwardIterator result,
              BinaryOperation binary_op);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`op] and [`binary_op] shall not invalidate iterators or subranges, or
modify elements in the ranges
[:zh_CN] [`op] 和 [`binary_op] 不能使以下各范围的迭代器或子范围无效，或对其中的
元素进行改动：

[list]
[item]
[:en@~] [=crange(first1,last1)],
[:zh_CN@~] [=crange(first1,last1)]，
[item]
[:en@~] [=crange(first2,first2 + (last1 - first1))], and
[:zh_CN@~] [=crange(first2,first2 + (last1 - first1))]，以及
[item]
[:en@~] [=crange(result,result + (last1 - first1))].[#:note#fn:$1]
[:zh_CN@~] [=crange(result,result + (last1 - first1))]。[#:note#fn:$1]
[list:end]

[note:foot#fn:$1]
[:en] The use of fully closed ranges is intentional.
[:zh_CN] 此处有意使用了全闭范围。
[note:end]

[para:effects]
[:en] Assigns through every iterator [`i] in the range [=range(result,result +
(last1 - first1))] a new corresponding value equal to
[`op(*(first1 + (i - result)))] or
[`binary_op(*(first1 + (i - result)), *(first2 + (i - result)))].
[:zh_CN] 通过范围 [=range(result,result + (last1 - first1))] 中的每个迭代器 [`i]
，以等于 [`op(*(first1 + (i - result)))] 或
[`binary_op(*(first1 + (i - result)), *(first2 + (i - result)))] 的一个对应值
进行赋值。

[para:returns]
[:en] [`result + (last1 - first1)].
[:zh_CN] [`result + (last1 - first1)]。

[para:complexity]
[:en] Exactly [`last1 - first1] applications of [`op] or [`binary_op].
[:zh_CN] 恰好进行 [`last1 - first1] 次 [`op] 或 [`binary_op] 的运用。

[:en] This requirement also applies to the overload with an [`ExecutionPolicy].
[:zh_CN] 这项规定同样适用于带有 [`ExecutionPolicy] 的重载。

[para:remarks]
[:en] [`result] may be equal to [`first] in case of unary transform, or to
[`first1] or [`first2] in case of binary transform.
[:zh_CN] 在一元变换中 [`result] 可以等于 [`first]，在二元变换中 [`result] 可以
等于 [`first1] 或者 [`first2]。
[exit:description]
