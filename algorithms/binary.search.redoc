[section#binary.search
    [`binary_search]
]

[%@lib binary_search]
[codeblock:declaration]
template<class ForwardIterator, class T>
  constexpr bool
    binary_search(ForwardIterator first, ForwardIterator last,
                  const T& value);

template<class ForwardIterator, class T, class Compare>
  constexpr bool
    binary_search(ForwardIterator first, ForwardIterator last,
                  const T& value, Compare comp);

template<[[redoc("`:c>")]]forward_iterator I, [[redoc("`:c>")]]sentinel_for<I> S, class T, class Proj = identity,
         [[redoc("`:c>")]]indirect_strict_weak_order<const T*, projected<I, Proj>> Comp = ranges::less>
  constexpr bool ranges::binary_search(I first, S last, const T& value, Comp comp = {},
                                       Proj proj = {});
template<[[redoc("`:c>")]]forward_range R, class T, class Proj = identity,
         [[redoc("`:c>")]]indirect_strict_weak_order<const T*, projected<iterator_t<R>, Proj>> Comp =
           ranges::less>
  constexpr bool ranges::binary_search(R&& r, const T& value, Comp comp = {},
                                       Proj proj = {});
[codeblock:end]

[div:description]
[para]
[:en] Let [`comp] be [`less{}] and [`proj] be [`identity{}] for overloads with
no parameters by those names.
[:zh_CN] 对于没有名为 [`comp] 和 [`proj] 的形参的各重载，令 [`comp] 为 [`less{}]
并令 [`proj] 为 [`identity{}]。

[para:expects]
[:en] The elements [`e] of [=range(first,last)] are partitioned with respect to
the expressions [`bool(invoke(comp, invoke(proj, e), value))] and
[`!bool(invoke(comp, value, invoke(proj, e)))].
[:zh_CN] [=range(first,last)] 中的元素 [`e] 根据表达式
[`bool(invoke(comp, invoke(proj, e), value))] 和
[`!bool(invoke(comp, value, invoke(proj, e)))] 已分区。

[:en] Also, for all elements [`e] of [``[first, last)], [`bool(comp(e, value))]
implies [`!bool(comp(value, e))] for the overloads in namespace [`std].
[:zh_CN] 并且，对于命名空间 [`std] 中的各重载，对于 [``[first, last)] 中的所有
元素 [`e]，[`bool(comp(e, value))] 蕴含 [`!bool(comp(value, e))]。

[para:returns]
[:en] [`true] if and only if for some iterator [`i] in the range
[=range(first,last)], [`!bool(invoke(comp, invoke(proj, *i), value)) &&
!bool(invoke(comp, value, invoke(proj, *i)))] is [`true].
[:zh_CN] 当且仅当 [=range(first,last)] 中有某个迭代器 [`i] 使得
[`!bool(invoke(comp, invoke(proj, *i), value)) &&
!bool(invoke(comp, value, invoke(proj, *i)))] 为 [`true] 时返回 [`true]。

[para:complexity]
[:en] At most [$\log_2([`last - first]) + [?bigoh 1]] comparisons and projections.
[:zh_CN] 最多 [$\log_2([`last - first]) + [?bigoh 1]] 次比较和投射。
[div:end]
