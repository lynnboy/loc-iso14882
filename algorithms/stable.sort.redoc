[section#stable.sort
    [`stable_sort]
]

[%@library stable_sort]
[codeblock:declaration]
template<class RandomAccessIterator>
  void stable_sort(RandomAccessIterator first, RandomAccessIterator last);
template<class ExecutionPolicy, class RandomAccessIterator>
  void stable_sort(ExecutionPolicy&& exec,
                   RandomAccessIterator first, RandomAccessIterator last);

template<class RandomAccessIterator, class Compare>
  void stable_sort(RandomAccessIterator first, RandomAccessIterator last,
                   Compare comp);
template<class ExecutionPolicy, class RandomAccessIterator, class Compare>
  void stable_sort(ExecutionPolicy&& exec,
                   RandomAccessIterator first, RandomAccessIterator last,
                   Compare comp);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`RandomAccessIterator] shall satisfy the [`ValueSwappable] requirements
([#swappable.requirements]).
[:zh_CN] [`RandomAccessIterator] 应当符合 [`ValueSwappable] 的规定
（[#swappable.requirements]）。

[:en] The type of [`*first] shall satisfy the [`MoveConstructible]
([#moveconstructible]) and [`MoveAssignable] ([#moveassignable]) requirements.
[:zh_CN] [`*first] 的类型应当符合 [`MoveConstructible]（[#moveconstructible]）和
[`MoveAssignable]（[#moveassignable]）的规定。

[para:effects]
[:en] Sorts the elements in the range [=range(first,last)].
[:zh_CN] 对范围 [=range(first,last)] 中的元素进行排序。

[para:complexity]
[:en] At most [$N \log^2(N)] comparisons, where [$N] = [`last - first], but only
[$N \log N] comparisons if there is enough extra memory.
[:zh_CN] 最多 [$N \log^2(N)] 次比较，其中 [$N] = [`last - first]，但当有足够的
额外内存时仅进行 [$N \log N] 次比较。

[para:remarks]
[:en] Stable ([#algorithm.stable]).
[:zh_CN] 稳定的（[#algorithm.stable]）。
[exit:description]
