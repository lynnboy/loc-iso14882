[section#partial.sum
    [:en] Partial sum
    [:zh_CN] 部分和
]

[%@library partial_sum]
[codeblock:declaration]
template<class InputIterator, class OutputIterator>
  OutputIterator partial_sum(
    InputIterator first, InputIterator last,
    OutputIterator result);
template<class InputIterator, class OutputIterator, class BinaryOperation>
  OutputIterator partial_sum(
    InputIterator first, InputIterator last,
    OutputIterator result, BinaryOperation binary_op);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`InputIterator][=']s value type shall be constructible from the type of
[`*first].
[:zh_CN] [`*first] 的类型应当可以转换为 [`InputIterator] 的值类型。

[:en] The result of the expression [`std::move(acc) + *i] or
[`binary_op(std::move(acc), *i)] shall be implicitly convertible to
[`InputIterator][=']s value type.
[:zh_CN] 表达式 [`std::move(acc) + *i] 或 [`binary_op(std::move(acc), *i)] 的
结果应当可以隐式转换为 [`InputIterator] 的值类型。

[:en] [`acc] shall be writable ([#iterator.requirements.general]) to the
[`result] output iterator.
[:zh_CN] [`acc] 应当可以向 [`result] 输出迭代器中写出
（[#iterator.requirements.general]）。

[:en] In the ranges [=crange(first,last)] and
[=crange(result,result + (last - first))] [`binary_op] shall neither modify
elements nor invalidate iterators or subranges.[#:note#fn:$1]
[:zh_CN] 在范围 [=crange(first,last)] 和
[=crange(result,result + (last - first))] 之中，[`binary_op] 既不能改动任何元素，
也不能使任何迭代器或子范围失效。[#:note#fn:$1]

[note:foot#fn:$1]
[:en] The use of fully closed ranges is intentional.
[:zh_CN] 特意使用全闭合范围。
[note:end]

[para:effects]
[:en] For a non-empty range, the function creates an accumulator [`acc] whose
type is [`InputIterator][=']s value type, initializes it with [`*first], and
assigns the result to [`*result].
[:zh_CN] 对于非空的范围，该函数创建一个累加数 [`acc]，其类型为 [`InputIterator]
的值类型，以 [`*first] 进行初始化，并将结果赋值给 [`*result]。

[:en] For every iterator [`i] in [=range(first + 1,last)] in order, [`acc] is
then modified by [`acc = std::move(acc) + *i] or
[`acc = binary_op(std::move(acc), *i)] and the result is assigned to
[`*(result + (i - first))].
[:zh_CN] 对于范围 [=range(first + 1,last)] 中的每个迭代器 [`i]，依序将 [`acc]
通过 [`acc = std::move(acc) + *i] 或 [`acc = binary_op(std::move(acc), *i)] 进行
改动，并将其结果赋值给 [`*(result + (i - first))]。

[para:returns]
[:en] [`result + (last - first)].
[:zh_CN] [`result + (last - first)]。

[para:complexity]
[:en] Exactly [`(last - first) - 1] applications of the binary operation.
[:zh_CN] 恰好 [`(last - first) - 1] 次对二元运算的应用。

[para:remarks]
[:en] [`result] may be equal to [`first].
[:zh_CN] [`result] 有可能等于 [`first]。
[div:end]
