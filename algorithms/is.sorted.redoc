[section#is.sorted
    [`is_sorted]
]

[%@library is_sorted]
[codeblock:declaration]
template<class ForwardIterator>
  constexpr bool is_sorted(ForwardIterator first, ForwardIterator last);
[codeblock:end]

[enter:description]
[para:returns]
[`is_sorted_until(first, last) == last]
[exit:description]

[%@library is_sorted]
[codeblock:declaration]
template<class ExecutionPolicy, class ForwardIterator>
  bool is_sorted(ExecutionPolicy&& exec,
                 ForwardIterator first, ForwardIterator last);
[codeblock:end]

[enter:description]
[para:returns]
[`is_sorted_until(std::forward<ExecutionPolicy>(exec), first, last) == last]
[exit:description]

[%@library is_sorted]
[codeblock:declaration]
template<class ForwardIterator, class Compare>
  constexpr bool is_sorted(ForwardIterator first, ForwardIterator last,
                           Compare comp);
[codeblock:end]

[enter:description]
[para:returns]
[`is_sorted_until(first, last, comp) == last]
[exit:description]

[%@library is_sorted]
[codeblock:declaration]
template<class ExecutionPolicy, class ForwardIterator, class Compare>
  bool is_sorted(ExecutionPolicy&& exec,
                 ForwardIterator first, ForwardIterator last,
                 Compare comp);
[codeblock:end]

[enter:description]
[para:returns]
[codeblock:notation]
is_sorted_until(std::forward<ExecutionPolicy>(exec), first, last, comp) == last
[codeblock:end]
[exit:description]

[%@library is_sorted_until]
[codeblock:declaration]
template<class ForwardIterator>
  constexpr ForwardIterator
    is_sorted_until(ForwardIterator first, ForwardIterator last);
template<class ExecutionPolicy, class ForwardIterator>
  ForwardIterator
    is_sorted_until(ExecutionPolicy&& exec,
                    ForwardIterator first, ForwardIterator last);

template<class ForwardIterator, class Compare>
  constexpr ForwardIterator
    is_sorted_until(ForwardIterator first, ForwardIterator last,
                    Compare comp);
template<class ExecutionPolicy, class ForwardIterator, class Compare>
  ForwardIterator
    is_sorted_until(ExecutionPolicy&& exec,
                    ForwardIterator first, ForwardIterator last,
                    Compare comp);
[codeblock:end]

[enter:description]
[para:returns]
[:en] If [`distance(first, last) < 2], returns [`last].
[:zh_CN] 如果 [`distance(first, last) < 2]，则返回 [`last]。

[:en] Otherwise, returns the last iterator [`i] in [=crange(first,last)] for
which the range [=range(first,i)] is sorted.
[:zh_CN] 否则，返回 [=crange(first,last)] 中的最后一个使范围 [=range(first,i)]
有序的迭代器 [`i]。

[para:complexity]
[:en] Linear.
[:zh_CN] 线性。
[exit:description]
