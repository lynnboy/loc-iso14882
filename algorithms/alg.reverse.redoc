 -[section#alg.reverse
    [:en] Reverse
    [:zh_CN] 反转
]

[%@library reverse]
[codeblock:declaration]
template<class BidirectionalIterator>
  constexpr void reverse(BidirectionalIterator first, BidirectionalIterator last);
template<class ExecutionPolicy, class BidirectionalIterator>
  void reverse(ExecutionPolicy&& exec,
               BidirectionalIterator first, BidirectionalIterator last);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`BidirectionalIterator] shall satisfy the [*Cpp17ValueSwappable]
requirements ([#swappable.requirements]).
[:zh_CN] [`BidirectionalIterator] 应当满足 [*Cpp17ValueSwappable] 的规定
（[#swappable.requirements]）。

[para:effects]
[:en] For each non-negative integer [`i < (last - first) / 2], applies
[`iter_swap] to all pairs of iterators [`first + i], [`(last - i) - 1].
[:zh_CN] 对于每个非负整数 [`i < (last - first) / 2]，对每一对迭代器 [`first + i]
和 [`(last - i) - 1] 运用 [`iter_swap]。

[para:complexity]
[:en] Exactly [`(last - first)/2] swaps.
[:zh_CN] 恰好进行 [`(last - first)/2] 次交换。
[exit:description]

[%@library reverse_copy]
[codeblock:declaration]
template<class BidirectionalIterator, class OutputIterator>
  constexpr OutputIterator
    reverse_copy(BidirectionalIterator first, BidirectionalIterator last,
                 OutputIterator result);
template<class ExecutionPolicy, class BidirectionalIterator, class ForwardIterator>
  ForwardIterator
    reverse_copy(ExecutionPolicy&& exec,
                 BidirectionalIterator first, BidirectionalIterator last,
                 ForwardIterator result);
[codeblock:end]

[enter:description]
[para:requires]
[:en] The ranges [=range(first,last)] and [=range(result,result+(last - first))]
shall not overlap.
[:zh_CN] 范围 [=range(first,last)] 和 [=range(result,result+(last - first))]
不能有重叠。

[para:effects]
[:en] Copies the range [=range(first,last)] to the range
[=range(result,result + (last - first))] such that for every non-negative
integer [`i < (last - first)] the following assignment takes place:
[`*(result + (last - first) - 1 - i) = *(first + i)].
[:zh_CN] 将范围 [=range(first,last)] 复制到范围
[=range(result,result + (last - first))] 中，其中对于每个非负整数
[`i < (last - first)]，都进行了以下赋值：
[`*(result + (last - first) - 1 - i) = *(first + i)]。

[para:returns]
[:en] [`result + (last - first)].
[:zh_CN] [`result + (last - first)]。

[para:complexity]
[:en] Exactly [`last - first] assignments.
[:zh_CN] 恰好进行 [`last - first] 次赋值。
[exit:description]
