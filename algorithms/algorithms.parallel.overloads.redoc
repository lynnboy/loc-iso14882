[section#algorithms.parallel.overloads
    [:en] [`ExecutionPolicy] algorithm overloads
    [:zh_CN] [`ExecutionPolicy] 的算法重载
]

[para]
[:en] Parallel algorithms are algorithm overloads.
[:zh_CN] 并行算法都是算法的重载。

[:en] Each parallel algorithm overload has an additional function parameter [$P]
of type [`T&&] as the first function parameter, where [`T] is the execution
policy template parameter.
[:zh_CN] 每个并行算法重载都带有一个额外的 [`T&&] 类型的函数形参 [$P] 作为其
第一个函数形参，其中 [`T] 为执行策略模板形参。

[begin:note]
[:en] Not all algorithms have parallel algorithm overloads.
[:zh_CN] 并非所有的算法都有并行算法重载。
[end:note]

[para]
[:en] Unless otherwise specified, the semantics of calling a parallel algorithm
overload are identical to calling the corresponding algorithm overload without
the parameter [$P], using all but the first argument.
[:zh_CN] 除非另有规定，否则调用并行算法重载的语义与调用其对应的没有形参 [$P] 的
算法重载的语义相同，且使用除第一个外的所有实参。

[para]
[:en] Unless otherwise specified, the complexity requirements of a parallel
algorithm overload are relaxed from the complexity requirements of the
corresponding overload without the parameter [$P] as follows:
[:zh_CN] 除非另有规定，否则对并行算法重载的复杂度规定，以如下
方式从其没有 [$P] 形参的对应重载的复杂度规定予以放宽：

[:en] when the guarantee says [=lq]at most [^expr][=rq] or [=lq]exactly [^expr][=rq]
and does not specify the number of assignments or swaps, and [^expr] is not already
expressed with [?bigoh] notation, the complexity of the algorithm shall be [?bigoh[^expr]].
[:zh_CN] 如果其声称保证“最多 [^expr] 次”或“恰好 [^expr] 次”，但未指明是赋值还是
交换的次数，且 [^expr] 尚未以 [?bigoh] 表示法来表示，算法的复杂度应当为 [?bigoh[^expr]]。

[para]
[:en] A parallel algorithm with a template parameter named [`ExecutionPolicy]
shall not participate in overload resolution unless that template parameter
satisfies [*:c execution-policy].
[:zh_CN] 带有名为 [`ExecutionPolicy] 的模板形参的并行算法，除非该模板形参满足
[*:c execution-policy]，否则不能参与重载决议。
