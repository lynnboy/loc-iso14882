[section#alg.random.shuffle
    [:en] Shuffle
    [:zh_CN] 混洗
]

[%@lib shuffle]
[codeblock:declaration]
template<class RandomAccessIterator, class UniformRandomBitGenerator>
  void shuffle(RandomAccessIterator first,
               RandomAccessIterator last,
               UniformRandomBitGenerator&& g);

template<random_access_iterator I, sentinel_for<I> S, class Gen>
  requires permutable<I> &&
           uniform_random_bit_generator<remove_reference_t<Gen>>
  I ranges::shuffle(I first, S last, Gen&& g);
template<random_access_range R, class Gen>
  requires permutable<iterator_t<R>> &&
           uniform_random_bit_generator<remove_reference_t<Gen>>
  safe_iterator_t<R> ranges::shuffle(R&& r, Gen&& g);
[codeblock:end]

[div:description]
[para:expects]
[:en] For the overload in namespace [`std]:
[:zh_CN] 对于命名空间 [`std] 中的重载：

[list]
[item]
[:en] [`RandomAccessIterator] meets the [^:oc ValueSwappable] requirements
([#swappable.requirements]).
[:zh_CN] [`RandomAccessIterator] 满足 [^:oc ValueSwappable] 的规定
（[#swappable.requirements]）。

[item]
[:en] The type [`remove_reference_t<UniformRandomBitGenerator>] meets the
uniform random bit generator ([#rand.req.urng]) requirements.
[:zh_CN] 类型 [`remove_reference_t<UniformRandomBitGenerator>] 满足均匀随机位
生成器（[#rand.req.urng]）的规定。
[list:end]

[para:effects]
[:en] Permutes the elements in the range [=range(first,last)] such that each
possible permutation of those elements has equal probability of appearance.
[:zh_CN] 对范围 [=range(first,last)] 中的元素进行排列，使得这些元素的每个排列都
具有相等的出现概率。

[para:returns]
[:en] [`last] for the overloads in namespace [`ranges].
[:zh_CN] 命名空间 [`ranges] 中的各重载返回 [`last]。

[para:complexity]
[:en] Exactly [`(last - first) - 1] swaps.
[:zh_CN] 恰好进行 [`(last - first) - 1] 次交换。

[para:remarks]
[:en] To the extent that the implementation of this function makes use of random
numbers, the object referenced by [`g] shall serve as the implementation[=']s
source of randomness.
[:zh_CN] 在这个函数使用随机数的方面来说，[`g] 所引用的对象应当作为该实现的随机性
的来源。
[div:end]
