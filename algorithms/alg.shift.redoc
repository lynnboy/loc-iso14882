[section#alg.shift
    [:en] Shift
    [:zh_CN] 移位
]

[%@library shift_left]
[codeblock:declaration]
template<class ForwardIterator>
  constexpr ForwardIterator
    shift_left(ForwardIterator first, ForwardIterator last,
               typename iterator_traits<ForwardIterator>::difference_type n);
template<class ExecutionPolicy, class ForwardIterator>
  ForwardIterator
    shift_left(ExecutionPolicy&& exec, ForwardIterator first, ForwardIterator last,
               typename iterator_traits<ForwardIterator>::difference_type n);
[codeblock:end]

[begin:description]
[para:requires]
[:en] The type of [`*first] shall meet the [*Cpp17MoveAssignable] requirements.
[:zh_CN] [`*first] 的类型应当满足 [*Cpp17MoveAssignable] 的规定。

[para:effects]
[:en] If [`n <= 0] or [`n >= last - first], does nothing.
[:zh_CN] 如果 [`n <= 0] 或 [`n >= last - first]，则不做任何事。

[:en] Otherwise, moves the element from position [`first + n + i] into position
[`first + i] for each non-negative integer [`i < (last - first) - n].
[:zh_CN] 否则，对于每个非负整数 [`i < (last - first) - n]，将位置
[`first + n + i] 的元素移动到位置 [`first + i]。

[:en] In the first overload case, does so in order starting from [`i = 0] and
proceeding to [`i = (last - first) - n - 1].
[:zh_CN] 第一种重载的情况中，以从 [`i = 0] 开始直到
[`i = (last - first) - n - 1] 的顺序进行处理。

[para:returns]
[:en] [`first + (last - first - n)] if [`n] is positive and [`n < last - first],
otherwise [`first] if [`n] is positive, otherwise [`last].
[:zh_CN] 当 [`n] 为正数且 [`n < last - first] 时返回
[`first + (last - first - n)]，否则当 [`n] 为正数时返回 [`first]，否则返回
[`last]。

[para:complexity]
[:en] At most [`(last - first) - n] assignments.
[:zh_CN] 最多 [`(last - first) - n] 次赋值。
[end:description]

[%@library shift_right]
[codeblock:declaration]
template<class ForwardIterator>
  constexpr ForwardIterator
    shift_right(ForwardIterator first, ForwardIterator last,
                typename iterator_traits<ForwardIterator>::difference_type n);
template<class ExecutionPolicy, class ForwardIterator>
  ForwardIterator
    shift_right(ExecutionPolicy&& exec, ForwardIterator first, ForwardIterator last,
                typename iterator_traits<ForwardIterator>::difference_type n);
[codeblock:end]

[begin:description]
[para:requires]
[:en] The type of [`*first] shall meet the [*Cpp17MoveAssignable] requirements.
[:zh_CN] [`*first] 的类型应当满足 [*Cpp17MoveAssignable] 的规定。

[:en] [`ForwardIterator] shall meet the [*Cpp17BidirectionalIterator]
requirements ([#bidirectional.iterators]) or the [*Cpp17ValueSwappable]
requirements.
[:zh_CN] [`ForwardIterator] 应当满足 [*Cpp17BidirectionalIterator] 的规定
（[#bidirectional.iterators]）或 [*Cpp17ValueSwappable] 的规定。

[para:effects]
[:en] If [`n <= 0] or [`n >= last - first], does nothing.
[:zh_CN] 如果 [`n <= 0] 或 [`n >= last - first]，则不做任何事。

[:en] Otherwise, moves the element from position [`first + i] into position
[`first + n + i] for each non-negative integer [`i < (last - first) - n].
[:zh_CN] 否则，对于每个非负整数 [`i < (last - first) - n]，将位置
[`first + i] 的元素移动到位置 [`first + n + i]。

[:en] In the first overload case, if [`ForwardIterator] meets the
[*Cpp17BidirectionalIterator] requirements, does so in order starting from
[`i = (last - first) - n - 1] and proceeding to [`i = 0].
[:zh_CN] 第一种重载的情况中，如果 [`ForwardIterator] 满足
[*Cpp17BidirectionalIterator] 的规定，则以从 [`i = (last - first) - n - 1] 开始
直到 [`i = 0] 的顺序进行处理。

[para:returns]
[:en] [`first + n] if [`n] is positive and [`n < last - first], otherwise
[`last] if [`n] is positive, otherwise [`first].
[:zh_CN] 当 [`n] 为正数且 [`n < last - first] 时返回 [`first + n]，否则当 [`n]
为正数时返回 [`last]，否则返回 [`first]。

[para:complexity]
[:en] At most [`(last - first) - n] assignments or swaps.
[:zh_CN] 最多 [`(last - first) - n] 次赋值或交换。
[end:description]
