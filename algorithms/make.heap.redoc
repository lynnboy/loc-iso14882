[section#make.heap
    [`make_heap]
]

[%@library make_heap]
[codeblock:declaration]
template<class RandomAccessIterator>
  constexpr void make_heap(RandomAccessIterator first, RandomAccessIterator last);

template<class RandomAccessIterator, class Compare>
  constexpr void make_heap(RandomAccessIterator first, RandomAccessIterator last,
                           Compare comp);

template<random_access_iterator I, sentinel_for<I> S, class Comp = ranges::less,
         class Proj = identity>
  requires sortable<I, Comp, Proj>
  constexpr I
    ranges::make_heap(I first, S last, Comp comp = {}, Proj proj = {});
template<random_access_range R, class Comp = ranges::less, class Proj = identity>
  requires sortable<iterator_t<R>, Comp, Proj>
  constexpr safe_iterator_t<R>
    ranges::make_heap(R&& r, Comp comp = {}, Proj proj = {});
[codeblock:end]

[enter:description]
[para]
[:e] Let [`comp] be [`less{}] and [`proj] be [`identity{}] for the overloads
with no parameters by those names.
[:zh_CN] 对于不带有这些名字的形参的重载，令 [`comp] 为 [`less()]，[`proj] 为
[`identity{}]。

[para:requires]
[:en] For the overloads in namespace [`std], the type of [`*first] shall meet
the [*Cpp17MoveConstructible] ([#:tab cpp17.moveconstructible]) and
[*Cpp17MoveAssignable] ([#:tab cpp17.moveassignable]) requirements.
[:zh_CN] 对于命名空间 [`std] 中的各重载，[`*first] 的类型应当满足
[*Cpp17MoveConstructible]（[#:tab cpp17.moveconstructible]）和
[*Cpp17MoveAssignable]（[#:tab cpp17.moveassignable]）的规定。

[para:effects]
[:en] Constructs a heap with respect to [`comp] and [`proj] out of the range
[=range(first,last)].
[:zh_CN] 将范围 [=range(first,last)] 根据 [`comp] 和 [`proj] 做成一个堆。

[para:returns]
[:en] [`last] for the overloads in namespace [`ranges].
[:zh_CN] 命名空间 [`ranges] 中的各重载返回 [`last]。

[para:complexity]
[:en] At most [$3([`last - first])] comparisons and twice as many projections.
[:zh_CN] 最多进行 [$3([`last - first])] 次比较和两倍于此的投射。
[exit:description]
