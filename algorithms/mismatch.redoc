[section#mismatch
    [:en] Mismatch
    [:zh_CN] 查找不匹配
]

[%@library mismatch]
[codeblock:declaration]
template<class InputIterator1, class InputIterator2>
  pair<InputIterator1, InputIterator2>
    mismatch(InputIterator1 first1, InputIterator1 last1,
             InputIterator2 first2);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2>
  pair<ForwardIterator1, ForwardIterator>
    mismatch(ExecutionPolicy&& exec,
             ForwardIterator1 first1, ForwardIterator1 last1,
             ForwardIterator2 first2);

template<class InputIterator1, class InputIterator2,
         class BinaryPredicate>
  pair<InputIterator1, InputIterator2>
    mismatch(InputIterator1 first1, InputIterator1 last1,
             InputIterator2 first2, BinaryPredicate pred);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2,
         class BinaryPredicate>
  pair<ForwardIterator1, ForwardIterator2>
    mismatch(ExecutionPolicy&& exec,
             ForwardIterator1 first1, ForwardIterator1 last1,
             ForwardIterator2 first2, BinaryPredicate pred);

template<class InputIterator1, class InputIterator2>
  pair<InputIterator1, InputIterator2>
    mismatch(InputIterator1 first1, InputIterator1 last1,
             InputIterator2 first2, InputIterator2 last2);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2>
  pair<ForwardIterator1, ForwardIterator2>
    mismatch(ExecutionPolicy&& exec,
             ForwardIterator1 first1, ForwardIterator1 last1,
             ForwardIterator2 first2, ForwardIterator2 last2);

template<class InputIterator1, class InputIterator2,
         class BinaryPredicate>
  pair<InputIterator1, InputIterator2>
    mismatch(InputIterator1 first1, InputIterator1 last1,
             InputIterator2 first2, InputIterator2 last2,
             BinaryPredicate pred);
template<class ExecutionPolicy, class ForwardIterator1, class ForwardIterator2,
         class BinaryPredicate>
  pair<ForwardIterator1, ForwardIterator2>
    mismatch(ExecutionPolicy&& exec,
             ForwardIterator1 first1, ForwardIterator1 last1,
             ForwardIterator2 first2, ForwardIterator2 last2,
             BinaryPredicate pred);
[codeblock:end]

[enter:description]
[para:remarks]
[:en] If [`last2] was not given in the argument list, it denotes
[`first2 + (last1 - first1)] below.
[:zh_CN] 如果实参列表中未给出 [`last2]，则它在下文中代表
[`first2 + (last1 - first1)]。

[para:returns]
[:en] A pair of iterators [`first1 + n] and [`first2 + n], where [`n] is the
smallest integer such that, respectively,
[:zh_CN] 一对迭代器 [`first1 + n] 和 [`first2 + n]，其中 [`n] 为能够分别使得

[list]
[item]
[:en@~] [`!(*(first1 + n) == *(first2 + n))] or
[:zh_CN@~] [`!(*(first1 + n) == *(first2 + n))] 和
[item]
[:en@~] [`pred(*(first1 + n), *(first2 + n)) == false],
[:zh_CN@~] [`pred(*(first1 + n), *(first2 + n)) == false]
[list:end]

[:en@~] or [`min(last1 - first1, last2 - first2)] if no such integer exists.
[:zh_CN@~] 的最小整数，或当不存在这种整数时为
[`min(last1 - first1, last2 - first2)]。

[para:complexity]
[:en] At most [`min(last1 - first1, last2 - first2)] applications of the
corresponding predicate.
[:zh_CN] 最多进行 [`min(last1 - first1, last2 - first2)] 次相应谓词的运用。
[exit:description]
