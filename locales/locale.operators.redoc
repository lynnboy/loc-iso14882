[section#locale.operators
    [:en] [`locale] operators
    [:zh_CN] [`locale] 的运算符
]

[%@library locale[!operators==]]
[%@library operators==[!locale]]
[codeblock:declaration]
bool operator==(const locale& other) const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`true] if both arguments are the same locale, or one is a copy of the
other, or each has a name and the names are identical; [`false] otherwise.
[:zh_CN] 当两个实参是相同的地域，或者一个是另一个的副本，或者二者均有名字且它们
的名字相同，则为 [`true]；否则为 [`false]。
[exit:description]

[%@library locale[!operator!=]]
[%@library operator!=[!locale]]
[codeblock:declaration]
bool operator!=(const locale& other) const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`!(*this == other)].
[:zh_CN] [`!(*this == other)]。
[exit:description]

[%@library locale[!operator()]]
[%@library operator()[!locale]]
[codeblock:declaration]
template<class charT, class traits, class Allocator>
  bool operator()(const basic_string<charT, traits, Allocator>& s1,
                  const basic_string<charT, traits, Allocator>& s2) const;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two strings according to the [`collate<charT>] facet.
[:zh_CN] 根据 [`collate<charT>] 刻面对两个字符串进行比较。

[para:remarks]
[:en] This member operator template (and therefore [`locale] itself) satisfies
requirements for a comparator predicate template argument ([#algorithms])
applied to strings.
[:zh_CN] 这个成员运算符模板（以及 [`locale] 自身）满足对适用于字符串的比较器谓词
模板实参的规定（[#algorithms]）。

[para:returns]
[codeblock:notation]
use_facet<collate<charT>>(*this).compare(s1.data(), s1.data() + s1.size(),
                                         s2.data(), s2.data() + s2.size()) < 0
[codeblock:end]

[para]
[enter:example]
[:en] A vector of strings [`v] can be collated according to collation rules in
locale [`loc] simply by ([#alg.sort], [#vector]):
[:zh_CN] 字符串的 vector [`v] 可以简单地通过以下代码来根据地域 [`loc] 中的校排
规则进行加派·校排（[#alg.sort]，[#vector]）：

[codeblock]
std::sort(v.begin(), v.end(), loc);
[codeblock:end]
[exit:example]
[exit:description]
