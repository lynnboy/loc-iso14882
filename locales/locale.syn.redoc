[section#locale.syn
    [:en] Header [`<locale>] synopsis
    [:zh_CN] 头文件 [`<locale>] 纲要
]

[%@header locale]
[codeblock:synopsis]
namespace std {
  // [:en] [#locale], locale
  // [|:zh_CN] [#locale]，地域
  class locale;
  template<class Facet> const Facet& use_facet(const locale&);
  template<class Facet> bool         has_facet(const locale&) noexcept;

  // [:en] [#locale.convenience], convenience interfaces
  // [|:zh_CN] [#locale.convenience]，便利接口
  template<class charT> bool isspace (charT c, const locale& loc);
  template<class charT> bool isprint (charT c, const locale& loc);
  template<class charT> bool iscntrl (charT c, const locale& loc);
  template<class charT> bool isupper (charT c, const locale& loc);
  template<class charT> bool islower (charT c, const locale& loc);
  template<class charT> bool isalpha (charT c, const locale& loc);
  template<class charT> bool isdigit (charT c, const locale& loc);
  template<class charT> bool ispunct (charT c, const locale& loc);
  template<class charT> bool isxdigit(charT c, const locale& loc);
  template<class charT> bool isalnum (charT c, const locale& loc);
  template<class charT> bool isgraph (charT c, const locale& loc);
  template<class charT> bool isblank (charT c, const locale& loc);
  template<class charT> charT toupper(charT c, const locale& loc);
  template<class charT> charT tolower(charT c, const locale& loc);

  // [:en] [#category.ctype], ctype
  // [|:zh_CN] [#category.ctype]，ctype
  class ctype_base;
  template<class charT> class ctype;
  template<>            class ctype<char>;     // [:en] specialization
                                                // [|:zh_CN] 特化式
  template<class charT> class ctype_byname;
  class codecvt_base;
  template<class internT, class externT, class stateT> class codecvt;
  template<class internT, class externT, class stateT> class codecvt_byname;

  // [:en] [#category.numeric], numeric
  // [|:zh_CN] [#category.numeric]，数值
  template<class charT, class InputIterator = istreambuf_iterator<charT>>
    class num_get;
  template<class charT, class OutputIterator = ostreambuf_iterator<charT>>
    class num_put;
  template<class charT>
    class numpunct;
  template<class charT>
    class numpunct_byname;

  // [:en] [#category.collate], collation
  // [|:zh_CN] [#category.collate]，校排
  template<class charT> class collate;
  template<class charT> class collate_byname;

  // [:en] [#category.time], date and time
  // [|:zh_CN] [#category.time]，日期与时间
  class time_base;
  template<class charT, class InputIterator = istreambuf_iterator<charT>>
    class time_get;
  template<class charT, class InputIterator = istreambuf_iterator<charT>>
    class time_get_byname;
  template<class charT, class OutputIterator = ostreambuf_iterator<charT>>
    class time_put;
  template<class charT, class OutputIterator = ostreambuf_iterator<charT>>
    class time_put_byname;

  // [:en] [#category.monetary], money
  // [|:zh_CN] [#category.monetary]，货币
  class money_base;
  template<class charT, class InputIterator = istreambuf_iterator<charT>>
    class money_get;
  template<class charT, class OutputIterator = ostreambuf_iterator<charT>>
    class money_put;
  template<class charT, bool Intl = false>
    class moneypunct;
  template<class charT, bool Intl = false>
    class moneypunct_byname;

  // [:en] [#category.messages], message retrieval
  // [|:zh_CN] [#category.messages]，消息检索
  class messages_base;
  template<class charT> class messages;
  template<class charT> class messages_byname;
}
[codeblock:end]

[para]
[:en]
The header [`<locale>] defines classes and declares functions that encapsulate
and manipulate the information peculiar to a locale.[#:note#fn:$section.1]
[:zh_CN]
头文件 [`<locale>] 定义了一些类并声明了一些函数，用以封装和操纵地域所特有的信息。
[#:note#fn:$section.1]

[note:foot#fn:$section.1]
[:en]
In this subclause, the type name [`struct tm] is an incomplete type that is
defined in [%@header ctime][`<ctime>].
[:zh_CN]
在本子条款中，类型名 [`struct tm] 是在 [%@header ctime][`<ctime>] 中所定义的
不完整类型。
[note:end]
