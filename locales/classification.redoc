[section#classification
    [:en] Character classification
    [:zh_CN] 字符分类
]

[%@library isspace]
[%@library isprint]
[%@library iscntrl]
[%@library isupper]
[%@library islower]
[%@library isalpha]
[%@library isdigit]
[%@library ispunct]
[%@library isxdigit]
[%@library isalnum]
[%@library isgraph]
[%@library isblank]
[codeblock:declaration]
template<class charT> bool isspace (charT c, const locale& loc);
template<class charT> bool isprint (charT c, const locale& loc);
template<class charT> bool iscntrl (charT c, const locale& loc);
template<class charT> bool isupper (charT c, const locale& loc);
template<class charT> bool islower (charT c, const locale& loc);
template<class charT> bool isalpha (charT c, const locale& loc);
template<class charT> bool isdigit (charT c, const locale& loc);
template<class charT> bool ispunct (charT c, const locale& loc);
template<class charT> bool isxdigit(charT c, const locale& loc);
template<class charT> bool isalnum (charT c, const locale& loc);
template<class charT> bool isgraph (charT c, const locale& loc);
template<class charT> bool isblank (charT c, const locale& loc);
[codeblock:end]

[para]
[:en] Each of these functions [`is[*F]] returns the result of the expression:
[:zh_CN] 这些函数中的每一个，[`is[*F]]，返回以下表达式的结果：

[codeblock:notation [!:var F] ]
use_facet< ctype<charT>>(loc).is(ctype_base::[*F], c)
[codeblock:end]

[:en@~] where [`[*F]] is the [`ctype_base::mask] value corresponding to that
function ([#category.ctype]).[#:note#fn:$1]
[:zh_CN@~] 其中 [`[*F]] 为对应于该函数的 [`ctype_base::mask] 值
（[#category.ctype]）。[#:note#fn:$1]

[note:foot#fn:$1]
[:en]
When used in a loop, it is faster to cache the [`ctype<>] facet and use it
directly, or use the vector form of [`ctype<>::is].
[:zh_CN]
当被用在循环中时，将 [`ctype<>] 刻面缓存并直接使用，或使用 [`ctype<>::is] 的向量
形式将会更快。
[note:end]
