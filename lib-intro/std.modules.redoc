[section#std.modules
    [:en] Modules
    [:zh_CN] 模块
]

[para]
[:en] The [=Cpp] standard library provides the following [+[=Cpp] library modules].
[:zh_CN] [=Cpp] 标准程序库提供下列 [+[=Cpp] 程序库模块]。

[para]
[:en] The named module [`std] exports declarations in namespace [`std] that are
provided by the importable [=Cpp] library headers ([#:tab#headers.cpp] or the
subset provided by a freestanding implementation) and the [=Cpp] headers for
C library facilities ([#:tab#headers.cpp.c]).
[:zh_CN] 具名模块 [`std] 导出可导入的 [=Cpp] 程序库头文件（[#:tab#headers.cpp]，
或自立式实现所提供的子集）和 C 程序库设施的 [=Cpp] 头文件（[#:tab#headers.cpp.c]）
所提供的命名空间 [`std] 中的声明式。

[:en] It additionally exports declarations in the global namespace for the
storage allocation and deallocation functions that are provided by
[?libheader@ref new].
[:zh_CN] 它还导出 [?libheader@ref new] 所提供的全局命名空间中的存储分配和回收
函数的声明式。

[para]
[:en] The named module [`std.compat] exports the same declarations as the named
module [`std], and additionally exports declarations in the global namespace
corresponding to the declarations in namespace [`std] that are provided by
the [=Cpp] headers for C library facilities ([#:tab#headers.cpp.c]).
[:zh_CN] 具名模块 [`std.compat] 导出与具名模块 [`std] 相同的声明式，还导出对应于
C 程序库设施的 [=Cpp] 头文件（[#:tab#headers.cpp.c]）所提供的命名空间 [`std]
中的声明式的全局命名空间中的声明式。

[para]
[:en] It is unspecified to which module a declaration in the standard library
is attached.
[:zh_CN] 标准程序库中的声明式附属于哪个模块是未指明的。

[begin:note]
[:en] Implementations are required to ensure that mixing [`#include] and
[`import] does not result in conflicting attachments ([#basic.link]).
[:zh_CN] 要求各实现确保混合使用 [`#include] 和 [`import] 不会造成附属冲突
（[#basic.link]）。
[end:note]

[para:recommended:~]
[:en] Implementations should ensure such attachments do not preclude
further evolution or decomposition of the standard library modules.
[:zh_CN] 各实现最好确保这些附属关系不会妨碍标准程序库模块的进一步演化或拆分。

[para]
[:en] A declaration in the standard library denotes the same entity regardless
of whether it was made reachable through including a header, importing a header
unit, or importing a [=Cpp] library module.
[:zh_CN] 标准程序库中的声明式，无论它是通过包含头文件，导入头文件，还是通过导入
[=Cpp] 程序库模块使其可达，均代表相同实体。

[para:recommended]
[:en] Implementations should avoid exporting any other declarations
from the [=Cpp] library modules.
[:zh_CN] 各实现最好避免从 [=Cpp] 程序库模块导出任何其他声明式。

[para:~]
[begin:note]
[:en] Like all named modules, the [=Cpp] library modules do not make macros
visible ([#module.import]), such as [`assert] ([#cassert.syn]), [`errno]
([#cerrno.syn]), [`offsetof] ([#cstddef.syn]), and [`va_arg] ([#cstdarg.syn]).
[:zh_CN] 与所有具名模块相似，[=Cpp] 程序库模块并不使宏可见（[#module.import]），
比如 [`assert]（[#cassert.syn]），[`errno]（[#cerrno.syn]），[`offsetof]
（[#cstddef.syn]），以及 [`va_arg]（[#cstdarg.syn]）。
[end:note]
