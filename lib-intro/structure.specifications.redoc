[section#structure.specifications
    [:en] Detailed specifications
    [:zh_CN] 详细规范
]

[para]
[:en]
The detailed specifications each contain the following elements:
[:zh_CN]
详细规范中各自包含下列要素：

[list]
[item]
[:en] name and brief description
[:zh_CN] 名字和简要说明
[item]
[:en] synopsis (class definition or function declaration, as appropriate)
[:zh_CN] 纲要（类定义式或函数声明式，视其情况）
[item]
[:en] restrictions on template arguments, if any
[:zh_CN] 对模板实参（如果有）的限制条件
[item]
[:en] description of class invariants
[:zh_CN] 对类不变式的说明
[item]
[:en] description of function semantics
[:zh_CN] 对函数语义的说明
[list:end]

[para]
[:en]
Descriptions of class member functions follow the order (as appropriate):
[#:note#fn:$1]
[:zh_CN]
对类成员函数的说明遵循如下顺序（视其情况）：[#:note#fn:$1]

[note:foot#fn:$1]
[:en]
To save space, items that do not apply to a class are omitted.
[:zh_CN]
为节省空间，并不适用于某个类的条目将被省略。

[:en]
For example, if a class does not specify any comparison functions, there will be
no [=lq]Comparison functions[=rq] subclause.
[:zh_CN]
例如，若某个类并未指定任何比较函数，则将没有“比较函数”子条款。
[note:end]

[list]
[item]
[:en] constructor(s) and destructor
[:zh_CN] 构造函数和析构函数
[item]
[:en] copying, moving & assignment functions
[:zh_CN] 复制、移动和赋值函数
[item]
[:en] comparison functions
[:zh_CN] 比较函数
[item]
[:en] modifier functions
[:zh_CN] 改动函数
[item]
[:en] observer functions
[:zh_CN] 探察函数
[item]
[:en] operators and other non-member functions
[:zh_CN] 运算符和其他非成员函数
[list:end]

[para]
[:en]
Descriptions of function semantics contain the following elements (as
appropriate):[#:note#fn:$2]
[:zh_CN]
对函数语义的说明中包含下列要素（视其情况）：[#:note#fn:$2]

[note:foot#fn:$2]
[:en]
To save space, elements that do not apply to a function are omitted.
[:zh_CN]
为节省空间，并不适用于某一函数的条目将被省略。

[:en]
For example, if a function specifies no preconditions, there will be no
[=expects] element.
[:zh_CN]
例如，若某函数并未指定任何前条件，则将没有 [=expects] 条目。
[note:end]

[list]
[item:requires]
[:en] the preconditions for calling the function.
[:zh_CN] 调用该函数的前条件。

[item:constraints]
[:en] the conditions for the function[=']s participation in overload resolution
([#over.match]).
[:zh_CN] 该函数参与重载决议的条件（[#over.match]）。
[begin:note]
[:en] Failure to meet such a condition results in the function[=']s silent
non-viability.
[:zh_CN] 无法满足这种条件将导致该函数沉默地变为不可行。
[end:note]
[begin:example]
[:en] An implementation might express such a condition via a
[~constraint-expression] ([#temp.constr.decl]).
[:zh_CN] 实现可能通过[~约束表达式]来表达这种条件（[#temp.constr.decl]）。
[end:example]

[item:mandates]
[:en] the conditions that, if not met, render the program ill-formed.
[:zh_CN] 如果无法满足这些条件，将使程序成为非良构。
[begin:example]
[:en] An implementation might express such a condition via a
[~constraint-expression] in a [~static_assert-declaration] ([#dcl.dcl]).
[:zh_CN] 实现可能通过在 [~static_assert-声明式]（[#dcl.dcl]）中的[~约束表达式]来
表达这种条件。
[:en] If the diagnostic is to be emitted only after the function has been
selected by overload resolution, an implementation might express such a
condition via a [~constraint-expression] ([#temp.constr.decl]) and also define
the function as deleted.
[:zh_CN] 如果需要仅在函数被重载决议选择后给出诊断，则实现可以通过[~约束表达式]来
表达这种条件（[#temp.constr.decl]），并同时将函数定义为弃置的。
[end:example]

[item:expects]
[:en] the conditions (sometimes termed preconditions) that the function assumes
to hold whenever it is called.
[:zh_CN] 函数假定每当其被调用时都满足的条件（有时称为前条件）。

[item:effects]
[:en] the actions performed by the function.
[:zh_CN] 该函数实施的动作。

[item:sync]
[:en] the synchronization operations ([#intro.multithread]) applicable to the
function.
[:zh_CN] 适用于该函数的同步操作（[#intro.multithread]）。

[item:ensures]
[:en] the conditions (sometimes temred observable results or postconditions)
established by the function.
[:zh_CN] 该函数所建立的条件（有时被称为可观察结果或后条件）。

[item:returns]
[:en] a description of the value(s) returned by the function.
[:zh_CN] 对该函数所返回的值的说明。

[item:throws]
[:en] any exceptions thrown by the function, and the conditions that would cause
the exception.
[:zh_CN] 该函数所抛出的任何异常，以及可能造成异常的条件。

[item:complexity]
[:en] the time and/or space complexity of the function.
[:zh_CN] 该函数的时间和/或空间复杂度。

[item:remarks]
[:en] additional semantic constraints on the function.
[:zh_CN] 该函数的其他语义约束。

[item:errors]
[:en] the error conditions for error codes reported by the function.
[:zh_CN] 由该函数报告的错误号码的错误条件。
[list:end]

[para]
[:en]
Whenever the [?Fundesc Effects] element specifies that the semantics of some
function [`F] are [+:% Equivalent to] some code sequence, then the various
elements are interpreted as follows.
[:zh_CN]
一旦 [?Fundesc Effects] 要素中指出某个函数 [`F] 的语义[+:% 等价于]某个代码序列，
则各个要素的解释规则如下。

[:en]
If [`F][=']s semantics specifies any [?Fundesc Constraints] or
[?Fundesc Mandates] elements, then those requirements are logically imposed
prior to the [+:% equivalent-to] semantics.
[:zh_CN]
若 [`F] 的语义指定了 [?Fundesc 约束] 或 [?Fundesc 必需] 要素，则此要求在逻辑上
先于其[+:% 等价于]语义进行。

[:en]
Next, the semantics of the code sequence are determined by the
[?Fundesc Constraints], [?Fundesc Mandates], [?Fundesc Expects],
[?Fundesc Effects], [?Fundesc Synchronization], [?Fundesc Ensures],
[?Fundesc Returns], [?Fundesc Throws], [?Fundesc Complexity], [?Fundesc Remarks],
and [?Fundesc Errors] specified for the function invocations contained in the
code sequence.
[:zh_CN]
然后，根据代码序列中包含的各个函数调用所指定的 [?Fundesc 约束]、[?Fundesc 必需]、
[?Fundesc 预期]、[?Fundesc 效果]、[?Fundesc 同步]、[?Fundesc 保证]、
[?Fundesc 返回]、[?Fundesc 抛出]、[?Fundesc 复杂度]、[?Fundesc 注解]、和
[?Fundesc 错误] 来确定代码序列的语义。

[:en]
The value returned from [`F] is specified by [`F][=']s [?Fundesc Returns]
element, or if [`F] has no [?Fundesc Returns] element, a non-[`void] return from
[`F] is specified by the [`return] statements ([#stmt.return]) in the code
sequence.
[:zh_CN]
[`F] 的返回值由 [`F] 的 [?Fundesc 返回] 要素所指定，或当 [`F] 没有
[?Fundesc 返回] 要素时，[`F] 的非-[`void] 返回值由其代码序列中的 [`returns] 语句
（[#stmt.return]）指定。

[:en]
If [`F][=']s semantics contains a [?Fundesc Throws], [?Fundesc Ensures], or
[?Fundesc Complexity] element, then that supersedes any occurrences of that
element in the code sequence.
[:zh_CN]
如果 [`F] 的语义包含 [?Fundesc 抛出]、[?Fundesc 保证] 或 [?Fundesc 复杂度] 要素，
则它代替代码序列中所出现的任何这些要素。

[para]
[:en]
For non-reserved replacement and handler functions, [#language.support]
specifies two behaviors for the functions in question: their required and
default behavior.
[:zh_CN]
对于非保留的替代和处理函数，[#language.support] 中指定了这种函数的两种行为：
它们的预期和缺省行为。

[:en]
The [+default behavior[%behavior[!default]]] describes a function definition
provided by the implementation.
[:zh_CN]
[+缺省行为[%行为[!缺省～]]]描述由实现提供的函数定义。

[:en]
The [+required behavior[%behavior[!required]]] describes the semantics of a
function definition provided by either the implementation or a [=Cpp] program.
[:zh_CN]
[+预期行为[%行为[!预期～]]]描述由实现或 [=Cpp] 程序提供的函数定义式的语义。

[:en]
Where no distinction is explicitly made in the description, the behavior
described is the required behavior.
[:zh_CN]
当在描述中没有明确说明其区别时，所描述的行为就是其预期行为。

[para]
[:en]
If the formulation of a complexity requirement calls for a negative number of
operations, the actual requirement is zero operations.[#:note#fn:$3]
[:zh_CN]
若复杂度规定的公式导致负数次的操作，则其实际规定是零个操作。[#:note#fn:$3]

[note:foot#fn:$3]
[:en]
This simplifies the presentation of complexity requirements in some cases.
[:zh_CN]
这在某些情况下简化了复杂度规定的陈述。
[note:end]

[para]
[:en]
Complexity requirements specified in the library clauses are upper bounds,
and implementations that provide better complexity guarantees meet the
requirements.
[:zh_CN]
程序库条款中所指定的复杂度规定是其上限，而提供更好复杂度的实现保证满足这些规定。

[para]
[:en]
Error conditions specify conditions where a function may fail.
[:zh_CN]
错误条件指出函数在何种条件下会失败。

[:en]
The conditions are listed, together with a suitable explanation, as the [`enum
class errc] constants ([#syserr]).
[:zh_CN]
各种条件以及适当的解释，均以 [`enum class errc] 常量（[#syserr]）的形式列出。
