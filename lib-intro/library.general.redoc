[section#library.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en]
This Clause describes the contents of the [+[=Cpp] standard library[%library
[![=Cpp] standard]]], how a well-formed [=Cpp] program makes use of the library,
and how a conforming implementation may provide the entities in the library.
[:zh_CN]
本章描述了 [+[=Cpp] 标准程序库[%]] [%程序库[![=Cpp] 标准～]] 的内容，良构 [=Cpp]
程序如何使用这个程序库，以及遵从标准的实现如何提供该程序库中的实体。

[para]
[:en]
The following subclauses describe the definitions ([#definitions]), method of
description ([#description]), and organization ([#organization]) of the library.
[:zh_CN]
以下子条款描述了程序库中的定义（[#definitions]），说明方案（[#description]），
以及组织方式（[#organization]）。

[:en]
[#requirements], [#[=firstlibchapter]] through [#[=lastlibchapter]], and [#depr]
specify the contents of the library, as well as library requirements and
constraints on both well-formed [=Cpp] programs and conforming implementations.
[:zh_CN]
[#requirements]，[#[=firstlibchapter]] 到 [#[=lastlibchapter]]，以及 [#depr]
说明了程序库的内容，以及对于良构的 [=Cpp] 程序和符合标准的实现，程序库对于二者的
规定和约束条件。

[para]
[:en]
Detailed specifications for each of the components in the library are in
[#[=firstlibchapter]][=-][#[=lastlibchapter]], as shown in
[#:tab#library.categories].
[:zh_CN]
[#[=firstlibchapter]] 到 [#[=lastlibchapter]] 是对程序库的各个组件的详细说明，如
[#:tab#library.categories] 所示：

[table:listing@fill=column@shape=?x1#library.categories
    [:en] Library categories
    [:zh_CN] 程序库的类别
    [|
        [:en] Clause
        [:zh_CN] 章节
    ]
    [|
        [:en] Category
        [:zh_CN] 类别
    ]
]
[|] [#support]          [|] [:en] Language support library
                            [:zh_CN] 语言支持库
[|] [#concepts]         [|] [:en] Concepts library
                            [:zh_CN] 概念库
[|] [#diagnostics]      [|] [:en] Diagnostics library
                            [:zh_CN] 诊断库
[|] [#utilities]        [|] [:en] General utilities library
                            [:zh_CN] 通用工具库
[|] [#strings]          [|] [:en] Strings library
                            [:zh_CN] 字符串库
[|] [#containers]       [|] [:en] Containers library
                            [:zh_CN] 容器库
[|] [#iterators]        [|] [:en] Iterators library
                            [:zh_CN] 迭代器库
[|] [#ranges]           [|] [:en] Ranges library
                            [:zh_CN] 范围库
[|] [#algorithms]       [|] [:en] Algorithms library
                            [:zh_CN] 算法库
[|] [#numerics]         [|] [:en] Numerics library
                            [:zh_CN] 数值计算库
[|] [#time]             [|] [:en] Time library
                            [:zh_CN] 时间库
[|] [#localization]     [|] [:en] Localization library
                            [:zh_CN] 本地化库
[|] [#input.output]     [|] [:en] Input/output library
                            [:zh_CN] 输入/输出库
[|] [#re]               [|] [:en] Regular expressions library
                            [:zh_CN] 正则表达式库
[|] [#atomics]          [|] [:en] Atomic operations library
                            [:zh_CN] 原子性操作库
[|] [#thread]           [|] [:en] Thread support library
                            [:zh_CN] 线程支持库
[table:end]

[para]
[:en]
The language support library ([#support]) provides components that are required
by certain parts of the [=Cpp] language, such as memory allocation ([#expr.new],
[#expr.delete]) and exception processing ([#except]).
[:zh_CN]
语言支持库（[#support]）所提供的一些组件，是 [=Cpp] 语言的特定部分所需要的，比如
内存分配（[#expr.new]，[#expr.delete]）和异常处理（[#except]）。

[para]
[:en]
The concepts library ([#concepts]) describes library components that [=Cpp]
programs may use to perform compile-time validation of template arguments and
perform function dispatch based on properties of types.
[:zh_CN]
概念库（[#concepts]）描述 [=Cpp] 程序可以用于实施编译时模板实参的验证，以及实施
基于类型的属性的函数分派的各组件。

[para]
[:en]
The diagnostics library ([#diagnostics]) provides a consistent framework for
reporting errors in a [=Cpp] program, including predefined exception classes.
[:zh_CN]
诊断库（[#diagnostics]）提供了一个一致的错误报告框架，包括一些预定义的异常类。

[para]
[:en]
The general utilities library ([#utilities]) includes components used by other
library elements, such as a predefined storage allocator for dynamic storage
management ([#basic.stc.dynamic]), and components used as infrastructure in
[=Cpp] programs, such as tuples, function wrappers, and time facilities.
[:zh_CN]
通用工具库（[#utilities]）中包括被其他库元素所使用的组件，比如动态存储管理的
预定义存储分配器（[#basic.stc.dynamic]），以及用作 [=Cpp] 程序的基础设施的组件，
比如元组、函数包装器和时间设施。

[para]
[:en]
The strings library ([#strings]) provides support for manipulating text
represented as sequences of type [`char], sequences of type [`char8_t],
sequences of type [`char16_t], sequences of type [`char32_t], sequences of type
[`wchar_t], and sequences of any other character-like type.
[:zh_CN]
字符串库（[#strings]）为处理以 [`char] 类型的序列，[`char8_t] 类型的序列，
[`char16_t] 类型的序列，[`char32_t] 类型的序列，[`wchar_t] 类型的序列，或者其他
字符式类型的序列表示的文本提供支持。

[para]
[:en]
The localization library ([#localization]) provides extended
internationalization support for text processing.
[:zh_CN]
本地化库（[#localization]）为文本处理提供了扩展的国际化支持。

[para]
[:en]
The containers ([#containers]), iterators ([#iterators]), ranges ([#ranges]),
and algorithms ([#algorithms]) libraries provide a [=Cpp] program with access to
a subset of the most widely used algorithms and data structures.
[:zh_CN]
容器库（[#containers]），迭代器库（[#iterators]），范围库（[#ranges]）和算法库
（[#algorithms]）为 [=Cpp] 程序提供了对最广泛使用的算法和数据结构的一个子集的
使用方式。

[para]
[:en]
The numerics library ([#numerics]) provides numeric algorithms and complex
number components that extend support for numeric processing.
[:zh_CN]
数值计算库（[#numerics]）提供的数值算法和复数组件扩展了对数值处理的支持。

[:en]
The [`valarray] component provides support for [$n]-at-a-time processing,
potentially implemented as parallel operations on platforms that support such
processing.
[:zh_CN]
[`valarray] 组件提供了对一次 [$n] 个数据处理的支持，并在支持这种处理的平台上可以
被潜在地实现为并行操作。

[:en]
The random number component provides facilities for generating pseudo-random
numbers.
[:zh_CN]
随机数组件提供了用于生成伪随机数的设施。

[para]
[:en]
The input/output library ([#input.output]) provides the [`iostream] components
that are the primary mechanism for [=Cpp] program input and output.
[:zh_CN]
输入/输出库（[#input.output]）提供的 [`iostream] 组件是 [=Cpp] 程序输入/输出的
首选机制。

[:en]
They can be used with other elements of the library, particularly strings,
locales, and iterators.
[:zh_CN]
它们可以和程序库中的其他元素，尤其是字符串、地域和迭代器一起使用。

[para]
[:en]
The regular expressions library ([#re]) provides regular expression matching and
searching.
[:zh_CN]
正则表达式库（[#re]）提供了正则表达式匹配和搜索功能。

[para]
[:en]
The atomic operations library ([#atomics]) allows more fine-grained concurrent
access to shared data than is possible with locks.
[:zh_CN]
原子性操作库（[#atomics]）允许对共享数据使用比锁定更加精细的并发访问。

[para]
[:en]
The thread support library ([#thread]) provides components to create and manage
threads, including mutual exclusion and interthread communication.
[:zh_CN]
线程支持库（[#thread]）提供的组件用于创建并管理线程，包括互斥和线程间通信。
