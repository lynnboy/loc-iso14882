[section#res.on.exception.handling
    [:en] Restrictions on exception handling
    [:zh_CN] 对异常处理的限制

[:en]
[%restriction]
[%exception handling[!handler]]
[:zh_CN]
[%限制]
[%异常处理[!处理器]]
]

[para]
[:en]
Any of the functions defined in [%library[![=Cpp] standard]] the [=Cpp] standard
library can report a failure by throwing an exception of a type described in its
[=throws] paragraph, or of a type derived from a type named in the [=throws]
paragraph that would be caught by an exception handler for the base type.
[:zh_CN]
[%程序库[![=Cpp] 标准～]] [=Cpp] 标准程序库中定义的任何函数均可通过抛出其
[=throws] 段落中描述的类型的异常来报告错误，或者抛出派生于其 [=throws] 段落中所
指名的类型的类型，使其能够被这个基类型的异常处理器所捕获。

[para]
[:en]
[%specifications[!C standard library exception]]
Functions from the C standard library shall not throw exceptions[#:fn#$1] except
when such a function calls a program-supplied function that throws an exception.
[#:fn#$2]
[:zh_CN]
[%说明[!C 标准程序库的异常～]]
C 标准程序库中的函数不应抛出异常[#:fn#$1]，除非它调用某个抛出异常的由程序提供的
函数。[#:fn#$2]

[note:foot#$1]
[:en]
That is, the C library functions can all be treated as if they are marked
[`:key noexcept].
[:zh_CN]
就是说，C 程序库函数都可以当作如同标记为 [`:key noexcept] 来对待。

[:en]
This allows implementations to make performance optimizations based on the
absence of exceptions at runtime.
[:zh_CN]
这允许实现基于运行时没有异常而进行性能优化。
[note:end]

[note:foot#$2]
[:en]
The functions [`qsort()] and [`bsearch()] ([#alg.c.library]) meet this condition.
[:zh_CN]
函数 [`qsort()] 和 [`bsearch()]（[#alg.c.library]）符合此条件。
[note:end]

[para]
[:en]
Destructor operations defined in the [=Cpp] standard library shall not throw
exceptions.
[:zh_CN]
[=Cpp] 标准程序库中定义的析构函数操作均不应抛出异常。

[:en]
Every destructor in the [=Cpp] standard library shall behave as if it had a
non-throwing exception specification.
[:zh_CN]
[=Cpp] 标准程序库中的每个析构函数都应当表现为如同带有非抛出异常说明。

[para]
[:en]
Functions defined in the [=Cpp] standard library [%specifications[![=Cpp]]]
that do not have a [=throws] paragraph but do have a potentially-throwing
exception specification may throw [?impldef exceptions thrown by standard
library functions that have a potentially-throwing exception specification]
exceptions.[#:fn]
[:zh_CN]
[=Cpp] 标准程序库中[%说明[![=Cpp]]]定义的没有 [=throws] 段落但带有潜在抛出
异常说明的函数均可抛出[?impldef 带有潜在抛出异常说明的标准程序库函数所抛出的异常]
异常。[#:fn]

[note:foot]
[:en]
In particular, they can report a failure to allocate storage by throwing an
exception of type [`bad_alloc], or a class derived from [`bad_alloc]
([#bad.alloc]).
[:zh_CN]
特别地，它们可以通过抛出类型 [`bad_alloc]，或派生自 [`bad_alloc] 的类的异常来
报告存储分配的失败（[#bad.alloc]）。

[:en]
Implementations should report errors by throwing exceptions of or derived from
the standard exception classes ([#bad.alloc], [#support.exception],
[#std.exceptions]).
[:zh_CN]
实现应当通过抛出标准异常类或其派生类来报告错误（[#bad.alloc]，
[#support.exception]，[#std.exceptions]）。
[note:end]

[para]
[:en]
An implementation may strengthen the exception specification for a non-virtual
function by adding a non-throwing exception specification.
[:zh_CN]
实现可以通过为非虚函数添加无抛出异常说明来对异常说明予以强化。
