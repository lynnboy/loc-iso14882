[section#customization.point.object
    [:en] Customization Point Object types
    [:zh_CN] 定制化点对象类型
]

[para]
[:en]
A [+:% customization point object] is a function object ([#function.objects])
with a literal class type that interacts with program-defined types while
enforcing semantic requirements on that interaction.
[:zh_CN]
[+:% 定制化点对象]是具有字面类型的函数对象（[#function.objects]），它与程序所
定义的类型产生交互，并对这种交互强制实施一些语义规定。

[para]
[:en]
The type of a customization point object, ignoring cv-qualifiers, shall model
[`:c semiregular] ([#concepts.object]).
[:zh_CN]
定制化点对象的类型，忽略 cv 限定符，应当构成 [`:c semiregular]
（[#concepts.object]）。

[para]
[:en]
All instances of a specific customization point object type shall be equal
([#concepts.equality]).
[:zh_CN]
某个特定定制化点对象类型的所有实例都应当相等（[#concepts.equality]）。

[:en]
The effects of invoking different instances of a specific customization point
object type on the same arguments are equivalent.
[:zh_CN]
在相同实参上调用特定定制化点对象类型的不同实例的效果互相等价。

[para]
[:en]
The type [`T] of a customization point object, ignoring [~cv-qualifier]s, shall
model [`[`:c invocable]<T&, Args...>], [`[`:c invocable]<const T&, Args...>],
[`[`:c invocable]<T, Args...>], and [`[`:c invocable]<const T, Args...>]
([#concept.invocable]) when the types in [`Args...] meet the requirements
specified in that customization point object[=']s definition.
[:zh_CN]
某个定制化点对象的类型 [`T]，忽略其 [~cv-限定符]，当 [`Args...] 中的类型满足
该定制化点对象的定义中所指定的规定时，应当构成 [`[`:c invocable]<T&, Args...>]，
[`[`:c invocable]<const T&, Args...>]，[`[`:c invocable]<T, Args...>]，以及
[`[`:c invocable]<const T, Args...>]（[#concept.invocable]）。

[:en]
When the types of [`Args...] do not meet the customization point object[=']s
requirements, [`T] shall not have a function call operator that participates in
overload resolution.
[:zh_CN]
如果 [`Args...] 的各类型并不满足该定制化点对象的规定，则 [`T] 不能带有参与重载
决议的函数调用运算符。

[para]
[:en]
For a given customization point object [`o], let [`p] be a variable initialized
as if by [`auto p = o;].
[:zh_CN]
对于给定的定制化点对象 [`o]，令 [`p] 为如同以 [`auto p = o;] 初始化的变量。

[:en]
Then for any sequence of arguments [`args...], the following expressions have
effects equivalent to [`o(args...)]:
[:zh_CN]
则对于任意实参序列 [`args...]，以下各表达式具有等价于 [`o(args...)] 的效果：

[list]
[item] [`p(args...)]
[item] [`as_const(p)(args...)]
[item] [`std::move(p)(args...)]
[item] [`std::move(as_const(p))(args...)]
[list:end]

[para]
[:en]
Each customization point object type constrains its return type to model a
particular concept.
[:zh_CN]
各个定制化点对象类型对其返回类型施加约束以构成某个特定的概念。
