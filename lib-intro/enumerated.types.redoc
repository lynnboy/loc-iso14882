[section#enumerated.types
    [:en] Enumerated types
    [:zh_CN] 列举类型
]

[para]
[:en]
Several types defined in [#input.output] are [+enumerated types
[%type[!enumerated]]].
[:zh_CN]

[#input.output] 中定义的几个类型是[+列举类型[%类型[!列举～]]]。

[:en]
Each enumerated type may be implemented as an enumeration or as a synonym for
an enumeration.[#:fn]
[:zh_CN]
每个列举类型可以被实现为枚举或枚举的同义词。[#:fn]

[note:foot]
[:en]
Such as an integer type, with constant integer values ([#basic.fundamental]).
[:zh_CN]
比如整数类型，带有常量整数值（[#basic.fundamental]）。
[note:end]

[para]
[:en]
The enumerated type [`[^enumerated]] can be written:
[:zh_CN]
列举类型 [`[^enumerated]] 可以写为：

[codeblock]
enum [[redoc("^>")]]enumerated { [[redoc("[$[`[^V]]_{0}]")]], [[redoc("[$[`[^V]]_{1}]")]], [[redoc("[$[`[^V]]_{2}]")]], [[redoc("[$[`[^V]]_{3}]")]], [[redoc("[$\\ldots]")]] };

inline const [[redoc("^>")]]enumerated [[redoc("[$[`[^C]]_{0}]")]]([[redoc("[$[`[^V]]_{0}]")]]);
inline const [[redoc("^>")]]enumerated [[redoc("[$[`[^C]]_{1}]")]]([[redoc("[$[`[^V]]_{1}]")]]);
inline const [[redoc("^>")]]enumerated [[redoc("[$[`[^C]]_{2}]")]]([[redoc("[$[`[^V]]_{2}]")]]);
inline const [[redoc("^>")]]enumerated [[redoc("[$[`[^C]]_{3}]")]]([[redoc("[$[`[^V]]_{3}]")]]);
  [[redoc("[$\\vdots]")]]
[codeblock:end]

[para]
[:en]
Here, the names [$[`[^C]]_0], [$[`[^C]]_1], etc. represent [+enumerated elements
[%enumerated element]] for this particular enumerated type.
[:zh_CN]
此处，名字 [$[`[^C]]_0]，[$[`[^C]]_1] 等等表示这个特定列举类型的[+列举元素]。

[:en]
[%type[!enumerated]]
All such elements have distinct values.
[:zh_CN]
[%类型[!列举～]]
这些元素都具有不同的值。
