[section:chapter#conv.rval
    [:en] Temporary materialization conversion
    [:zh_CN] 临时对象具体化转换
[%  [:en] conversion[!temporary materialization]
    [:zh_CN] 转换[!临时对象具体化～] ]
]

[para]
[:en]
A prvalue of type [`T] can be converted to an xvalue of type [`T].
[:zh_CN]
[`T] 类型的纯右值可以转换为 [`T] 类型的临限值。

[:en]
This conversion initializes a temporary object ([#class.temporary]) of type [`T]
from the prvalue by evaluating the prvalue with the temporary object as its
result object, and produces an xvalue denoting the temporary object.
[:zh_CN]
这种转换初始化 [`T] 类型的一个临时对象（[#class.temporary]），其中以该临时对象为
结果对象对该纯右值进行求值，并产生一个代表这个临时对象的临限值。

[:en]
[`T] shall be a complete type.
[:zh_CN]
[`T] 应当为完整类型。

[enter:note]
[:en]
If [`T] is a class type (or array thereof), it must have an accessible and
non-deleted destructor; see [#class.dtor].
[:zh_CN]
若 [`T] 为类类型（或其数组），则它必须具有可访问且未弃置的析构函数；参见
[#class.dtor]。
[exit:note]

[enter:example]
[codeblock]
struct X { int n; };
int k = X().n;      // [:en] OK, [`X()] prvalue is converted to xvalue
                    // [:zh_CN|] OK，纯右值 [`X()] 转换为临限值
[codeblock:end]
[exit:example]
