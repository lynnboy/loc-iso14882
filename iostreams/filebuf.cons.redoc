[section#filebuf.cons
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%@library basic_filebuf[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
basic_filebuf();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an object of class [`basic_filebuf<charT, traits>],
initializing the base class with [`basic_streambuf<charT, traits>()]
([#streambuf.cons]).
[:zh_CN] 构造类 [`basic_filebuf<charT, traits>] 的对象，以
[`basic_streambuf<charT, traits>()] 初始化其基类（[#streambuf.cons]）。

[para:ensures]
[:en] [`is_open() == false].
[:zh_CN] [`is_open() == false]。
[exit:description]

[%@library basic_filebuf[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
basic_filebuf(basic_filebuf&& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Move constructs from the rvalue [`rhs].
[:zh_CN] 从右值 [`rhs] 进行移动构造。

[:en] It is [%@impldef whether sequence pointers are copied by
[`basic_filebuf] move constructor] implementation-defined whether the sequence
pointers in [`*this] ([`eback()], [`gptr()], [`egptr()], [`pbase()], [`pptr()],
[`epptr()]) obtain the values which [`rhs] had.
[:zh_CN] [`*this] 中的各序列指针（[`eback()]、[`gptr()]、[`egptr()]、[`pbase()]、
[`pptr()] 和 [`epptr()]）是否获得 [`rhs] 所具有的值是
[%@impldef [`basic_filebuf] 的移动构造函数是否复制各序列指针]由实现定义的。

[:en] Whether they do or not, [`*this] and [`rhs] reference separate buffers (if
any at all) after the construction.
[:zh_CN] 无论其是否这样做，在构造完成之后 [`*this] 和 [`rhs] 都会指代不同的
缓冲区（如果有的话）。

[:en] Additionally [`*this] references the file which [`rhs] did before the
construction, and [`rhs] references no file after the construction.
[:zh_CN] 此外，[`*this] 将指代 [`rhs] 在构造之前指代的文件，而 [`rhs] 在构造之后
不指代任何文件。

[:en] The openmode, locale and any other state of [`rhs] is also copied.
[:zh_CN] 还要复制 [`rhs] 的 [`openmode]，[`locale] 和所有其他状态。

[para:ensures]
[:en] Let [`rhs_p] refer to the state of [`rhs] just prior to this construction
and let [`rhs_a] refer to the state of [`rhs] just after this construction.
[:zh_CN] 令 [`rhs_p] 代表 [`rhs] 在进行这次构造之前的状态，并令 [`rhs_a] 代表
[`rhs] 这次构造之后的状态。

[list]
[item] [`is_open() == rhs_p.is_open()]
[item] [`rhs_a.is_open() == false]
[item] [`gptr() - eback() == rhs_p.gptr() - rhs_p.eback()]
[item] [`egptr() - eback() == rhs_p.egptr() - rhs_p.eback()]
[item] [`pptr() - pbase() == rhs_p.pptr() - rhs_p.pbase()]
[item] [`epptr() - pbase() == rhs_p.epptr() - rhs_p.pbase()]
[item] [`if (eback()) eback() != rhs_a.eback()]
[item] [`if (gptr()) gptr() != rhs_a.gptr()]
[item] [`if (egptr()) egptr() != rhs_a.egptr()]
[item] [`if (pbase()) pbase() != rhs_a.pbase()]
[item] [`if (pptr()) pptr() != rhs_a.pptr()]
[item] [`if (epptr()) epptr() != rhs_a.epptr()]
[list:end]
[exit:description]

[%@library basic_filebuf[![:en]destructor[:zh_CN]析构函数]]
[codeblock:declaration]
virtual ~basic_filebuf();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Destroys an object of class [`basic_filebuf<charT, traits>].
[:zh_CN] 销毁类 [`basic_filebuf<charT, traits>] 的对象。

[:en] Calls [`close()].
[:zh_CN] 调用 [`close()]。

[:en] If an exception occurs during the destruction of the object, including the
call to [`close()], the exception is caught but not rethrown (see
[#res.on.exception.handling]).
[:zh_CN] 如果在销毁对象的过程中（包括调用 [`close()]）抛出了异常， 则捕获该异常
而并不重新抛出（参见 [#res.on.exception.handling]）。
[exit:description]
