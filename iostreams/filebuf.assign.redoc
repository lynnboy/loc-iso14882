[section#filebuf.assign
    [:en] Assignment and swap
    [:zh_CN] 赋值和交换
]

[%@library operator=[!basic_filebuf]]
[%@library basic_filebuf[!operator=]]
[codeblock:declaration]
basic_filebuf& operator=(basic_filebuf&& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Calls [`close()] then move assigns from [`rhs].
[:zh_CN] 调用 [`close()] 然后从 [`rhs] 移动赋值。

[:en] After the move assignment [`*this] has the observable state it would have
had if it had been move constructed from [`rhs] (see [#filebuf.cons]).
[:zh_CN] 经过移动赋值之后，[`*this] 具有与当其由 [`rhs] 进行移动构造后所具有的
相同可观察状态（参见 [#filebuf.cons]）。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library swap[!basic_filebuf]]
[%@library basic_filebuf[!swap]]
[codeblock:declaration]
void swap(basic_filebuf& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Exchanges the state of [`*this] and [`rhs].
[:zh_CN] 互换 [`*this] 和 [`rhs] 的状态。
[div:end]

[%@library swap[!basic_filebuf]]
[%@library basic_filebuf[!swap]]
[codeblock:declaration]
template<class charT, class traits>
  void swap(basic_filebuf<charT, traits>& x,
            basic_filebuf<charT, traits>& y);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`x.swap(y)].
[:zh_CN] 如同执行 [`x.swap(y)]。
[div:end]
