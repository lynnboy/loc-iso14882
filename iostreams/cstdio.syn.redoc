[section#cstdio.syn
    [:en] Header [`<cstdio>] synopsis
    [:zh_CN] 头文件 [`<cstdio>] 纲要
]

[%@header cstdio]

[%@library size_t]
[%@library FILE]
[%@library fpos_t]
[%@library NULL]
[%@library _IOFBF]
[%@library _IOLBF]
[%@library _IONBF]
[%@library BUFSIZ]
[%@library EOF]
[%@library FOPEN_MAX]
[%@library FILENAME_MAX]
[%@library L_tmpnam]
[%@library SEEK_CUR]
[%@library SEEK_END]
[%@library SEEK_SET]
[%@library TMP_MAX]
[%@library stderr]
[%@library stdin]
[%@library stdout]
[%@library remove]
[%@library rename]
[%@library tmpfile]
[%@library tmpnam]
[%@library fclose]
[%@library fflush]
[%@library fopen]
[%@library freopen]
[%@library setbuf]
[%@library setvbuf]
[%@library fprintf]
[%@library fscanf]
[%@library printf]
[%@library scanf]
[%@library snprintf]
[%@library sprintf]
[%@library sscanf]
[%@library vfprintf]
[%@library vfscanf]
[%@library vprintf]
[%@library vscanf]
[%@library vsnprintf]
[%@library vsprintf]
[%@library vsscanf]
[%@library fgetc]
[%@library fgets]
[%@library fputc]
[%@library fputs]
[%@library getc]
[%@library getchar]
[%@library putc]
[%@library putchar]
[%@library puts]
[%@library ungetc]
[%@library fread]
[%@library fwrite]
[%@library fgetpos]
[%@library fseek]
[%@library fsetpos]
[%@library ftell]
[%@library rewind]
[%@library clearerr]
[%@library feof]
[%@library ferror]
[%@library perror]

[codeblock:synopsis [!:mark SeeBelow] ]
namespace std {
  using size_t = [$ [:en] see [#support.types.layout] [:zh_CN] 参见 [#support.types.layout]];
  using FILE = [=SeeBelow];
  using fpos_t = [=SeeBelow];
}

#define NULL [$ [:en] see [#support.types.nullptr] [:zh_CN] 参见 [#support.types.nullptr]]
#define _IOFBF [=SeeBelow]
#define _IOLBF [=SeeBelow]
#define _IONBF [=SeeBelow]
#define BUFSIZ [=SeeBelow]
#define EOF [=SeeBelow]
#define FOPEN_MAX [=SeeBelow]
#define FILENAME_MAX [=SeeBelow]
#define L_tmpnam [=SeeBelow]
#define SEEK_CUR [=SeeBelow]
#define SEEK_END [=SeeBelow]
#define SEEK_SET [=SeeBelow]
#define TMP_MAX [=SeeBelow]
#define stderr [=SeeBelow]
#define stdin [=SeeBelow]
#define stdout [=SeeBelow]

namespace std {
  int remove(const char* filename);
  int rename(const char* old_p, const char* new_p);
  FILE* tmpfile();
  char* tmpnam(char* s);
  int fclose(FILE* stream);
  int fflush(FILE* stream);
  FILE* fopen(const char* filename, const char* mode);
  FILE* freopen(const char* filename, const char* mode, FILE* stream);
  void setbuf(FILE* stream, char* buf);
  int setvbuf(FILE* stream, char* buf, int mode, size_t size);
  int fprintf(FILE* stream, const char* format, ...);
  int fscanf(FILE* stream, const char* format, ...);
  int printf(const char* format, ...);
  int scanf(const char* format, ...);
  int snprintf(char* s, size_t n, const char* format, ...);
  int sprintf(char* s, const char* format, ...);
  int sscanf(const char* s, const char* format, ...);
  int vfprintf(FILE* stream, const char* format, va_list arg);
  int vfscanf(FILE* stream, const char* format, va_list arg);
  int vprintf(const char* format, va_list arg);
  int vscanf(const char* format, va_list arg);
  int vsnprintf(char* s, size_t n, const char* format, va_list arg);
  int vsprintf(char* s, const char* format, va_list arg);
  int vsscanf(const char* s, const char* format, va_list arg);
  int fgetc(FILE* stream);
  char* fgets(char* s, int n, FILE* stream);
  int fputc(int c, FILE* stream);
  int fputs(const char* s, FILE* stream);
  int getc(FILE* stream);
  int getchar();
  int putc(int c, FILE* stream);
  int putchar(int c);
  int puts(const char* s);
  int ungetc(int c, FILE* stream);
  size_t fread(void* ptr, size_t size, size_t nmemb, FILE* stream);
  size_t fwrite(const void* ptr, size_t size, size_t nmemb, FILE* stream);
  int fgetpos(FILE* stream, fpos_t* pos);
  int fseek(FILE* stream, long int offset, int whence);
  int fsetpos(FILE* stream, const fpos_t* pos);
  long int ftell(FILE* stream);
  void rewind(FILE* stream);
  void clearerr(FILE* stream);
  int feof(FILE* stream);
  int ferror(FILE* stream);
  void perror(const char* s);
}
[codeblock:end]

[para]
[%@header stdio.h]
[%@header cstdio]
[:en] The contents and meaning of the header [`<cstdio>] are the same as the C
standard library header [`<stdio.h>].
[:zh_CN] 头文件 [`<cstdio>] 的内容及其含义与 C 标准程序库头文件 [`<stdio.h>]
相同。

[para]
[:en] Calls to the function [`tmpnam] with an argument that is a null pointer
value may introduce a data race ([#res.on.data.races]) with other calls to
[`tmpnam] with an argument that is a null pointer value.
[:zh_CN] 以空指针值作为实参调用函数 [`tmpnam]，可能导致与其他的以空指针值为实参
调用 [`tmpnam] 之间的数据竞争（[#res.on.data.races]）。

[para:xref]
ISO C 7.21
