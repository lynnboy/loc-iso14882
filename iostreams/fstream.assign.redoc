[section#fstream.assign
    [:en] Assignment and swap
    [:zh_CN] 赋值与交换
]

[%@library operator=[!basic_fstream]]
[%@library basic_fstream[!operator=]]
[codeblock:declaration]
basic_fstream& operator=(basic_fstream&& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Move assigns the base and members of [`*this] from the base and
corresponding members of [`rhs].
[:zh_CN] 对 [`*this] 的基类和成员从 [`rhs] 的基类和对应成员进行移动赋值。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library swap[!basic_fstream]]
[%@library basic_fstream[!swap]]
[codeblock:declaration]
void swap(basic_fstream& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Exchanges the state of [`*this] and [`rhs] by calling
[`basic_iostream<charT,traits>::swap(rhs)] and [`sb.swap(rhs.sb)].
[:zh_CN] 通过调用 [`basic_iostream<charT,traits>::swap(rhs)] 和
[`sb.swap(rhs.sb)] 交换 [`*this] 和 [`rhs] 的状态。
[exit:description]

[%@library swap[!basic_fstream]]
[%@library basic_fstream[!swap]]
[codeblock:declaration]
template<class charT, class traits>
  void swap(basic_fstream<charT, traits>& x,
            basic_fstream<charT, traits>& y);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by [`x.swap(y)].
[:zh_CN] 如同执行 [`x.swap(y)]。
[exit:description]
