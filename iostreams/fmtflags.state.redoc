[section#fmtflags.state
    [:en] State functions
    [:zh_CN] 状态函数
]

[%@library flags[!ios_base]]
[%@library ios_base[!flags]]
[codeblock:declaration]
fmtflags flags() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The format control information for both input and output.
[:zh_CN] 针对输入和输出的格式控制信息。
[exit:description]

[%@library flags[!ios_base]]
[%@library ios_base[!flags]]
[codeblock:declaration]
fmtflags flags(fmtflags fmtfl);
[codeblock:end]

[enter:description]
[para:ensures]
[:en] [`fmtfl == flags()].
[:zh_CN] [`fmtfl == flags()]。

[para:returns]
[:en] The previous value of [`flags()].
[:zh_CN] [`flags()] 之前的值。
[exit:description]

[%@library setf[!ios_base]]
[%@library ios_base[!setf]]
[codeblock:declaration]
fmtflags setf(fmtflags fmtfl);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Sets [`fmtfl] in [`flags()].
[:zh_CN] 在 [`flags()] 中设置 [`fmtfl]。

[para:returns]
[:en] The previous value of [`flags()].
[:zh_CN] [`flags()] 之前的值。
[exit:description]

[%@library setf[!ios_base]]
[%@library ios_base[!setf]]
[codeblock:declaration]
fmtflags setf(fmtflags fmtfl, fmtflags mask);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Clears [`mask] in [`flags()], sets [`fmtfl & mask] in [`flags()].
[:zh_CN] 在 [`flags()] 中清除 [`mask]，在 [`flags()] 中设置 [`fmtfl & mask]。

[para:returns]
[:en] The previous value of [`flags()].
[:zh_CN] [`flags()] 之前的值。
[exit:description]

[%@library unsetf[!ios_base]]
[%@library ios_base[!unsetf]]
[codeblock:declaration]
void unsetf(fmtflags mask);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Clears [`mask] in [`flags()].
[:zh_CN] 在 [`flags()] 中清除 [`mask]。
[exit:description]

[%@library precision[!ios_base]]
[%@library ios_base[!precision]]
[codeblock:declaration]
streamsize precision() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The precision to generate on certain output conversions.
[:zh_CN] 产生某些输出转换时的精度。
[exit:description]

[%@library precision[!ios_base]]
[%@library ios_base[!precision]]
[codeblock:declaration]
streamsize precision(streamsize prec);
[codeblock:end]

[enter:description]
[para:ensures]
[:en] [`prec == precision()].
[:zh_CN] [`prec == precision()]。

[para:returns]
[:en] The previous value of [`precision()].
[:zh_CN] [`precision()] 之前的值。
[exit:description]

[%@library width[!ios_base]]
[%@library ios_base[!width]]
[codeblock:declaration]
streamsize width() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The minimum field width (number of characters) to generate on certain
output conversions.
[:zh_CN] 产生某些输出转换时的最小字段宽度（字符数）。
[exit:description]

[%@library width[!ios_base]]
[%@library ios_base[!width]]
[codeblock:declaration]
streamsize width(streamsize wide);
[codeblock:end]

[enter:description]
[para:ensures]
[:en] [`wide == width()].
[:zh_CN] [`wide == width()]。

[para:returns]
[:en] The previous value of [`width()].
[:zh_CN] [`width()] 之前的值。
[exit:description]
