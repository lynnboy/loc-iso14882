[section#iostreamclass
    [:en] Class template [`basic_iostream]
    [:zh_CN] 类模板 [`basic_iostream]
]

[%@library basic_iostream]
[codeblock:synopsis]
namespace std {
  template <class charT, class traits = char_traits<charT>>
  class basic_iostream
    : public basic_istream<charT, traits>,
      public basic_ostream<charT, traits> {
  public:
    using char_type   = charT;
    using int_type    = typename traits::int_type;
    using pos_type    = typename traits::pos_type;
    using off_type    = typename traits::off_type;
    using traits_type = traits;

    // [:en] [#iostream.cons], constructor
    // [|:zh_CN] [#iostream.cons]，构造函数
    explicit basic_iostream(basic_streambuf<charT, traits>* sb);

    // [:en] [#iostream.dest], destructor
    // [|:zh_CN] [#iostream.dest]，析构函数
    virtual ~basic_iostream();

  protected:
    // [:en] [#iostream.cons], constructor
    // [|:zh_CN] [#iostream.cons]，构造函数
    basic_iostream(const basic_iostream& rhs) = delete;
    basic_iostream(basic_iostream&& rhs);

    // [:en] [#iostream.assign], assign and swap
    // [|:zh_CN] [#iostream.assign]，赋值与交换
    basic_iostream& operator=(const basic_iostream& rhs) = delete;
    basic_iostream& operator=(basic_iostream&& rhs);
    void swap(basic_iostream& rhs);
  };
}
[codeblock:end]

[para]
[:en] The class template [`basic_iostream] inherits a number of functions that
allow reading input and writing output to sequences controlled by a stream
buffer.
[:zh_CN] 类模板 [`basic_iostream] 继承了一些函数，用以在一个流缓冲区所掌控的序列
上读取输入并写入输出。

[include iostream.cons]

[include iostream.dest]

[include iostream.assign]
