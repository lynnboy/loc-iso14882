[section#ifstream
    [:en] Class template [`basic_ifstream]
    [:zh_CN] 类模板 [`basic_ifstream]
]

[%@library basic_ifstream]
[codeblock:synopsis]
namespace std {
  template <class charT, class traits = char_traits<charT>>
  class basic_ifstream : public basic_istream<charT, traits> {
  public:
    using char_type   = charT;
    using int_type    = typename traits::int_type;
    using pos_type    = typename traits::pos_type;
    using off_type    = typename traits::off_type;
    using traits_type = traits;

    // [:en] [#ifstream.cons], constructors
    // [|:zh_CN] [#ifstream.cons]，构造函数
    basic_ifstream();
    explicit basic_ifstream(const char* s,
                            ios_base::openmode mode = ios_base::in);
    explicit basic_ifstream(const filesystem::path::value_type* s,
                            ios_base::openmode mode = ios_base::in);  // [:en] wide systems only; see [#fstream.syn]
                                                                      // [|:zh_CN] 仅宽字符系统；参见 [#fstream.syn]
    explicit basic_ifstream(const string& s,
                            ios_base::openmode mode = ios_base::in);
    explicit basic_ifstream(const filesystem::path& s,
                            ios_base::openmode mode = ios_base::in);
    basic_ifstream(const basic_ifstream& rhs) = delete;
    basic_ifstream(basic_ifstream&& rhs);

    // [:en] [#ifstream.assign], assign and swap
    // [|:zh_CN] [#ifstream.assign]，赋值和交换
    basic_ifstream& operator=(const basic_ifstream& rhs) = delete;
    basic_ifstream& operator=(basic_ifstream&& rhs);
    void swap(basic_ifstream& rhs);

    // [:en] [#ifstream.members], members
    // [|:zh_CN] [#ifstream.members]，成员
    basic_filebuf<charT, traits>* rdbuf() const;

    bool is_open() const;
    void open(const char* s, ios_base::openmode mode = ios_base::in);
    void open(const filesystem::path::value_type* s,
              ios_base::openmode mode = ios_base::in);  // [:en] wide systems only; see [#fstream.syn]
                                                        // [|:zh_CN] 仅宽字符系统；参见 [#fstream.syn]
    void open(const string& s, ios_base::openmode mode = ios_base::in);
    void open(const filesystem::path& s, ios_base::openmode mode = ios_base::in);
    void close();
  private:
    basic_filebuf<charT, traits> sb; // [=Expos]
  };

  template <class charT, class traits>
    void swap(basic_ifstream<charT, traits>& x,
              basic_ifstream<charT, traits>& y);
}
[codeblock:end]

[para]
[:en] The class [`basic_ifstream<charT, traits>] supports reading from named
files.
[:zh_CN] 类 [`basic_ifstream<charT, traits>] 支持从具名的文件进行读取。

[:en] It uses a [`basic_filebuf<charT, traits>] object to control the associated
sequence.
[:zh_CN] 它利用一个 [`basic_filebuf<charT, traits>] 对象来控制其所关联的序列。

[:en] For the sake of exposition, the maintained data is presented here as:
[:zh_CN] 为阐释目的，此处将其所维护的数据表示为：
[list]
[item]
[:en] [`sb], the [`filebuf] object.
[:zh_CN] [`sb]，[`filebuf] 对象。
[list:end]

[include ifstream.cons]

[include ifstream.assign]

[include ifstream.members]
