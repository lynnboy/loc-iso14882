[section#cinttypes.syn
    [:en] Header [`<cinttypes>] synopsis
    [:zh_CN] 头文件 [`<cinttypes>] 纲要
]

[%@hdr@def cinttypes]

[%@lib imaxdiv_t]
[%@lib imaxabs]
[%@lib imaxdiv]
[%@lib strtoimax]
[%@lib strtoumax]
[%@lib wcstoimax]
[%@lib wcstoumax]
[%@lib abs]
[%@lib div]
[%@lib PRIdN]
[%@lib PRIiN]
[%@lib PRIoN]
[%@lib PRIuN]
[%@lib PRIxN]
[%@lib PRIXN]
[%@lib SCNdN]
[%@lib SCNiN]
[%@lib SCNoN]
[%@lib SCNuN]
[%@lib SCNxN]
[%@lib PRIdLEASTN]
[%@lib PRIiLEASTN]
[%@lib PRIoLEASTN]
[%@lib PRIuLEASTN]
[%@lib PRIxLEASTN]
[%@lib PRIXLEASTN]
[%@lib SCNdLEASTN]
[%@lib SCNiLEASTN]
[%@lib SCNoLEASTN]
[%@lib SCNuLEASTN]
[%@lib SCNxLEASTN]
[%@lib PRIdFASTN]
[%@lib PRIiFASTN]
[%@lib PRIoFASTN]
[%@lib PRIuFASTN]
[%@lib PRIxFASTN]
[%@lib PRIXFASTN]
[%@lib SCNdFASTN]
[%@lib SCNiFASTN]
[%@lib SCNoFASTN]
[%@lib SCNuFASTN]
[%@lib SCNxFASTN]
[codeblock:synopsis]
#include <cstdint>  // [:en] see [#cstdint.syn] \
                    [:zh_CN] 参见 [#cstdint.syn]

namespace std {
  using imaxdiv_t = [[redoc("[=seebelow]")]];

  constexpr intmax_t imaxabs(intmax_t j);
  constexpr imaxdiv_t imaxdiv(intmax_t numer, intmax_t denom);
  intmax_t strtoimax(const char* nptr, char** endptr, int base);
  uintmax_t strtoumax(const char* nptr, char** endptr, int base);
  intmax_t wcstoimax(const wchar_t* nptr, wchar_t** endptr, int base);
  uintmax_t wcstoumax(const wchar_t* nptr, wchar_t** endptr, int base);

  constexpr intmax_t abs(intmax_t);             // [:en] optional, see below \
                                                [:zh_CN] 可选，见下文
  constexpr imaxdiv_t div(intmax_t, intmax_t);  // [:en] optional, see below \
                                                [:zh_CN] 可选，见下文
}

#define PRIdN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIiN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIoN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIuN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIxN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIXN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNdN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNiN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNoN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNuN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNxN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIdLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIiLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIoLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIuLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIxLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIXLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNdLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNiLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNoLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNuLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNxLEASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIdFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIiFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIoFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIuFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIxFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIXFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNdFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNiFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNoFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNuFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define SCNxFASTN[[redoc("^<1c")]] [[redoc("[=seebelow]")]]
#define PRIdMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIiMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIoMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIuMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIxMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIXMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNdMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNiMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNoMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNuMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNxMAX[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIdPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIiPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIoPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIuPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIxPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define PRIXPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNdPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNiPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNoPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNuPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
#define SCNxPTR[[redoc("`:m<")]] [[redoc("[=seebelow]")]]
[codeblock:end]

[para]
[:en] The contents and meaning of the header [?libheader cinttypes] are the same
as the C standard library header [?libheader inttypes.h], with the following changes:
[:zh_CN] 头文件 [?libheader cinttypes] 的内容和含义与 C 标准程序库头文件
[?libheader inttypes.h] 相同，但有下列改动：

[list]
[item]
[:en] The header [?libheader cinttypes] includes the header
[?libheader@ref cstdint] instead of [?libheader stdint.h], and
[:zh_CN] 头文件 [?libheader cinttypes] 包含的是头文件 [?libheader@ref cstdint]
而不是 [?libheader stdint.h]，并且

[item]
[:en] [`intmax_t] and [`uintmax_t] are not required to be able to represent all
values of extended integer types wider than [`long long] and
[`unsigned long long], respectively, and
[:zh_CN] [`intmax_t] 和 [`uintmax_t] 各自并不要求可以表示分别比 [`long long] 和
[`unsigned long long] 更宽的扩充整数类型的所有值，并且

[item]
[:en] if and only if the type [`intmax_t] designates an extended integer type
([#basic.fundamental]), the following function signatures are added:
[:zh_CN] 当且仅当类型 [`intmax_t] 代表某种扩充整数类型（[#basic.fundamental]）
时，添加下列函数签名：

[codeblock]
constexpr intmax_t abs(intmax_t);
constexpr imaxdiv_t div(intmax_t, intmax_t);
[codeblock:end]

[:en@~] which shall have the same semantics as the function signatures
[`constexpr intmax_t imaxabs(intmax_t)] and
[`constexpr imaxdiv_t imaxdiv(intmax_t, intmax_t)], respectively.
[:zh_CN@~] 它们应当分别与函数签名 [`constexpr intmax_t imaxabs(intmax_t)] 和
[`constexpr imaxdiv_t imaxdiv(intmax_t, intmax_t)] 具有相同的语义。
[list:end]

[para:xref@c] 7.8

[para]
[:en] Each of the [`PRI] macros listed in this subclause is defined if and only
if the implementation defines the corresponding [~typedef-name] in [#cstdint.syn].
[:zh_CN] 对于本子条款所列出的每个 [`PRI] 宏，当且仅当实现在 [#cstdint.syn] 中
定义了对应的 [~typedef-名]时被定义。

[:en] Each of the [`SCN] macros listed in this subclause is defined if and only
if the implementation defines the corresponding [~typedef-name] in [#cstdint.syn]
and has a suitable [`fscanf] length modifier for the type.
[:zh_CN] 对于本子条款所列出的每个 [`SCN] 宏，当且仅当实现在 [#cstdint.syn] 中
定义了对应的 [~typedef-名]，并且对于其类型具有合适的 [`fscanf] 长度修饰符时被定义。
