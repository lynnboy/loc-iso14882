[section#ios.failure
    [:en] Class [`ios_base::failure]
    [:zh_CN] 类 [`ios_base::failure]
]

[%@library ios_base::failure]
[%@library ios_base[!failure]]
[codeblock:synopsis]
namespace std {
  class ios_base::failure : public system_error {
  public:
    explicit failure(const string& msg, const error_code& ec = io_errc::stream);
    explicit failure(const char* msg, const error_code& ec = io_errc::stream);
  };
}
[codeblock:end]

[para]
[:en] An implementation is permitted to define [`ios_base::failure] as a synonym
for a class with equivalent functionality to class [`ios_base::failure] shown in
this subclause.
[:zh_CN] 允许实现将 [`ios_base::failure] 定义为某个具有本子条款所展示的类
[`ios_base::failure] 等价功能的类的别名。

[begin:note]
[:en] When [`ios_base::failure] is a synonym for another type it shall provide a
nested type [`failure], to emulate the injected class name.
[:zh_CN] 若 [`ios_base::failure] 为其他类型的别名，则它应当提供嵌套类型
[`failure] 以模拟注入类名。
[end:note]

[:en] The class [`failure] defines the base class for the types of all objects
thrown as exceptions, by functions in the iostreams library, to report errors
detected during stream buffer operations.
[:zh_CN] 类 [`failure] 定义了由 I/O 流程序库中的函数作为异常抛出的所有对象的
基类，它们用来报告在流缓冲区操作过程中检测到的错误。

[para]
[:en] When throwing [`ios_base::failure] exceptions, implementations should
provide values of [`ec] that identify the specific reason for the failure.
[:zh_CN] 当抛出 [`ios_base::failure] 异常时，实现应当提供一个 [`ec] 值，用以识别
这个特定的失败的原因。

[begin:note]
[:en] Errors arising from the operating system would typically be reported as
[`system_category()] errors with an error value of the error number reported by
the operating system.
[:zh_CN] 由操作系统发出的错误，通常可以作为 [`system_category()] 错误来报告，其
错误值为操作系统所报告的错误号。

[:en] Errors arising from within the stream library would typically be reported
as [`error_code(io_errc::stream, iostream_category())].
[:zh_CN] 由流程序库所发出的错误，通常可以作为
[`error_code(io_errc::stream, iostream_category())] 来报告。
[end:note]

[%@library ios_base::failure[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit failure(const string& msg, const error_code& ec = io_errc::stream);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Constructs an object of class [`failure] by constructing the base class
with [`msg] and [`ec].
[:zh_CN] 构造一个类 [`failure] 的对象，以 [`msg] 和 [`ec] 构造其基类。
[end:description]

[%@library ios_base::failure[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit failure(const char* msg, const error_code& ec = io_errc::stream);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Constructs an object of class [`failure] by constructing the base class
with [`msg] and [`ec].
[:zh_CN] 构造一个类 [`failure] 的对象，以 [`msg] 和 [`ec] 构造其基类。
[end:description]
