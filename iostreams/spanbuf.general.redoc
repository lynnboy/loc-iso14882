[section#spanbuf.general
    [:en] General
    [:zh_CN] 概述
]

[%@lib basic_spanbuf]
[codeblock:synopsis]
namespace std {
  template<class charT, class traits = char_traits<charT>>
  class basic_spanbuf
    : public basic_streambuf<charT, traits> {
  public:
    using char_type   = charT;
    using int_type    = typename traits::int_type;
    using pos_type    = typename traits::pos_type;
    using off_type    = typename traits::off_type;
    using traits_type = traits;

    // [:en] [#spanbuf.ctor], constructors \
    [:zh_CN] [#spanbuf.ctor]，构造函数
    basic_spanbuf() : basic_spanbuf(ios_base::in | ios_base::out) {}
    explicit basic_spanbuf(ios_base::openmode which)
      : basic_spanbuf(std::span<charT>(), which) {}
    explicit basic_spanbuf(std::span<charT> s,
                           ios_base::openmode which = ios_base::in | ios_base::out);
    basic_spanbuf(const basic_spanbuf&) = delete;
    basic_spanbuf(basic_spanbuf&& rhs);

    // [:en] [#spanbuf.assign], assignment and swap \
    [:zh_CN] [#spanbuf.assign]，赋值与交换
    basic_spanbuf& operator=(const basic_spanbuf&) = delete;
    basic_spanbuf& operator=(basic_spanbuf&& rhs);
    void swap(basic_spanbuf& rhs);

    // [:en] [#spanbuf.members], member functions \
    [:zh_CN] [#spanbuf.members]，成员函数
    std::span<charT> span() const noexcept;
    void span(std::span<charT> s) noexcept;

  protected:
    // [:en] [#spanbuf.virtuals], overridden virtual functions \
    [:zh_CN] [#spanbuf.virtuals]，覆盖的虚函数
    basic_streambuf<charT, traits>* setbuf(charT*, streamsize) override;
    pos_type seekoff(off_type off, ios_base::seekdir way,
                     ios_base::openmode which = ios_base::in | ios_base::out) override;
    pos_type seekpos(pos_type sp,
                     ios_base::openmode which = ios_base::in | ios_base::out) override;
  private:
    ios_base::openmode @\exposid{mode}@;            // [=expos]
    std::span<charT> @\exposid{buf}@;               // [=expos]
};

template<class charT, class traits>
  void swap(basic_spanbuf<charT, traits>& x, basic_spanbuf<charT, traits>& y);
}
[codeblock:end]

[para]
[:en] The class template [`basic_spanbuf] is derived from [`basic_streambuf]
to associate possibly the input sequence and possibly the output sequence with
a sequence of arbitrary characters.
[:zh_CN] 类 [`basic_spanbuf] 派生于 [`basic_streambuf]，并将可能的输入序列和
可能的输出序列与一个任意字符序列关联起来。

[:en] The sequence is provided by an object of class [`span<charT>].
[:zh_CN] 这个序列是由类 [`span<charT>] 的对象提供的。

[para]
[:en] For the sake of exposition, the maintained data is presented here as:
[:zh_CN] 为阐释目的，此处将其所维护的数据表示为：

[list]
[item]
[:en] [`ios_base::openmode [*mode]], has [`in] set if the input sequence can be
read, and [`out] set if the output sequence can be written.
[:zh_CN] [`ios_base::openmode [*mode]]，当可以读取输入序列时其中设置 [`in]，当
可以写入输出序列时其中设置 [`out]。

[item]
[:en] [`std::span<charT> [*buf]] is the view to the underlying character
sequence.
[:zh_CN] [`std::span<charT> [*buf]] 是对底层字符序列的视图。
[list:end]
