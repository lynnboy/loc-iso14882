[section#syncstream.syncbuf.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@library emit[!basic_syncbuf]]
[%@library basic_syncbuf[!emit]]
[codeblock:declaration]
bool emit();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Atomically transfers the associated output of [`*this] to the stream
buffer [`*wrapped], so that it appears in the output stream as a contiguous
sequence of characters.
[:zh_CN] 原子地将 [`*this] 的关联输出转移到流缓冲区 [`*wrapped] 中，使其表现为
输出流中的连续的祝福序列。

[:en] [`wrapped->pubsync()] is called if and only if a call was made to
[`sync()] since the most recent call to [`emit()], if any.
[:zh_CN] 当且仅当从最近一次调用 [`emit()] 之后（如果有）曾调用过 [`sync()] 时，
调用 [`wrapped->pubsync()]。

[para:returns]
[:en] [`true] if all of the following conditions hold; otherwise [`false]:
[:zh_CN] 当以下条件全部满足时返回 [`true]；否则返回 [`false]：

[list]
[item]
[:en] [`wrapped == nullptr] is [`false].
[:zh_CN] [`wrapped == nullptr] 为 [`false]。
[item]
[:en] All of the characters in the associated output were successfully
transferred.
[:zh_CN] 关联输出中的所有字符都已被成功转移。
[item]
[:en] The call to [`wrapped->pubsync()] (if any) succeeded.
[:zh_CN] 对 [`wrapped->pubsync()] 的调用（如果有）成功。
[list:end]

[para:postconditions]
[:en] On success, the associated output is empty.
[:zh_CN] 成功后，关联输出为空。

[para:sync]
[:en] All [`emit()] calls transferring characters to the same stream buffer
object appear to execute in a total order consistent with the ["happens before]
relation ([#intro.races]), where each [`emit()] call synchronizes with
subsequent [`emit()] calls in that total order.
[:zh_CN] 所有向同一个流缓冲区对象转移字符的 [`emit()] 调用，都表现为依据与
“发生早于”关系（[#intro.races]）相一致的某种全序来执行，其中每次 [`emit()] 调用
都同步于该全序中后续的 [`emit()] 调用。

[para:remarks]
[:en] May call member functions of [`wrapped] while holding a lock uniquely
associated with [`wrapped].
[:zh_CN] 可能会在持有某个与 [`wrapped] 唯一关联的锁时调用 [`wrapped] 的成员函数。
[exit:description]

[%@library get_wrapped[!basic_syncbuf]]
[%@library basic_syncbuf[!get_wrapped]]
[codeblock:declaration]
streambuf_type* get_wrapped() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`wrapped].
[:zh_CN] [`wrapped]。
[exit:description]

[%@library get_allocator[!basic_syncbuf]]
[%@library basic_syncbuf[!get_allocator]]
[codeblock:declaration]
allocator_type get_allocator() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] A copy of the allocator that was set in the constructor or assignment
operator.
[:zh_CN] 在构造函数或赋值运算符中设置的分配器的副本。
[exit:description]

[%@library set_emit_on_sync[!basic_syncbuf]]
[%@library basic_syncbuf[!set_emit_on_sync]]
[codeblock:declaration]
void set_emit_on_sync(bool b) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] [`emit_on_sync = b].
[:zh_CN] [`emit_on_sync = b]。
[exit:description]
