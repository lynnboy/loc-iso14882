[section#stringbuf.virtuals
    [:en] Overridden virtual functions
    [:zh_CN] 覆盖的虚函数
]

[%@library underflow[!basic_stringbuf]]
[%@library basic_stringbuf[!underflow]]
[codeblock:declaration]
int_type underflow() override;
[codeblock:end]

[begin:description]
[para:returns]
[:en] If the input sequence has a read position available, returns
[`traits::to_int_type(*gptr())].
[:zh_CN] 当输入序列有可用的读取位置时返回 [`traits::to_int_type(*gptr())]。

[:en] Otherwise, returns [`traits::eof()].
[:zh_CN] 否则返回 [`traits::eof()]。

[:en] Any character in the underlying buffer which has been initialized is
considered to be part of the input sequence.
[:zh_CN] 底层缓冲区中的所有已初始化的字符，都认为是输入序列的一部分。
[end:description]

[%@library pbackfail[!basic_stringbuf]]
[%@library basic_stringbuf[!pbackfail]]
[codeblock:declaration]
int_type pbackfail(int_type c = traits::eof()) override;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Puts back the character designated by [`c] to the input sequence, if
possible, in one of three ways:
[:zh_CN] 如果可能，将 [`c] 代表的字符以三种方式之一回填到输入序列中：

[list]
[item]
[:en] If [`traits::eq_int_type(c, traits::eof())] returns [`false] and if the
input sequence has a putback position available, and if
[`traits::eq(to_char_type(c), gptr()`[-1`])] returns [`true], assigns
[`gptr() - 1] to [`gptr()].
[:zh_CN] 若 [`traits::eq_int_type(c, traits::eof())] 返回 [`false] 且输入序列有
可用的回填位置，并且若 [`traits::eq(to_char_type(c), gptr()`[-1`])] 返回
[`true]，则将 [`gptr() - 1] 赋值给 [`gptr()]。

[:en] Returns: [`c].
[:zh_CN] 返回：[`c]。

[item]
[:en] If [`traits::eq_int_type(c, traits::eof())] returns [`false] and if the
input sequence has a putback position available, and if [`mode & ios_base::out]
is nonzero, assigns [`c] to [`*--gptr()].
[:zh_CN] 若 [`traits::eq_int_type(c, traits::eof())] 返回 [`false] 且输入序列有
可用的回填位置，并且若 [`mode & ios_base::out] 非零，则将 [`c] 赋值给
[`*--gptr()]。

[:en] Returns: [`c].
[:zh_CN] 返回：[`c]。

[item]
[:en] If [`traits::eq_int_type(c, traits::eof())] returns [`true] and if the
input sequence has a putback position available, assigns [`gptr() - 1] to
[`gptr()].
[:zh_CN] 若 [`traits::eq_int_type(c, traits::eof())] 返回 [`true] 且输入序列有
可用的回填位置，则将 [`gptr() - 1] 赋值给 [`gptr()]。

[:en] Returns: [`traits::not_eof(c)].
[:zh_CN] 返回：[`traits::not_eof(c)]。
[list:end]

[para:returns]
[:en] As specified above, or [`traits::eof()] to indicate failure.
[:zh_CN] 如上所述，或返回 [`traits::eof()] 以标明失败。

[para:remarks]
[:en] If the function can succeed in more than one of these ways, it is
[%unspecified] unspecified which way is chosen.
[:zh_CN] 若函数可以通过不止一种方式完成工作，则采用哪种方式是[%未指明]未指明的。
[end:description]

[%@library overflow[!basic_stringbuf]]
[%@library basic_stringbuf[!overflow]]
[codeblock:declaration]
int_type overflow(int_type c = traits::eof()) override;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Appends the character designated by [`c] to the output sequence, if
possible, in one of two ways:
[:zh_CN] 如果可能，将 [`c] 代表的字符以两种方式之一追加到输出序列中：

[list]
[item]
[:en] If [`traits::eq_int_type(c, traits::eof())] returns [`false] and if either
the output sequence has a write position available or the function makes a write
position available (as described below), the function calls [`sputc(c)].
[:zh_CN] 若 [`traits::eq_int_type(c, traits::eof())] 返回 [`false]，且要么输出
序列有可用的写入位置，要么函数做出了可用的写入位置（如下所述），则函数调用
[`sputc(c)]。

[:en] Signals success by returning [`c].
[:zh_CN] 通过返回 [`c] 来标明成功。

[item]
[:en] If [`traits::eq_int_type(c, traits::eof())] returns [`true], there is no
character to append.
[:zh_CN] 若 [`traits::eq_int_type(c, traits::eof())] 返回 [`true]，则没有要追加
的字符。

[:en] Signals success by returning a value other than [`traits::eof()].
[:zh_CN] 通过返回 [`traits::eof()] 以外的值来标明成功。
[list:end]

[para:remarks]
[:en] The function can alter the number of write positions available as a result
of any call.
[:zh_CN] 该函数可能由于所进行的任何调用而改变可用的写入位置的数量。

[para:returns]
[:en] As specified above, or [`traits::eof()] to indicate failure.
[:zh_CN] 如上所述，或返回 [`traits::eof()] 以标明失败。

[para]
[:en] The function can make a write position available only if
[`(mode & ios_base::out) != 0].
[:zh_CN] 仅当 [`(mode & ios_base::out) != 0] 时，函数才会做出新的写入位置。

[:en] To make a write position available, the function reallocates (or initially
allocates) an array object with a sufficient number of elements to hold the
current array object (if any), plus at least one additional write position.
[:zh_CN] 为了做出可用写入位置，该函数重新分配（或进行首次分配）一个数组对象，
使其具有足够数量的元素以持有当前的数组对象（如果有）以及至少一个额外的写入位置。

[:en] If [`(mode & ios_base::in) != 0], the function alters the read end pointer
[`egptr()] to point just past the new write position.
[:zh_CN] 如果 [`(mode & ios_base::in) != 0]，则函数修改读取末尾指针 [`egptr()]
使其指向新的紧跟写入位置之后。
[end:description]

[%@library seekoff[!basic_stringbuf]]
[%@library basic_stringbuf[!seekoff]]
[codeblock:declaration]
pos_type seekoff(off_type off, ios_base::seekdir way,
                 ios_base::openmode which
                   = ios_base::in | ios_base::out) override;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Alters the stream position within one of the controlled sequences, if
possible, as indicated in [#:tab#stringbuf.seekoff.pos].
[:zh_CN] 如果可能，以 [#:tab#stringbuf.seekoff.pos] 中所指定的方式改动所掌控
的序列之一之中的流定位。

[table:grid#stringbuf.seekoff.pos
    [:en] [`seekoff] positioning
    [:zh_CN] [`seekoff] 的定位
    [|  [:en] Conditions
        [:zh_CN] 条件 ]
    [|  [:en] Result
        [:zh_CN] 结果 ]
]

[|] [`which & ios_base::in == ios_base::in]
[|] [:en] positions the input sequence
    [:zh_CN] 定位输入序列
[-]

[|] [`which & ios_base::out == ios_base::out]
[|] [:en] positions the output sequence
    [:zh_CN] 定位输出序列
[-]

[|]
[:en] [`which & (ios_base::in | ios_base::out) == ios_base::in | ios_base::out]
and either [`way == ios_base::beg] or [`way == ios_base::end]
[:zh_CN]
[`which & (ios_base::in | ios_base::out) == ios_base::in | ios_base::out]
并且要么 [`way == ios_base::beg] 要么 [`way == ios_base::end]
[|] [:en] positions both the input and the output sequences
    [:zh_CN] 同时定位输入和输出序列
[-]

[|] [:en] Otherwise
    [:zh_CN] 否则
[|] [:en] the positioning operation fails.
    [:zh_CN] 定位操作失败。
[-]
[table:end]

[para]
[:en] For a sequence to be positioned, the function determines [`newoff] as
indicated in [#:tab#stringbuf.seekoff.newoff].
[:zh_CN] 对于要定位的序列，函数根据 [#:tab#stringbuf.seekoff.newoff] 来确定
[`newoff]。

[:en] If the sequence[='s] next pointer (either [`gptr()] or [`pptr()]) is a
null pointer and [`newoff] is nonzero, the positioning operation fails.
[:en] 若该序列的后继指针（[`gptr()] 或者 [`pptr()]）为空指针且 [`newoff] 非空，
则定位操作失败。

[table:grid#stringbuf.seekoff.newoff
    [:en] [`newoff] values
    [:zh_CN] [`newoff] 的值
    [|  [:en] Conditions
        [:zh_CN] 条件 ]
    [|  [:en] [`newoff] Value
        [:zh_CN] [`newoff] 的值 ]
]

[|] [`way == ios_base::beg]
[|] 0
[-]
[|] [`way == ios_base::cur]
[|] [:en] the next pointer minus the beginning pointer ([`xnext - xbeg]).
    [:zh_CN] 后继指针减去起始指针（[`xnext - xbeg]）。
[-]
[|] [`way == ios_base::end]
[|] [:en] the high mark pointer minus the beginning pointer
    ([`high_mark - xbeg]).
    [:zh_CN] 最高位置标记减去起始指针（[`high_mark - xbeg]）。
[-]
[table:end]

[para]
[:en] If [`(newoff + off) < 0], or if [`newoff + off] refers to an uninitialized
character ([#stringbuf.members]), the positioning operation fails.
[:zh_CN] 若 [`(newoff + off) < 0]，或者若 [`newoff + off] 指代某个未初始化的字符
（[#stringbuf.members]），则定位操作失败。

[:en] Otherwise, the function assigns [`xbeg + newoff + off] to the next pointer
[`xnext].
[:zh_CN] 否则，该函数将 [`xbeg + newoff + off] 赋值给后继指针 [`xnext]。

[para:returns]
[:en] [`pos_type(newoff)], constructed from the resultant offset [`newoff]
(of type [`off_type]), that stores the resultant stream position, if possible.
[:zh_CN] 如果可能，返回保存结果流位置的 [`pos_type(newoff)]，它是由结果偏移值
[`newoff]（类型为 [`off_type]）构造的。

[:en] If the positioning operation fails, or if the constructed object cannot
represent the resultant stream position, the return value is
[`pos_type(off_type(-1))].
[:zh_CN] 如果定位操作失败，或者所构造的对象无法表示结果流位置，则返回值为
[`pos_type(off_type(-1))]。
[end:description]

[%@library seekpos[!basic_stringbuf]]
[%@library basic_stringbuf[!seekpos]]
[codeblock:declaration]
pos_type seekpos(pos_type sp,
                 ios_base::openmode which
                   = ios_base::in | ios_base::out) override;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to [`seekoff(off_type(sp), ios_base::beg, which)].
[:zh_CN] 等价于 [`seekoff(off_type(sp), ios_base::beg, which)]。

[para:returns]
[:en] [`sp] to indicate success, or [`pos_type(off_type(-1))] to indicate
failure.
[:zh_CN] [`sp] 以标明成功，或者 [`pos_type(off_type(-1))] 以标明失败。
[end:description]

[%@library setbuf[!basic_stringbuf]]
[%@library basic_stringbuf[!setbuf]]
[codeblock:declaration]
basic_streambuf<charT, traits>* setbuf(charT* s, streamsize n);
[codeblock:end]

[begin:description]
[para:effects]
[:en] [?impldef effect of calling [`basic_streambuf::setbuf] with nonzero
arguments], except that [`setbuf(0, 0)] has no effect.
[:zh_CN] [?impldef 以非零实参调用 [`basic_streambuf::setbuf] 的效果]行为，但
[`setbuf(0, 0)] 没有效果。

[para:returns]
[:en] [`this].
[:zh_CN] [`this]。
[end:description]
