[section#spanstream.general
    [:en] General
    [:zh_CN] 概述
]

[%@lib basic_spanstream]
[codeblock:synopsis]
namespace std {
  template<class charT, class traits = char_traits<charT>>
  class basic_spanstream
    : public basic_iostream<charT, traits> {
  public:
    using char_type   = charT;
    using int_type    = typename traits::int_type;
    using pos_type    = typename traits::pos_type;
    using off_type    = typename traits::off_type;
    using traits_type = traits;

    // [:en] [#spanstream.ctor], constructors \
       [:zh_CN] [#spanstream.ctor]，构造函数
    explicit basic_spanstream(std::span<charT> s,
                              ios_base::openmode which = ios_base::out | ios_base::in);
    basic_spanstream(const basic_spanstream&) = delete;
    basic_spanstream(basic_spanstream&& rhs);

    // [:en] [#spanstream.assign], assignment and swap \
       [:zh_CN] [#spanstream.assign]，赋值和交换
    basic_spanstream& operator=(const basic_spanstream&) = delete;
    basic_spanstream& operator=(basic_spanstream&& rhs);
    void swap(basic_spanstream& rhs);

    // [:en] [#spanstream.members], members \
       [:zh_CN] [#spanstream.members]，成员
    basic_spanbuf<charT, traits>* rdbuf() const noexcept;

    std::span<charT> span() const noexcept;
    void span(std::span<charT> s) noexcept;
  private:
    basic_spanbuf<charT, traits> sb;    // [=expos]
  };

  template<class charT, class traits>
    void swap(basic_spanstream<charT, traits>& x, basic_spanstream<charT, traits>& y);
}
[codeblock:end]
