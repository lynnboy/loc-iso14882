[section#ios.syn
    [:en] Header [`<ios>] synopsis
    [:zh_CN] 头文件 [`<ios>] 纲要
]

[%@hdr@def ios]
[%@lib io_errc]

[codeblock:synopsis]
#include <iosfwd>   // [:en] see [#iosfwd.syn] \
                    [:zh_CN] 参见 [#iosfwd.syn]

namespace std {
  // [:en] [#stream.types], types \
  [:zh_CN] [#stream.types]，类型
  using streamoff  = [[redoc("[=impdef]")]];
  using streamsize = [[redoc("[=impdef]")]];
  // [:en] [#fpos], class template [`fpos] \
  [:zh_CN] [#fpos]，类模板 [`fpos]
  template<class stateT> class fpos;

  // [:en] [#ios.base], class [`ios_base] \
  [:zh_CN] [#ios.base]，类 [`ios_base]
  class ios_base;
  // [:en] [#ios], class template [`basic_ios] \
  [:zh_CN] [#ios]，类模板 [`basic_ios]
  template<class charT, class traits = char_traits<charT>>
    class basic_ios;

  // [:en] [#std.ios.manip], manipulators \
  [:zh_CN] [#std.ios.manip]，操作符
  ios_base& boolalpha  (ios_base& str);
  ios_base& noboolalpha(ios_base& str);

  ios_base& showbase   (ios_base& str);
  ios_base& noshowbase (ios_base& str);

  ios_base& showpoint  (ios_base& str);
  ios_base& noshowpoint(ios_base& str);

  ios_base& showpos    (ios_base& str);
  ios_base& noshowpos  (ios_base& str);

  ios_base& skipws     (ios_base& str);
  ios_base& noskipws   (ios_base& str);

  ios_base& uppercase  (ios_base& str);
  ios_base& nouppercase(ios_base& str);

  ios_base& unitbuf    (ios_base& str);
  ios_base& nounitbuf  (ios_base& str);

  // [:en] [#adjustfield.manip], adjustfield \
  [:zh_CN] [#adjustfield.manip]，对齐字段
  ios_base& internal   (ios_base& str);
  ios_base& left       (ios_base& str);
  ios_base& right      (ios_base& str);

  // [:en] [#basefield.manip], basefield \
  [:zh_CN] [#basefield.manip]，基数字段
  ios_base& dec        (ios_base& str);
  ios_base& hex        (ios_base& str);
  ios_base& oct        (ios_base& str);

  // [:en] [#floatfield.manip], floatfield \
  [:zh_CN] [#floatfield.manip]，浮点字段
  ios_base& fixed      (ios_base& str);
  ios_base& scientific (ios_base& str);
  ios_base& hexfloat   (ios_base& str);
  ios_base& defaultfloat(ios_base& str);

  // [:en] [#error.reporting], error reporting \
  [:zh_CN] [#error.reporting]，错误报告
  enum class [[redoc("`:lib")]]io_errc {
    [[redoc("[%@lib@member stream[!io_errc]]")]]stream = 1
  };

  template<> struct is_error_code_enum<io_errc> : public true_type { };
  error_code make_error_code(io_errc e) noexcept;
  error_condition make_error_condition(io_errc e) noexcept;
  const error_category& iostream_category() noexcept;
}
[codeblock:end]

[%@lib ios]
[%@lib basic_ios<char>]
[%@lib wios]
[%@lib basic_ios<wchar_t>]
[%@lib fpos]
