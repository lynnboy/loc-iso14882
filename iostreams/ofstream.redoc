[section#ofstream
    [:en] Class template [`basic_ofstream]
    [:zh_CN] 类模板 [`basic_ofstream]
]

[%@lib basic_ofstream]
[codeblock:synopsis]
namespace std {
  template<class charT, class traits = char_traits<charT>>
  class basic_ofstream : public basic_ostream<charT, traits> {
  public:
    using char_type   = charT;
    using int_type    = typename traits::int_type;
    using pos_type    = typename traits::pos_type;
    using off_type    = typename traits::off_type;
    using traits_type = traits;

    // [:en] [#ofstream.cons], constructors \
       [:zh_CN] [#ofstream.cons]，构造函数
    basic_ofstream();
    explicit basic_ofstream(const char* s,
                            ios_base::openmode mode = ios_base::out);
    explicit basic_ofstream(const filesystem::path::value_type* s,
                            ios_base::openmode mode = ios_base::out);   // [:en] wide systems only; see [#fstream.syn] \
                                                                           [:zh_CN] 仅宽字符系统；参见 [#fstream.syn]
    explicit basic_ofstream(const string& s,
                            ios_base::openmode mode = ios_base::out);
    explicit basic_ofstream(const filesystem::path& s,
                            ios_base::openmode mode = ios_base::out);
    basic_ofstream(const basic_ofstream& rhs) = delete;
    basic_ofstream(basic_ofstream&& rhs);

    // [:en] [#ofstream.assign], assign and swap \
       [:zh_CN] [#ofstream.assign]，赋值和交换
    basic_ofstream& operator=(const basic_ofstream& rhs) = delete;
    basic_ofstream& operator=(basic_ofstream&& rhs);
    void swap(basic_ofstream& rhs);

    // [:en] [#ofstream.members], members \
       [:zh_CN] [#ofstream.members]，成员
    basic_filebuf<charT, traits>* rdbuf() const;

    bool is_open() const;
    void open(const char* s, ios_base::openmode mode = ios_base::out);
    void open(const filesystem::path::value_type* s,
              ios_base::openmode mode = ios_base::out);     // [:en] wide systems only; see [#fstream.syn] \
                                                               [:zh_CN] 仅宽字符系统；参见 [#fstream.syn]
    void open(const string& s, ios_base::openmode mode = ios_base::out);
    void open(const filesystem::path& s, ios_base::openmode mode = ios_base::out);
    void close();
  private:
    basic_filebuf<charT, traits> sb;    // [=expos]
  };

  template<class charT, class traits>
    void swap(basic_ofstream<charT, traits>& x,
              basic_ofstream<charT, traits>& y);
}
[codeblock:end]

[para]
[:en] The class [`basic_ofstream<charT, traits>] supports writing to named
files.
[:zh_CN] 类 [`basic_ofstream<charT, traits>] 支持向具名的文件进行写入。

[:en] It uses a [`basic_filebuf<charT, traits>] object to control the associated
sequence.
[:zh_CN] 它利用一个 [`basic_filebuf<charT, traits>] 对象来控制其所关联的序列。

[:en] For the sake of exposition, the maintained data is presented here as:
[:zh_CN] 为阐释目的，此处将其所维护的数据表示为：
[list]
[item]
[:en] [`sb], the [`filebuf] object.
[:zh_CN] [`sb]，[`filebuf] 对象。
[list:end]

[include ofstream.cons]

[include ofstream.assign]

[include ofstream.members]
