[section#fs.dir.entry.mods
    [:en] [`directory_entry] modifiers
    [:zh_CN] [`directory_entry] 改动函数
]

[%@library assign[!directory_entry]]
[%@library directory_entry[!assign]]
[codeblock:declaration]
void assign(const path& p);
void assign(const path& p, error_code& ec);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to [`pathobject = p], then [`refresh()] or [`refresh(ec)],
respectively.
[:zh_CN] 等价于 [`pathobject = p]，然后分别调用 [`refresh()] 或 [`refresh(ec)]。

[:en] If an error occurs, the values of any cached attributes are unspecified.
[:zh_CN] 如果发生了错误，则任何缓存属性的值都是未指明的。

[para:throws]
[:en] As specified in [#fs.err.report].
[:zh_CN] 如 [#fs.err.report] 所述。
[exit:description]

[%@library replace_filename[!directory_entry]]
[%@library directory_entry[!replace_filename]]
[codeblock:declaration]
void replace_filename(const path& p);
void replace_filename(const path& p, error_code& ec);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to [`pathobject.replace_filename(p)], then [`refresh()] or
[`refresh(ec)], respectively.
[:zh_CN] 等价于 [`pathobject.replace_filename(p)]，然后分别调用 [`refresh()] 或
[`refresh(ec)]。

[:en] If an error occurs, the values of any cached attributes are unspecified.
[:zh_CN] 如果发生了错误，则任何缓存属性的值都是未指明的。

[para:throws]
[:en] As specified in [#fs.err.report].
[:zh_CN] 如 [#fs.err.report] 所述。
[exit:description]

[%@library refresh[!directory_entry]]
[%@library directory_entry[!refresh]]
[codeblock:declaration]
void refresh();
void refresh(error_code& ec) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Stores the current values of any cached attributes of the file [`p]
resolves to.
[:zh_CN] 存储 [`p] 所解析到的文件的任何缓存属性的当前值。

[:en] If an error occurs, an error is reported ([#fs.err.report]) and the values
of any cached attributes are unspecified.
[:zh_CN] 如果发生了错误，则报告错误（[#fs.err.report]），而任何缓存属性的值都是
未指明的。

[para:throws]
[:en] As specified in [#fs.err.report].
[:zh_CN] 如 [#fs.err.report] 所述。

[para]
[enter:note]
[:en] Implementations of [`directory_iterator] ([#fs.class.directory_iterator])
are prohibited from directly or indirectly calling the [`refresh] function since
it must access the external file system, and the objective of caching is to
avoid unnecessary file system accesses.
[:zh_CN] 禁止 [`directory_iterator]（[#fs.class.directory_iterator]）的实现直接
或间接调用 [`refresh] 函数，这是由于它必须访问外部文件系统，而缓存的目标却是要
避免不必要的文件系统访问。
[exit:note]
[exit:description]
