[section#iostate.flags
    [:en] Flags functions
    [:zh_CN] 标记函数
]

[%@lib@member operator bool[!basic_ios]]
[codeblock:declaration]
explicit operator bool() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`!fail()].
[:zh_CN] [`!fail()]。
[div:end]

[%@lib@member operator![!basic_ios]]
[codeblock:declaration]
bool operator!() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`fail()].
[:zh_CN] [`fail()]。
[div:end]

[%@lib@member rdstate[!basic_ios]]
[codeblock:declaration]
iostate rdstate() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The error state of the stream buffer.
[:zh_CN] 流缓冲区的错误状态。
[div:end]

[%@lib@member clear[!basic_ios]]
[codeblock:declaration]
void clear(iostate state = goodbit);
[codeblock:end]

[div:description]
[para:effects]
[:en] If [`((state | (rdbuf() ? goodbit : badbit)) & exceptions()) == 0],
returns.
[:zh_CN] 如果 [`((state | (rdbuf() ? goodbit : badbit)) & exceptions()) == 0]，
则返回。

[:en] Otherwise, the function throws an object of class [`ios_base::failure]
([#ios.failure]), constructed with [?impldef argument values to construct
[`ios_base::failure]] argument values.
[:zh_CN] 否则，该函数抛出一个以[?impldef 构造 [`ios_base::failure] 的实参值]
实参值所构造的 [`ios_base::failure] 类（[#ios.failure]）的异常。

[para:ensures]
[:en] If [`rdbuf() != 0] then [`state == rdstate()]; otherwise
[`rdstate() == (state | ios_base::badbit)].
[:zh_CN] 如果 [`rdbuf() != 0] 则有 [`state == rdstate()]；否则有
[`rdstate() == (state | ios_base::badbit)]。
[div:end]

[%@lib@member setstate[!basic_ios]]
[codeblock:declaration]
void setstate(iostate state);
[codeblock:end]

[div:description]
[para:effects]
[:en] Calls [`clear(rdstate() | state)] (which may throw [`ios_base::failure]
([#ios.failure])).
[:zh_CN] 调用 [`clear(rdstate() | state)]（这可能会抛出 [`ios_base::failure]
（[#ios.failure]））。
[div:end]

[%@lib@member good[!basic_ios]]
[codeblock:declaration]
bool good() const;
[codeblock:end]

[div:description]
[para:returns]
[`rdstate() == 0]
[div:end]

[%@lib@member eof[!basic_ios]]
[codeblock:declaration]
bool eof() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if [`eofbit] is set in [`rdstate()].
[:zh_CN] 如果在 [`rdstate()] 中设置了 [`eofbit] 则返回 [`true]。
[div:end]

[%@lib@member fail[!basic_ios]]
[codeblock:declaration]
bool fail() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if [`failbit] or [`badbit] is set in [`rdstate()].[#:note#fn:$1]
[:zh_CN] 如果在 [`rdstate()] 中设置了 [`failbit] 或 [`badbit] 则返回 [`true]。
[#:note#fn:$1]

[note:foot#fn:$1]
[:en] Checking [`badbit] also for [`fail()] is historical practice.
[:zh_CN] 对 [`fail()] 同时检查 [`badbit] 是一种历史遗留实践。
[note:end]
[div:end]

[%@lib@member bad[!basic_ios]]
[codeblock:declaration]
bool bad() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if [`badbit] is set in [`rdstate()].
[:zh_CN] 如果在 [`rdstate()] 中设置了 [`badbit] 则返回 [`true]。
[div:end]

[%@lib@member exceptions[!basic_ios]]
[codeblock:declaration]
iostate exceptions() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A mask that determines what elements set in [`rdstate()] cause exceptions
to be thrown.
[:zh_CN] 一组用于确定设置 [`rdstate()] 中的哪些元素会导致抛出异常的掩码。
[div:end]

[%@lib@member exceptions[!basic_ios]]
[codeblock:declaration]
void exceptions(iostate except);
[codeblock:end]

[div:description]
[para:effects]
[:en] Calls [`clear(rdstate())].
[:zh_CN] 调用 [`clear(rdstate())]。

[para:ensures]
[:en] [`except == exceptions()].
[:zh_CN] [`except == exceptions()]。
[div:end]
