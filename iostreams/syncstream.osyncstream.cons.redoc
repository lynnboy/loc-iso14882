[section#syncstream.osyncstream.cons
    [:en] Construction and destruction
    [:zh_CN] 构造和销毁
]

[%@lib@ctor basic_osyncstream]
[codeblock:declaration]
basic_osyncstream(streambuf_type* buf, const Allocator& allocator);
[codeblock:end]

[div:description]
[para:effects]
[:en] Initializes [`sb] from [`buf] and [`allocator].
[:zh_CN] 以 [`buf] 和 [`allocator] 初始化 [`sb]。

[:en] Initializes the base class with
[`basic_ostream<charT, traits>(addressof(sb))].
[:zh_CN] 以 [`basic_stream<charT, traits>(addressof(sb))] 初始化基类。

[para]
[begin:note]
[:en] The member functions of the provided stream buffer can be called from
[`emit()] while a lock is held, which might result in a deadlock if used
incautiously.
[:zh_CN] 可能会在持有某个锁时从 [`emit()] 中调用所提供的流缓冲区的成员函数，不
谨慎的使用可能会导致死锁。
[end:note]

[para:ensures]
[:en] [`get_wrapped() == buf] is [`true].
[:zh_CN] [`get_wrapped() == buf] 为 [`true]。
[div:end]

[%@lib@ctor basic_osyncstream]
[codeblock:declaration]
basic_osyncstream(basic_osyncstream&& other) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Move constructs the base class and [`sb] from the corresponding subobjects
of [`other], and calls [`basic_ostream<charT, traits>::set_rdbuf(addressof(sb))].
[:zh_CN] 从 [`other] 的对应子对象移动构造基类和 [`sb]，并调用
[`basic_ostream<charT, traits>::set_rdbuf(addressof(sb))]。

[para:ensures]
[:en] The value returned by [`get_wrapped()] is the value returned by
[`other.get_wrapped()] prior to calling this constructor.
[:zh_CN] 由 [`get_wrapped()] 所返回的值是调用这个构造函数之前
[`other.get_wrapped()] 所返回的值。

[:en] [`nullptr == other.get_wrapped()] is [`true].
[:zh_CN] [`nullptr == other.get_wrapped()] 为 [`true]。
[div:end]
