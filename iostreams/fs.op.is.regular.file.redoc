[section#fs.op.is.regular.file
    [:en] Is regular file
    [:zh_CN] 是常规文件
]

[%@library is_regular_file]
[codeblock:declaration]
bool is_regular_file(file_status s) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`s.type() == file_type::regular].
[:zh_CN] [`s.type() == file_type::regular]。
[exit:description]

[%@library is_regular_file]
[codeblock:declaration]
bool is_regular_file(const path& p);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`is_regular_file(status(p))].
[:zh_CN] [`is_regular_file(status(p))]。

[para:throws]
[:en] [`filesystem_error] if [`status(p)] would throw [`filesystem_error].
[:zh_CN] 如果 [`status(p)] 抛出 [`filesystem_error] 则抛出 [`filesystem_error]。
[exit:description]

[%@library is_regular_file]
[codeblock:declaration]
bool is_regular_file(const path& p, error_code& ec) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Sets [`ec] as if by [`status(p, ec)].
[:zh_CN] 如同由 [`status(p, ec)] 来设置 [`ec]。

[enter:note]
[:en] [`file_type::none], [`file_type::not_found] and [`file_type::unknown]
cases set [`ec] to error values.
[:zh_CN] 在 [`file_type::none]、[`file_type::not_found] 和 [`file_type::unknown]
等情况下将 [`ec] 设置为错误值。

[:en] To distinguish between cases, call the [`status] function directly.
[:zh_CN] 为区分这些情况，可以直接调用 [`status] 函数。
[exit:note]

[para:returns]
[:en] [`is_regular_file(status(p, ec))].
[:zh_CN] [`is_regular_file(status(p, ec))]。

[:en] Returns [`false] if an error occurs.
[:zh_CN] 当发生错误时返回 [`false]。
[exit:description]
