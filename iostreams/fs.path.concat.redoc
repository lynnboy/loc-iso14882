[section#fs.path.concat
    [:en] Concatenation
    [:zh_CN] 拼接
]

[%@library operator+=[!path]]
[%@library path[!operator+=]]
[%@library concat[!path]]
[%@library path[!concat]]
[codeblock:declaration]
path& operator+=(const path& x);
path& operator+=(const string_type& x);
path& operator+=(basic_string_view<value_type> x);
path& operator+=(const value_type* x);
path& operator+=(value_type x);
template<class Source>
  path& operator+=(const Source& x);
template<class EcharT>
  path& operator+=(EcharT x);
template<class Source>
  path& concat(const Source& x);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Appends [`path(x).native()] to the pathname in the native format.
[:zh_CN] 向本地格式路径名追加 [`path(x).native()]。

[para:~]
[enter:note]
[:en] This directly manipulates the value of [`native()] and may not be portable
between operating systems.
[:zh_CN] 这样做直接操作 [`native()] 的值，并且可能无法在操作系统之间移植。
[exit:note]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library concat[!path]]
[%@library path[!concat]]
[codeblock:declaration]
template<class InputIterator>
  path& concat(InputIterator first, InputIterator last);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to: [`return *this += path(first, last);]
[:zh_CN] 等价于：[`return *this += path(first, last);]
[exit:description]
