[section#fs.op.rename
    [:en] Rename
    [:zh_CN] 重命名
]

[%@library rename]
[codeblock:declaration]
void rename(const path& old_p, const path& new_p);
void rename(const path& old_p, const path& new_p, error_code& ec) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Renames [`old_p] to [`new_p], as if by POSIX [`rename()].
[:zh_CN] 如同通过 POSIX 的 [`rename()] 来将 [`old_p] 重命名为 [`new_p]。

[para:~]
[begin:note]
[list]
[item]
[:en] If [`old_p] and [`new_p] resolve to the same existing file, no action is
taken.
[:zh_CN] 如果 [`old_p] 和 [`new_p] 解析到同一个现存文件，则不进行任何动作。

[item]
[:en] Otherwise, the rename may include the following effects:
[:zh_CN] 否则，重命名中包括以下效果：

[list]
[item]
[:en@~] if [`new_p] resolves to an existing non-directory file, [`new_p] is
removed; otherwise,
[:zh_CN@~] 若 [`new_p] 解析到某个现存非目录文件，则删除 [`new_p]；否则
[item]
[:en@~] if [`new_p] resolves to an existing directory, [`new_p] is removed if
empty on POSIX compliant operating systems but may be an error on other
operating systems.
[:zh_CN@~] 若 [`new_p] 解析到某个现存目录，则在遵从 POSIX 的操作系统上当其为空
时将删除 [`new_p]，而在其他操作系统上则可能为一个错误。
[list:end]
[list:end]

[:en] A symbolic link is itself renamed, rather than the file it resolves to.
[:zh_CN] 对于符号连接所重命名的是其自身，而不是其所解析到的文件。
[end:note]

[para:throws]
[:en] As specified in [#fs.err.report].
[:zh_CN] 如 [#fs.err.report] 所述。
[end:description]
