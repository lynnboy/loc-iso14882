[section#ostream.inserters.arithmetic
    [:en] Arithmetic inserters
    [:zh_CN] 算术类型插入符
]

[%@library operator<<[!basic_ostream]]
[%@library basic_ostream[!operator<<]]
[codeblock:declaration]
operator<<(bool val);
operator<<(short val);
operator<<(unsigned short val);
operator<<(int val);
operator<<(unsigned int val);
operator<<(long val);
operator<<(unsigned long val);
operator<<(long long val);
operator<<(unsigned long long val);
operator<<(float val);
operator<<(double val);
operator<<(long double val);
operator<<(const void* val);
[codeblock:end]

[div:description]
[para:effects]
[:en] The classes [`num_get<>] and [`num_put<>] handle locale-dependent numeric
formatting and parsing.
[:zh_CN] 类 [`num_get<>] 和 [`num_put<>] 用于处理特定于地域的数值格式化和解析。

[:en] These inserter functions use the imbued [`locale] value to perform numeric
formatting.
[:zh_CN] 这些插入符利用所浸染的 [`locale] 值来实施数值格式化。

[:en] When [`val] is of type [`bool], [`long], [`unsigned long], [`long long],
[`unsigned long long], [`double], [`long double], or [`const void*], the
formatting conversion occurs as if it performed the following code fragment:
[:zh_CN] 当 [`val] 的类型为 [`bool]、[`long]、[`unsigned long]、[`long long]、
[`unsigned long long]、[`double]、[`long double] 或 [`const void*] 时，进行如同
以下代码片段所进行的格式化转换：

[codeblock:notation]
bool failed = use_facet<
  num_put<charT, ostreambuf_iterator<charT, traits>>
    >(getloc()).put(*this, *this, fill(), val).failed();
[codeblock:end]

[:en] When [`val] is of type [`short] the formatting conversion occurs as if it
performed the following code fragment:
[:zh_CN] 当 [`val] 的类型为 [`short] 时，进行如同以下代码片段所进行的格式化转换：

[codeblock:notation]
ios_base::fmtflags baseflags = ios_base::flags() & ios_base::basefield;
bool failed = use_facet<
  num_put<charT, ostreambuf_iterator<charT, traits>>
    >(getloc()).put(*this, *this, fill(),
    baseflags == ios_base::oct || baseflags == ios_base::hex
      ? static_cast<long>(static_cast<unsigned short>(val))
      : static_cast<long>(val)).failed();
[codeblock:end]

[:en] When [`val] is of type [`int] the formatting conversion occurs as if it
performed the following code fragment:
[:zh_CN] 当 [`val] 的类型为 [`int] 时，进行如同以下代码片段所进行的格式化转换：

[codeblock:notation]
ios_base::fmtflags baseflags = ios_base::flags() & ios_base::basefield;
bool failed = use_facet<
  num_put<charT, ostreambuf_iterator<charT, traits>>
    >(getloc()).put(*this, *this, fill(),
    baseflags == ios_base::oct || baseflags == ios_base::hex
      ? static_cast<long>(static_cast<unsigned int>(val))
      : static_cast<long>(val)).failed();
[codeblock:end]

[:en] When [`val] is of type [`unsigned short] or [`unsigned int] the formatting
conversion occurs as if it performed the following code fragment:
[:zh_CN] 当 [`val] 的类型为 [`unsigned short] 或 [`unsigned int] 时，进行如同
以下代码片段所进行的格式化转换：

[codeblock:end]
bool failed = use_facet<
  num_put<charT, ostreambuf_iterator<charT, traits>>
    >(getloc()).put(*this, *this, fill(),
      static_cast<unsigned long>(val)).failed();
[codeblock:end]

[:en] When [`val] is of type [`float] the formatting conversion occurs as if it
performed the following code fragment:
[:zh_CN] 当 [`val] 的类型为 [`float] 时，进行如同以下代码片段所进行的格式化转换：

[codeblock:end]
bool failed = use_facet<
  num_put<charT, ostreambuf_iterator<charT, traits>>
    >(getloc()).put(*this, *this, fill(),
      static_cast<double>(val)).failed();
[codeblock:end]

[para]
[:en] The first argument provides an object of the [`ostreambuf_iterator<>]
class which is an iterator for class [`basic_ostream<>].
[:zh_CN] 第一个实参提供一个 [`ostreambuf_iterator<>] 类的对象，它是类
[`basic_ostream<>] 的一个迭代器。

[:en] It bypasses [`ostream]s and uses [`streambuf]s directly.
[:zh_CN] 它绕过 [`ostream] 而直接使用 [`streambuf]。

[:en] Class [`locale] relies on these types as its interface to iostreams, since
for flexibility it has been abstracted away from direct dependence on
[`ostream].
[:zh_CN] 类 [`locale] 依靠这些类型作为其与 I/O 流的接口，已经将其对 [`ostream]
的直接依赖抽象掉而达成灵活性。

[:en] The second parameter is a reference to the base class subobject of type
[`ios_base].
[:zh_CN] 第二个形参是指代 [`ios_base] 类型的基类子对象的引用。

[:en] It provides formatting specifications such as field width, and a locale
from which to obtain other facets.
[:zh_CN] 它提供了诸如字段宽度等的格式化说明，以及用以从中获取其他刻面的一个地域。

[:en] If [`failed] is [`true] then does [`setstate(badbit)], which may throw an
exception, and returns.
[:zh_CN] 如果 [`failed] 为 [`true]，则执行 [`setstate(badbit)]（这可能回抛出
异常）并返回。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]
