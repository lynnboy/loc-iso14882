[section#re.results.const
    [:en] [`match_results] constructors
    [:zh_CN] [`match_results] 构造函数
]

[para]
[:en] In all [`match_results] constructors, a copy of the [`Allocator] argument
shall be used for any memory allocation performed by the constructor or member
functions during the lifetime of the object.
[:zh_CN] 所有的 [`match_results] 构造函数中，应当使用 [`Allocator] 实参的一个
副本来实施该构造函数或该对象的生存期中的各成员函数所进行的内存分配。

[%@library match_results[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
explicit match_results(const Allocator& a);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an object of class [`match_results].
[:zh_CN] 构造类 [`match_results] 的对象。

[para:postconditions]
[:en] [`ready()] returns [`false].
[:zh_CN] [`ready()] 返回 [`false]，

[:en] [`size()] returns [`0].
[:zh_CN] [`size()] 返回 [`0]。
[exit:description]

[%@library match_results[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
match_results(const match_results& m);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an object of class [`match_results], as a copy of [`m].
[:zh_CN] 构造类 [`match_results] 的对象作为 [`m] 的副本。
[exit:description]

[%@library match_results[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
match_results(match_results&& m) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Move constructs an object of class [`match_results] from [`m] satisfying
the same postconditions as [#re:results:assign].
[:zh_CN] 从 [`m] 移动构造类 [`match_results] 的对象，满足如 [#re:results:assign]
中相同的后条件。

[:en] Additionally, the stored [`Allocator] value is move constructed from
[`m.get_allocator()].
[:zh_CN] 此外，从 [`m.get_allocator()] 移动构造其所存储的 [`Allocator] 值。

[para:throws]
[:en] Nothing.
[:zh_CN] 无。
[exit:description]

[%@library match_results[!operator=]]
[%@library operator=[!match_results]]
[codeblock:declaration]
match_results& operator=(const match_results& m);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Assigns [`m] to [`*this].
[:zh_CN] 将 [`m] 赋值给 [`*this]。

[:en] The postconditions of this function are indicated in [#re:results:assign].
[:zh_CN] [#re:results:assign] 给出了这个函数的后条件。
[exit:description]

[%@library match_results[!operator=]]
[%@library operator=[!match_results]]
[codeblock:declaration]
match_results& operator=(match_results&& m);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Move-assigns [`m] to [`*this].
[:zh_CN] 将 [`m] 移动赋值给 [`*this]。

[:en] The postconditions of this function are indicated in [#re:results:assign].
[:zh_CN] [#re:results:assign] 给出了这个函数的后条件。
[exit:description]

[table:grid#tab:re:results:assign
    [:en] [`match_results] assignment operator effects
    [:zh_CN] [`match_results] 赋值运算符的效果
    [|@code
        [:en] Element
        [:zh_CN] 元素 ]
    [|  [:en] Value
        [:zh_CN] 值 ]
]
[|] ready()
[|] [`m.ready()]
[-]

[|] size()
[|] [`m.size()]
[-]

[|] str(n)
[|] [:en] [`m.str(n)] for all integers [`n < m.size()]
    [:zh_CN] 对于任何整数 [`n < m.size()] 为 [`m.str(n)]
[-]

[|] prefix()
[|] [`m.prefix()]
[-]

[|] suffix()
[|] [`m.suffix()]
[-]

[|] (*this)[n]
[|] [:en] [`m`[n`]] for all integers [`n < m.size()]
    [:zh_CN] 对于任何整数 [`n < m.size()] 为 [`m`[n`]]
[-]
[|] length(n)
[|] [:en] [`m.length(n)] for all integers [`n < m.size()]
    [:zh_CN] 对于任何整数 [`n < m.size()] 为 [`m.length(n)]
[-]

[|] position(n)
[|] [:en] [`m.position(n)] for all integers [`n < m.size()]
    [:zh_CN] 对于任何整数 [`n < m.size()] 为 [`m.position(n)]
[-]
[table:end]
