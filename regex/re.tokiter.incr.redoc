[section#re.tokiter.incr
    [:en] Increment
    [:zh_CN] 增量
]

[%@lib@member regex_token_iterator[!operator++]]
[codeblock:declaration]
regex_token_iterator& operator++();
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs a local variable [`prev] of type [`position_iterator],
initialized with the value of [`position].
[:zh_CN] 构造一个 [`position_iterator] 类型的局部变量 [`prev]，并以 [`position]
的值对其初始化。

[para]
[:en] If [`*this] is a suffix iterator, sets [`*this] to an end-of-sequence
iterator.
[:zh_CN] 若 [`*this] 为后缀迭代器，则将 [`*this] 设置为序列末尾迭代器。

[para]
[:en] Otherwise, if [`N + 1 < subs.size()], increments [`N] and sets [`result]
to the address of the current match.
[:zh_CN] 否则，若 [`N + 1 < subs.size()]，增加 [`N] 并将 [`result] 设置为当前
匹配的地址。

[para]
[:en] Otherwise, sets [`N] to 0 and increments [`position].
[:zh_CN] 否则，将 [`N] 设置为 0 并增加 [`position]。

[:en] If [`position] is not an end-of-sequence iterator the operator sets
[`result] to the address of the current match.
[:zh_CN] 若 [`position] 并非序列末尾迭代器，则该运算符将 [`result] 设置为当前
匹配的地址。

[para]
[:en] Otherwise, if any of the values stored in [`subs] is equal to -1 and
[`prev->suffix().length()] is not 0 the operator sets [`*this] to a suffix
iterator that points to the range
[=range(prev->suffix().first,prev->suffix().second)].
[:zh_CN] 否则，若 [`subs] 中存储的任何值等于 -1，并且 [`prev->suffix().length()]
不是 0，则该构造函数将 [`*this] 设置为指向范围
[=range(prev->suffix().first,prev->suffix().second)]
的后缀迭代器。

[para]
[:en] Otherwise, sets [`*this] to an end-of-sequence iterator.
[:zh_CN] 否则，将 [`*this] 设置为序列末尾迭代器。

[para:returns]
[`*this]
[div:end]

[%@lib@member regex_token_iterator[!operator++]]
[codeblock:declaration]
regex_token_iterator& operator++(int);
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs a copy [`tmp] of [`*this], then calls [`++(*this)].
[:zh_CN] 构造 [`*this] 的一个副本 [`tmp]，然后调用 [`++(*this)]。

[para:returns]
[:en] [`tmp].
[:zh_CN] [`tmp]。
[div:end]
