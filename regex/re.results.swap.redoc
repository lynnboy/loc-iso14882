[section#re.results.swap
    [:en] Swap
    [:zh_CN] 交换
]

[%@library match_results[!swap]]
[%@library swap[!match_results]]
[codeblock:declaration]
void swap(match_results& that);
[codeblock:end]

[div:description]
[para:effects]
[:en] Swaps the contents of the two sequences.
[:zh_CN] 交换两个序列的内容。

[para:ensures]
[:en] [`*this] contains the sequence of matched sub-expressions that were in
[`that], [`that] contains the sequence of matched sub-expressions that were in
[`*this].
[:zh_CN] [`*this] 包含 [`that] 中曾有的匹配子表达式序列，[`that] 包含 [`*this]
中曾有的匹配子表达式序列。

[para:complexity]
[:en] Constant time.
[:zh_CN] 常量时间。
[div:end]

[%@library match_results[!swap]]
[%@library swap[!match_results]]
[codeblock:declaration]
template<class BidirectionalIterator, class Allocator>
  void swap(match_results<BidirectionalIterator, Allocator>& m1,
            match_results<BidirectionalIterator, Allocator>& m2);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`m1.swap(m2)].
[:zh_CN] 如同执行 [`m1.swap(m2)]。
[div:end]
