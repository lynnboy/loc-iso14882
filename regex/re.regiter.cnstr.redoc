[section#re.regiter.cnstr
    [:en] [`regex_iterator] constructors
    [:zh_CN] [`regex_iterator] 构造函数
]

[%@library regex_iterator[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
regex_iterator();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an end-of-sequence iterator.
[:zh_CN] 构造序列末尾迭代器。
[exit:description]

[%@library regex_iterator[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
regex_iterator(BidirectionalIterator a, BidirectionalIterator b,
               const regex_type& re,
               regex_constants::match_flag_type m = regex_constants::match_default);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Initializes [`begin] and [`end] to [`a] and [`b], respectively, sets
[`pregex] to [`&re], sets [`flags] to [`m], then calls
[`regex_search(begin, end, match, *pregex, flags)].
[:zh_CN] 将 [`begin] 和 [`end] 分别初始化为 [`a] 和 [`b]，将 [`pregex] 设置为
[`&re]，将 [`flags] 设置为 [`m]，然后调用
[`regex_search(begin, end, match, *pregex, flags)]。

[:en] If this call returns [`false] the constructor sets [`*this] to the
end-of-sequence iterator.
[:zh_CN] 如果这次调用返回 [`false]，则构造函数将 [`*this] 设置为序列末尾迭代器。
[exit:description]
