[section#re.req
    [:en] Requirements
    [:zh_CN] 规定
]

[para]
[:en] This subclause defines requirements on classes representing regular
expression traits.
[:zh_CN] 本子条款定义了对表示正则表达式特征的类的规定。

[begin:note]
[:en] The class template [`regex_traits], defined in [#re.traits], meets these
requirements.
[:zh_CN] 定义于 [#re.traits] 中的类模板 [`regex_traits] 满足这些规定。
[end:note]

[para]
[:en] The class template [`basic_regex], defined in [#re.regex], needs a set of
related types and functions to complete the definition of its semantics.
[:zh_CN] 定义于 [#re.regex] 中的类模板 [`basic_regex]，需要一组相互关联的类型和
函数来完成对其语义的定义。

[:en] These types and functions are provided as a set of member [~typedef-name]s
and functions in the template parameter [`traits] used by the [`basic_regex]
class template.
[:zh_CN] 这些类型和函数作为由 [`basic_regex] 类模板所使用的模板形参 [`traits] 中
的一组成员 [~typedef-名]和成员函数的形式提供。

[:en] This subclause defines the semantics of these members.
[:zh_CN] 本子条款定义了这些成员的语义。

[para]
[:en] To specialize class template [`basic_regex] for a character container
[`CharT] and its related regular expression traits class [`Traits], use
[`basic_regex<CharT, Traits>].
[:zh_CN] 要针对某种字符容器类型 [`CharT] 及其相关的正则表达式特征类 [`Traits] 对
类模板 [`basic_regex] 进行特化，可使用 [`basic_regex<CharT, Traits>]。

[para]
[:en]
[%regular expression traits[!requirements]]
[%requirements[!regular expression traits]]
[%regular expression[!requirements]]
[%locale]
In [#:tab#re.req] [`X] denotes a traits class defining types and functions for
the character container type [`charT]; [`u] is an object of type [`X]; [`v] is
an object of type [`const X]; [`p] is a value of type [`const charT*]; [`I1] and
[`I2] are input iterators ([#input.iterators]); [`F1] and [`F2] are forward
iterators ([#forward.iterators]); [`c] is a value of type [`const charT]; [`s]
is an object of type [`X::string_type]; [`cs] is an object of type
[`const X::string_type]; [`b] is a value of type [`bool]; [`I] is a value of
type [`int]; [`cl] is an object of type [`X::char_class_type], and [`loc] is an
object of type [`X::locale_type].
[:zh_CN]
[%正则表达式特征[!规定]]
[%规定[!正则表达式特征]]
[%正则表达式[!规定]]
[%地域]
[#:tab#re.req] 中，[`X] 代表为字符容器类型 [`charT] 定义了类型和函数的特征类；
[`u] 为类型 [`X] 的对象；[`v] 为类型 [`const X] 的对象；[`p] 为类型
[`const charT*] 的值；[`I1] 和 [`I2] 为输入迭代器（[#input.iterators]）；[`F1]
和 [`F2] 为前向迭代器（[#forward.iterators]）；[`c] 为类型 [`const charT] 的值；
[`s] 为类型 [`X::string_type] 的对象；[`cs] 为类型 [`const X::string_type] 的
对象；[`b] 为类型 [`bool] 的值；[`I] 为类型 [`int] 的值；[`cl] 为类型
[`X::char_class_type] 的对象，而 [`loc] 为类型 [`X::locale_type] 的对象。

[table:grid#re.req
    [:en] Regular expression traits class requirements
    [:zh_CN] 正则表达式特征类的规定
    [|
        [:en] Expression
        [:zh_CN] 表达式
    ]
    [|
        [:en] Return type
        [:zh_CN] 返回类型
    ]
    [|
        [:en] Assertion/note pre-/post-condition
        [:zh_CN] 断言/注解 前/后条件
    ]
]
[|] [`X::char_type]
[|] [`charT]
[|] [:en] The character container type used in the implementation of class
    template [`basic_regex].
    [:zh_CN] 类模板 [`basic_regex] 的实现中所使用的字符容器类型。
[-]

[|] [`X::string_type]
[|] [`basic_string<charT>]
[|]
[-]

[:en] [%locale]
[:zh_CN] [%地域]
[|] [`X::locale_type]
[|] [:en] A copy constructible type
    [:zh_CN] 一种可复制构造的类型
[|] [:en] A type that represents the locale used by the traits class.
    [:zh_CN] 代表特征类所使用的地域的类型。
[-]

[|] [`X::char_class_type]
[|] [:en] A bitmask type ([#bitmask.types]).
    [:zh_CN] 一种掩码类型（[#bitmask.types]）。
[|] [:en] A bitmask type representing a particular character classification.
    [:zh_CN] 一种表示特定的字符分类的掩码类型。
[-]

[|] [`X::length(p)]
[|] [`size_t]
[|] [:en] Yields the smallest [`i] such that [`p`[i`] == 0].
    [:zh_CN] 产生最小的 [`i]，使得 [`p`[i`] == 0]。
    [:en] Complexity is linear in [`i].
    [:zh_CN] 对于 [`i] 为线性复杂度
[-]

[|] [`v.translate(c)]
[|] [`X::char_type]
[|] [:en] Returns a character such that for any character [`d] that is to
    be considered equivalent to [`c] then [`v.translate(c) == v.translate(d)].
    [:zh_CN] 返回一个字符，使得对于任何被认为等价于 [`c] 的字符 [`d]，都有
    [`v.translate(c) == v.translate(d)]。
[-]

[|] [`v.translate_nocase(c)]
[|] [`X::char_type]
[|] [:en] For all characters [`C] that are to be considered equivalent
    to [`c] when comparisons are to be performed without regard to case, then
    [`v.translate_nocase(c) == v.translate_nocase(C)].
    [:zh_CN] 对于任何被任何等价于 [`c] 的字符 [`C]，当进行比较时不考虑大小写时，
    有 [`v.translate_nocase(c) == v.translate_nocase(C)]。
[-]

[|] [`v.transform(F1, F2)]
[|] [`X::string_type]
[|] [:en] Returns a sort key for the character sequence designated by the
    iterator range [=range(F1,F2)] such that if the character sequence
    [=range(G1,G2)] sorts before the character sequence [=range(H1,H2)] then
    [`v.transform(G1, G2) < v.transform(H1, H2)].
    [:zh_CN] 返回针对由迭代器范围 [=range(F1,F2)] 所代表的字符序列的排序键值，
    使得如果字符序列 [=range(G1,G2)] 排序时在字符序列 [=range(H1,H2)] 之前，则有
    [`v.transform(G1, G2) < v.transform(H1, H2)]。
[-]

[|] [`v.transform_primary(F1, F2)]
[|] [`X::string_type]
[|] [:en] Returns a sort key for the character sequence designated by the
    iterator range [=range(F1,F2)] such that if the character sequence
    [=range(G1,G2)] sorts before the character sequence [=range(H1,H2)] when
    character case is not considered then
    [`v.transform_primary(G1, G2) < v.transform_primary(H1, H2)].
    [:zh_CN] 返回针对由迭代器范围 [=range(F1,F2)] 所代表的字符序列的排序键值，
    使得如果字符序列 [=range(G1,G2)] 不考虑大小写的排序时在字符序列
    [=range(H1,H2)] 之前，则有
    [`v.transform_primary(G1, G2) < v.transform_primary(H1, H2)]。
[-]

[|] [`v.lookup_collatename(F1, F2)]
[|] [`X::string_type]
[|] [:en] Returns a sequence of characters that represents the collating element
    consisting of the character sequence designated by the iterator range
    [=range(F1,F2)].
    [:zh_CN] 返回一个表示由迭代器范围 [=range(F1,F2)] 所代表的字符序列所构成的
    校排元素的字符序列。
    [:en] Returns an empty string if the character sequence is not a valid
    collating element.
    [:zh_CN] 当该字符序列不是有效的校排序列时返回空字符串。
[-]

[|] [`v.lookup_classname(F1, F2, b)]
[|] [`X::char_class_type]
[|] [:en] Converts the character sequence designated by the iterator range
    [=range(F1,F2)] into a value of a bitmask type that can subsequently be
    passed to [`isctype].
    [:zh_CN] 将由迭代器范围 [=range(F1,F2)] 所代表的字符序列转换为一个可以随后
    被传递给 [`isctype] 的掩码类型的值。
    [:en] Values returned from [`lookup_classname] can be bitwise
    [?logop OR][=']ed together; the resulting value represents membership in
    either of the corresponding character classes.
    [:zh_CN] 由 [`lookup_classname] 所返回的各值可以通过按位或组合起来；其结果值
    表示在各个对应字符类中的成员性。
    [:en] If [`b] is [`true], the returned bitmask is suitable for matching
    characters without regard to their case.
    [:zh_CN] 当 [`b] 为 [`true] 时，所返回的掩码适用于进行不关心字符的大小写的
    字符匹配。
    [:en] Returns [`0] if the character sequence is not the name of a character
    class recognized by [`X].
    [:zh_CN] 如果该在废墟不是由 [`X] 所识别的字符类的名字，则返回 [`0]。
    [:en] The value returned shall be independent of the case of the characters
    in the sequence.
    [:zh_CN] 所返回的值应当与该序列中的字符的大小写无关。
[-]

[|] [`v.isctype(c, cl)]
[|] [`bool]
[|] [:en] Returns [`true] if character [`c] is a member of one of the character
    classes designated by [`cl], [`false] otherwise.
    [:zh_CN] 当字符 [`c] 是由 [`cl] 所指定的各字符类之一的成员时，返回 [`true]，
    否则返回 [`false]。
[-]

[|] [`v.value(c, I)]
[|] [`int]
[|] [:en] Returns the value represented by the digit [`c] in base [`I] if the
    character [`c] is a valid digit in base [`I]; otherwise returns [`-1].
    [:zh_CN] 当 [`c] 是有效的以 [`I] 为基的数字时，返回以 [`I] 为基的数字 [`c]
    的值表示；否则返回 [`-1]。
    [begin:note]
    [:en] The value of [`I] will only be 8, 10, or 16.
    [:zh_CN] [`I] 的值只能为 8、10 或 16。
    [end:note]
[-]

[:en] [%locale]
[:zh_CN] [%地域]
[|] [`u.imbue(loc)]
[|] [`X::locale_type]
[|] [:en] Imbues [`u] with the locale [`loc] and returns the previous locale
    used by [`u] if any.
    [:zh_CN] 以地域 [`loc] 浸染 [`u]，并返回 [`u] 之前所使用的地域（如果有）。
[-]

[:en] [%locale]
[:zh_CN] [%地域]
[|] [`v.getloc()]
[|] [`X::locale_type]
[|] [:en] Returns the current locale used by [`v], if any.
    [:zh_CN] 返回 [`v] 所使用的当前地域（如果有）。
[-]
[table:end]

[para]
[begin:note]
[:en] Class template [`regex_traits] meets the requirements for a regular
expression traits class when it is specialized for [`char] or [`wchar_t].
[:zh_CN] 类模板 [`regex_traits]，当针对 [`char] 或 [`wchar_t] 所特化时，满足对
正则表达式特征类的规定。

[:en] This class template is described in the header [?libheader regex], and is
described in [#re.traits].
[:zh_CN] 该类模板在头文件 [?libheader regex] 中说明，并在 [#re.traits] 中说明。
[end:note]
