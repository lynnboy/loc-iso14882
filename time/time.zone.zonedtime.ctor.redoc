[section#time.zone.zonedtime.ctor
    [:en] Constructors
    [:zh_CN] 构造函数
]

[%:begin@lib@ctor#zonedtime.ctor zoned_time]

[codeblock:declaration]
zoned_time();
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`traits::default_zone()] is a well-formed expression.
[:zh_CN] 除非 [`traits::default_zone()] 是良构表达式，否则这个构造函数不能参与
重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with
[`traits::default_zone()] and default constructing [`tp_].
[:zh_CN] 通过以 [`traits::default_zone()] 初始化 [`zone_] 并默认初始化 [`tp_]
构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
zoned_time(const sys_time<Duration>& st);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`traits::default_zone()] is a well-formed expression.
[:zh_CN] 除非 [`traits::default_zone()] 是良构表达式，否则这个构造函数不能参与
重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with
[`traits::default_zone()] and [`tp_] with [`st].
[:zh_CN] 通过以 [`traits::default_zone()] 初始化 [`zone_] 并以 [`st] 初始化
[`tp_] 构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
explicit zoned_time(TimeZonePtr z);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`z] refers to a time zone.
[:zh_CN] [`z] 指代某个时区。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`std::move(z)].
[:zh_CN] 通过以 [`std::move(z)] 初始化 [`zone_] 构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
explicit zoned_time(string_view name);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`traits::locate_zone(string_view{})] is a well-formed expression and
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(string_view{})].
[:zh_CN] 除非 [`traits::locate_zone(string_view{})] 是良构表达式，并且
[`zoned_time] 可以从 [`traits::locate_zone(string_view{})] 的返回类型进行构造，
否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with
[`traits::locate_zone(name)] and default constructing [`tp_].
[:zh_CN] 通过以 [`traits::locate_zone(name)] 初始化 [`zone_] 并默认构造 [`tp_]
构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
template<class Duration2>
  zoned_time(const zoned_time<Duration2, TimeZonePtr>& y) noexcept;
[codeblock:end]

[div:description]
[para:remarks]
[:en] Does not participate in overload resolution unless
[`sys_time<Duration2>] is implicitly convertible to [`sys_time<Duration>].
[:zh_CN] 除非 [`sys_time<Duration2>] 可以隐式转换为 [`sys_time<Duration>]，否则
不参与重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`y.zone_] and
[`tp_] with [`y.tp_].
[:zh_CN] 通过以 [`y.zone_] 初始化 [`zone_] 并以 [`y.tp_] 初始化 [`tp_] 构造一个
[`zoned_time]。
[div:end]

[codeblock:declaration]
zoned_time(TimeZonePtr z, const sys_time<Duration>& st);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`z] refers to a time zone.
[:zh_CN] [`z] 指代某个时区。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`std::move(z)]
and [`tp_] with [`st].
[:zh_CN] 通过以 [`std::move(z)] 初始化 [`zone_] 并以 [`st] 初始化 [`tp_] 构造
一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
zoned_time(string_view name, const sys_time<Duration>& st);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(name)] and [`st].
[:zh_CN] 除非 [`zoned_time] 可以从 [`traits::locate_zone(name)] 的返回类型和
[`st] 进行构造，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Equivalent to construction with [`{traits::locate_zone(name), st}].
[:zh_CN] 等价于由 [`{traits::locate_zone(name), st}] 进行的构造。
[div:end]

[codeblock:declaration]
zoned_time(TimeZonePtr z, const local_time<Duration>& tp);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`z] refers to a time zone.
[:zh_CN] [`z] 指代某个时区。

[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[:zh_CN] 除非

[codeblock]
decltype(declval<TimeZonePtr&>()->to_sys(local_time<Duration>{}))
[codeblock:end]

[:en@~] is convertible to [`sys_time<duration>].
[:zh_CN@~] 可以转换为 [`sys_time<duration>]，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`std::move(z)]
and [`tp_] with [`zone_->to_sys(tp)].
[:zh_CN] 通过以 [`std::move(z)] 初始化 [`zone_] 并以 [`zone_->to_sys(tp)] 初始化
[`tp_] 构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
zoned_time(string_view name, const local_time<Duration>& tp);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(name)] and [`tp].
[:zh_CN] 除非 [`zoned_time] 可以从 [`traits::locate_zone(name)] 的返回类型和
[`tp] 进行构造，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Equivalent to construction with [`{traits::locate_zone(name), tp}].
[:zh_CN] 等价于由 [`{traits::locate_zone(name), tp}] 进行的构造。
[div:end]

[codeblock:declaration]
zoned_time(TimeZonePtr z, const local_time<Duration>& tp, choose c);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`z] refers to a time zone.
[:zh_CN] [`z] 指代某个时区。

[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[:zh_CN] 除非

[codeblock]
decltype(declval<TimeZonePtr&>()->to_sys(local_time<Duration>{}, choose::earliest))
[codeblock:end]

[:en@~] is convertible to [`sys_time<duration>].
[:zh_CN@~] 可以转换为 [`sys_time<duration>]，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`std::move(z)]
and [`tp_] with [`zone_->to_sys(tp, c)].
[:zh_CN] 通过以 [`std::move(z)] 初始化 [`zone_] 并以 [`zone_->to_sys(tp, c)]
初始化 [`tp_] 构造一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
zoned_time(string_view name, const local_time<Duration>& tp, choose c);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(name)], [`local_time<Duration>], and [`choose].
[:zh_CN] 除非 [`zoned_time] 可以从 [`traits::locate_zone(name)] 的返回类型、
[`local_time<Duration>] 和 [`choose] 进行构造，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Equivalent to construction with [`{traits::locate_zone(name), tp, c}].
[:zh_CN] 等价于由 [`{traits::locate_zone(name), tp, c}] 进行的构造。
[div:end]

[codeblock:declaration]
template<class Duration2, class TimeZonePtr2>
  zoned_time(TimeZonePtr z, const zoned_time<Duration2, TimeZonePtr2>& y);
[codeblock:end]

[div:description]
[para:remarks]
[:en] Does not participate in overload resolution unless [`sys_time<Duration2>]
is implicitly convertible to [`sys_time<Duration>].
[:zh_CN] 除非 [`sys_time<Duration2>] 可以隐式转换为 [`sys_time<Duration>]，否则
不参与重载决议。

[para:requires]
[:en] [`z] refers to a valid time zone.
[:zh_CN] [`z] 指代某个有效时区。

[para:effects]
[:en] Constructs a [`zoned_time] by initializing [`zone_] with [`std::move(z)]
and [`tp_] with [`y.tp_].
[:zh_CN] 通过以 [`std::move(z)] 初始化 [`zone_] 并以 [`y.tp_] 初始化 [`tp_] 构造
一个 [`zoned_time]。
[div:end]

[codeblock:declaration]
template<class Duration2, class TimeZonePtr2>
  zoned_time(TimeZonePtr z, const zoned_time<Duration2, TimeZonePtr2>& y, choose);
[codeblock:end]

[div:description]
[para:remarks]
[:en] Does not participate in overload resolution unless
[`sys_time<Duration2>] is implicitly convertible to [`sys_time<Duration>].
[:zh_CN] 除非 [`sys_time<Duration2>] 可以隐式转换为 [`sys_time<Duration>]，否则
不参与重载决议。

[para:requires]
[:en] [`z] refers to a valid time zone.
[:zh_CN] [`z] 指代某个有效时区。

[para:effects]
[:en] Equivalent to construction with [`{z, y}].
[:zh_CN] 等价于由 [`{z, y}] 进行的构造。

[para]
[begin:note]
[:en] The [`choose] parameter has no effect.
[:zh_CN] [`choose] 形参没有效果。
[end:note]
[div:end]

[codeblock:declaration]
zoned_time(string_view name, const zoned_time<Duration>& y);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(name)] and [`zoned_time].
[:zh_CN] 除非 [`zoned_time] 可以从 [`traits::locate_zone(name)] 的返回类型和
[`zoned_time] 进行构造，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Equivalent to construction with [`{traits::locate_zone(name), y}].
[:zh_CN] 等价于由 [`{traits::locate_zone(name), y}] 进行的构造。
[div:end]

[codeblock:declaration]
zoned_time(string_view name, const zoned_time<Duration>& y, choose c);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This constructor does not participate in overload resolution unless
[`zoned_time] is constructible from the return type of
[`traits::locate_zone(name)], [`zoned_time], and [`choose].
[:zh_CN] 除非 [`zoned_time] 可以从 [`traits::locate_zone(name)] 的返回类型、
[`zoned_time] 和 [`choose] 进行构造，否则这个构造函数不能参与重载决议。

[para:effects]
[:en] Equivalent to construction with [`{traits::locate_zone(name), y, c}].
[:zh_CN] 等价于由 [`{traits::locate_zone(name), y, c}] 进行的构造。

[para]
[begin:note]
[:en] The [`choose] parameter has no effect.
[:zh_CN] [`choose] 形参没有效果。
[end:note]
[div:end]

[%:end#zonedtime.ctor]
