[section#time.cal.ymwdlast.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@lib@member operator==[!year_month_weekday_last]]
[codeblock:declaration]
constexpr bool operator==(const year_month_weekday_last& x,
                          const year_month_weekday_last& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock]
x.year() == y.year() && x.month() == y.month() && x.weekday_last() == y.weekday_last()
[codeblock:end]
[div:end]

[%@lib@member operator+[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator+(const year_month_weekday_last& ymwdl, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`(ymwdl.year() / ymwdl.month() + dm) / ymwdl.weekday_last()].
[:zh_CN] [`(ymwdl.year() / ymwdl.month() + dm) / ymwdl.weekday_last()]。
[div:end]

[%@lib@member operator+[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator+(const months& dm, const year_month_weekday_last& ymwdl) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymwdl + dm].
[:zh_CN] [`ymwdl + dm]。
[div:end]

[%@lib@member operator-[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator-(const year_month_weekday_last& ymwdl, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymwdl + (-dm)].
[:zh_CN] [`ymwdl + (-dm)]。
[div:end]

[%@lib@member operator+[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator+(const year_month_weekday_last& ymwdl, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`{ymwdl.year()+dy, ymwdl.month(), ymwdl.weekday_last()}].
[:zh_CN] [`{ymwdl.year()+dy, ymwdl.month(), ymwdl.weekday_last()}]。
[div:end]

[%@lib@member operator+[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator+(const years& dy, const year_month_weekday_last& ymwdl) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymwdl + dy].
[:zh_CN] [`ymwdl + dy]。
[div:end]

[%@lib@member operator-[!year_month_weekday_last]]
[codeblock:declaration]
constexpr year_month_weekday_last
  operator-(const year_month_weekday_last& ymwdl, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymwdl + (-dy)].
[:zh_CN] [`ymwdl + (-dy)]。
[div:end]

[%@lib@member operator<<[!year_month_weekday_last]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const year_month_weekday_last& ymwdl);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
return os << format(os.getloc(), [[redoc("^", "n>")]]STATICALLY-WIDEN<charT>("{}/{}/{}"),
                    ymwdl.year(), ymwdl.month(), ymwdl.weekday_last());
[codeblock:end]
[div:end]
