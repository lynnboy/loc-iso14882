[section#time.duration.comparisons
    [:en] Comparisons
    [:zh_CN] 比较
]

[para]
[:en]
In the function descriptions that follow, [`CT] represents [`common_type_t<A, B>],
where [`A] and [`B] are the types of the two arguments to the function.
[:zh_CN]
在以下函数说明中，[`CT] 表示 [`common_type_t<A, B>]，其中 [`A] 和 [`B] 是函数
的两个实参的类型。

[%@lib@member operator==[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
  constexpr bool operator==(const duration<Rep1, Period1>& lhs,
                            const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`CT(lhs).count() == CT(rhs).count()].
[:zh_CN] [`CT(lhs).count() == CT(rhs).count()]。
[div:end]

[%@lib@member operator<[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
  constexpr bool operator<(const duration<Rep1, Period1>& lhs,
                           const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`CT(lhs).count() < CT(rhs).count()].
[:zh_CN] [`CT(lhs).count() < CT(rhs).count()]。
[div:end]

[%@lib@member operator>[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
  constexpr bool operator>(const duration<Rep1, Period1>& lhs,
                           const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`rhs < lhs].
[:zh_CN] [`rhs < lhs]。
[div:end]

[%@lib@member operator<=[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
  constexpr bool operator<=(const duration<Rep1, Period1>& lhs,
                            const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`!(rhs < lhs)].
[:zh_CN] [`!(rhs < lhs)]。
[div:end]

[%@lib@member operator>=[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
  constexpr bool operator>=(const duration<Rep1, Period1>& lhs,
                            const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`!(lhs < rhs)].
[:zh_CN] [`!(lhs < rhs)]。
[div:end]

[%@lib@member operator<=>[!duration]]
[codeblock:declaration]
template<class Rep1, class Period1, class Rep2, class Period2>
    requires [[redoc("`:c>")]]three_way_comparable<typename CT::rep>
  constexpr auto operator<=>(const duration<Rep1, Period1>& lhs,
                             const duration<Rep2, Period2>& rhs);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`CT(lhs).count() <=> CT(rhs).count()].
[:zh_CN] [`CT(lhs).count() <=> CT(rhs).count()]。
[div:end]
