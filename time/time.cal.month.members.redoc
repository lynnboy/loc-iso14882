[section#time.cal.month.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@library month[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr explicit month(unsigned m) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Constructs an object of type [`month] by initializing [`m_] with [`m].
[:zh_CN] 通过以 [`m] 初始化 [`m_] 构造 [`month] 类型的对象。

[:en] The value held is unspecified if [`m] is not in the range [=crange(0,255)].
[:zh_CN] 若 [`m] 不在范围 [=crange(0,255)] 之中则未指明其所持有的值。
[end:description]

[%@library operator++[!month]]
[%@library month[!operator++]]
[codeblock:declaration]
constexpr month& month::operator++() noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`*this += months{1}].
[:zh_CN] [`*this += months{1}]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library operator++[!month]]
[%@library month[!operator++]]
[codeblock:declaration]
constexpr month operator++(int) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`++(*this)].
[:zh_CN] [`++(*this)]。

[para:returns]
[:en] A copy of [`*this] as it existed on entry to this member function.
[:zh_CN] 返回 [`*this] 在进入该成员函数时的一个副本。
[end:description]

[%@library operator--[!month]]
[%@library month[!operator--]]
[codeblock:declaration]
constexpr month& operator--() noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`*this -= months{1}].
[:zh_CN] [`*this -= months{1}]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library operator--[!month]]
[%@library month[!operator--]]
[codeblock:declaration]
constexpr month operator--(int) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`--(*this)].
[:zh_CN] [`--(*this)]。

[para:returns]
[:en] A copy of [`*this] as it existed on entry to this member function.
[:zh_CN] 返回 [`*this] 在进入该成员函数时的一个副本。
[end:description]

[%@library operator+=[!month]]
[%@library month[!operator+=]]
[codeblock:declaration]
constexpr month& operator+=(const months& m) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`*this = *this + m].
[:zh_CN] [`*this = *this + m]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library operator-=[!month]]
[%@library month[!operator-=]]
[codeblock:declaration]
constexpr month& operator-=(const months& m) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] [`*this = *this - m].
[:zh_CN] [`*this = *this - m]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library operator unsigned[!month]]
[%@library month[!operator unsigned]]
[codeblock:declaration]
constexpr explicit month::operator unsigned() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`m_].
[:zh_CN] [`m_]。
[end:description]

[%@library ok[!month]]
[%@library month[!ok]]
[codeblock:declaration]
constexpr bool month::ok() const noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`1 <= m_ && m_ <= 12].
[:zh_CN] [`1 <= m_ && m_ <= 12]。
[end:description]
