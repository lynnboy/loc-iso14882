[section#time.point
    [:en] Class template [`time_point]
    [:zh_CN] 类模板 [`time_point]
]

[%@library time_point]
[codeblock:synopsis]
namespace std::chrono {
  template<class Clock, class Duration = typename Clock::duration>
  class time_point {
  public:
    using clock    = Clock;
    using duration = Duration;
    using rep      = typename duration::rep;
    using period   = typename duration::period;

  private:
    duration d_;                                                // [=expos]

  public:
    // [:en] [#time.point.cons], construct \
       [:zh_CN] [#time.point.cons]，构造
    constexpr time_point();                                     // [:en] has value epoch \
                                                                   [:zh_CN] 具有纪元的值
    constexpr explicit time_point(const duration& d);           // [:en] same as [`time_point() + d] \
                                                                   [:zh_CN] 与 [`time_point() + d] 相同
    template<class Duration2>
      constexpr time_point(const time_point<clock, Duration2>& t);

    // [:en] [#time.point.observer], observer \
       [:zh_CN] [#time.point.observer]，探察函数
    constexpr duration time_since_epoch() const;

    // [:en] [#time.point.arithmetic], arithmetic \
       [:zh_CN] [#time.point.arithmetic]，算术
    constexpr time_point& operator++();
    constexpr time_point operator++(int);
    constexpr time_point& operator--();
    constexpr time_point operator--(int);
    constexpr time_point& operator+=(const duration& d);
    constexpr time_point& operator-=(const duration& d);

    // [:en] [#time.point.special], special values \
       [:zh_CN] [#time.point.special]，特殊的值
    static constexpr time_point min() noexcept;
    static constexpr time_point max() noexcept;
  };
}
[codeblock:end]

[para]
[:en]
[`Clock] shall either meet the [*Cpp17Clock] requirements ([#time.clock.req])
or be the type [`local_t].
[:zh_CN]
[`Clock] 应当要么满足 [*Cpp17Clock] 的规定（[#time.clock.req]）要么为类型
[`local_t]。

[para]
[:en]
If [`Duration] is not an instance of [`duration], the program is ill-formed.
[:zh_CN]
如果 [`Duration] 不是 [`duration] 的实例，则程序非良构。

[include time.point.cons]

[include time.point.observer]

[include time.point.arithmetic]

[include time.point.special]

[include time.point.nonmember]

[include time.point.comparisons]

[include time.point.cast]
