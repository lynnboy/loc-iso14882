[section#time.duration.arithmetic
    [:en] Arithmetic
    [:zh_CN] 算术
]

[%@lib@member operator+[!duration]]
[codeblock:declaration]
constexpr common_type_t<duration> operator+() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`common_type_t<duration>(*this)].
[:zh_CN] [`common_type_t<duration>(*this)]。
[div:end]

[%@lib@member operator-[!duration]]
[codeblock:declaration]
constexpr common_type_t<duration> operator-() const;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`common_type_t<duration>(-rep_)].
[:zh_CN] [`common_type_t<duration>(-rep_)]。
[div:end]

[%@lib@member operator++[!duration]]
[codeblock:declaration]
constexpr duration& operator++();
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`++rep_].
[:zh_CN] 等价于：[`++rep_]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator++[!duration]]
[codeblock:declaration]
constexpr duration operator++(int);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return duration(rep_++);]
[:zh_CN] 等价于：[`return duration(rep_++);]
[div:end]

[%@lib@member operator--[!duration]]
[codeblock:declaration]
constexpr duration& operator--();
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`--rep_].
[:zh_CN] 等价于：[`--rep_]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator--[!duration]]
[codeblock:declaration]
constexpr duration operator--(int);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return duration(rep_--);]
[:zh_CN] 等价于：[`return duration(rep_--);]
[div:end]

[%@lib@member operator+=[!duration]]
[codeblock:declaration]
constexpr duration& operator+=(const duration& d);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ += d.count()].
[:zh_CN] 等价于：[`rep_ += d.cound()]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator-=[!duration]]
[codeblock:declaration]
constexpr duration& operator-=(const duration& d);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ -= d.count()].
[:zh_CN] 等价于：[`rep_ -= d.count()]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator*=[!duration]]
[codeblock:declaration]
constexpr duration& operator*=(const rep& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ *= rhs].
[:zh_CN] 等价于：[`rep_ *= rhs]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator/=[!duration]]
[codeblock:declaration]
constexpr duration& operator/=(const rep& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ /= rhs].
[:zh_CN] 等价于：[`rep_ /= rhs]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator%=[!duration]]
[codeblock:declaration]
constexpr duration& operator%=(const rep& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ %= rhs].
[:zh_CN] 等价于：[`rep_ %= rhs]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@lib@member operator%=[!duration]]
[codeblock:declaration]
constexpr duration& operator%=(const duration& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`rep_ %= rhs.count()].
[:zh_CN] 等价于：[`rep_ %= rhs.cound()]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]
