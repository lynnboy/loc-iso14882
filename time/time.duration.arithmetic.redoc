[section#time.duration.arithmetic
    [:en] Arithmetic
    [:zh_CN] 算术
]

[%@library operator+[!duration]]
[%@library duration[!operator+]]
[codeblock:declaration]
constexpr common_type_t<duration> operator+() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`common_type_t<duration>(*this)].
[:zh_CN] [`common_type_t<duration>(*this)]。
[exit:description]

[%@library operator-[!duration]]
[%@library duration[!operator-]]
[codeblock:declaration]
constexpr common_type_t<duration> operator-() const;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`common_type_t<duration>(-rep_)].
[:zh_CN] [`common_type_t<duration>(-rep_)]。
[exit:description]

[%@library operator++[!duration]]
[%@library duration[!operator++]]
[codeblock:declaration]
constexpr duration& operator++();
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by [`++rep_].
[:zh_CN] 如同执行 [`++rep_]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator++[!duration]]
[%@library duration[!operator++]]
[codeblock:declaration]
constexpr duration operator++(int);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`duration(rep_++)].
[:zh_CN] [`duration(rep_++)]。
[exit:description]

[%@library operator--[!duration]]
[%@library duration[!operator--]]
[codeblock:declaration]
constexpr duration& operator--();
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by [`--rep_].
[:zh_CN] 如同执行 [`--rep_]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator--[!duration]]
[%@library duration[!operator--]]
[codeblock:declaration]
constexpr duration operator--(int);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`duration(rep_--)].
[:zh_CN] [`duration(rep_--)]。
[exit:description]

[%@library operator+=[!duration]]
[%@library duration[!operator+=]]
[codeblock:declaration]
constexpr duration& operator+=(const duration& d);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ += d.count();]
[:zh_CN] 如同执行：[`rep_ += d.cound();]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator-=[!duration]]
[%@library duration[!operator-=]]
[codeblock:declaration]
constexpr duration& operator-=(const duration& d);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ -= d.count();]
[:zh_CN] 如同执行：[`rep_ -= d.count();]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator*=[!duration]]
[%@library duration[!operator*=]]
[codeblock:declaration]
constexpr duration& operator*=(const rep& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ *= rhs;]
[:zh_CN] 如同执行：[`rep_ *= rhs;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator/=[!duration]]
[%@library duration[!operator/=]]
[codeblock:declaration]
constexpr duration& operator/=(const rep& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ /= rhs;]
[:zh_CN] 如同执行：[`rep_ /= rhs;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator%=[!duration]]
[%@library duration[!operator%=]]
[codeblock:declaration]
constexpr duration& operator%=(const rep& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ %= rhs;]
[:zh_CN] 如同执行：[`rep_ %= rhs;]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]

[%@library operator%=[!duration]]
[%@library duration[!operator%=]]
[codeblock:declaration]
constexpr duration& operator%=(const duration& rhs);
[codeblock:end]

[enter:description]
[para:effects]
[:en] As if by: [`rep_ %= rhs.count();]
[:zh_CN] 如同执行：[`rep_ %= rhs.cound();]

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[exit:description]
