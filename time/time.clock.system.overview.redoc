[section#time.clock.system.overview
    [:en] Overview
    [:zh_CN] 概述
]

[%@library system_clock]
[codeblock:synopsis [!:mark SeeBelow UnSpec] ]
namespace std::chrono {
  class system_clock {
  public:
    using rep        = [=SeeBelow];
    using period     = ratio<[=UnSpec], [=UnSpec]>;
    using duration   = chrono::duration<rep, period>;
    using time_point = chrono::time_point<system_clock>;
    static constexpr bool is_steady = [=UnSpec];

    static time_point now() noexcept;

    // [:en] mapping to/from C type [`time_t] \
       [:zh_CN] 与 C 类型 [`time_t] 的映射
    static time_t      to_time_t  (const time_point& t) noexcept;
    static time_point  from_time_t(time_t t) noexcept;
  };
}
[codeblock:end]

[para]
[:en]
Objects of type [`system_clock] represent wall clock time from the system-wide
realtime clock.
[:zh_CN]
[`system_clock] 类型的对象代表来自系统级的实时时钟的挂钟时间。

[:en]
Objects of type [`sys_time<Duration>] measure time since (and before)
1970-01-01 00:00:00 UTC excluding leap seconds.
[:zh_CN]
[`sys_time<Duration>] 类型的对象测量从 1970-01-01 00:00:00 UTC 开始（或之前）的
时间，不包含闰秒。

[:en]
This measure is commonly referred to as [+Unix time].
[:zh_CN]
这种测量通常被称为 [+Unix 时间]。

[:en]
This measure facilitates an efficient mapping between [`sys_time] and calendar
types ([#time.cal]).
[:zh_CN]
这种测量提供了 [`sys_time] 和日历类型（[#time.cal]）之间的一种高效映射。

[begin:example]
[br]
[:en] [`sys_seconds{sys_days{1970y/January/1}}.time_since_epoch()] is [`0s].
[:zh_CN] [`sys_seconds{sys_days{1970y/January/1}}.time_since_epoch()] 为 [`0s]。

[br]
[:en] [`sys_seconds{sys_days{2000y/January/1}}.time_since_epoch()] is
[`946'684'800s], which is [`10'957 * 86'400s].
[:zh_CN] [`sys_seconds{sys_days{2000y/January/1}}.time_since_epoch()] 为
[`946'684'800s]，也就是 [`10'957 * 86'400s]。
[br]
[end:example]
