[section#time.format
    [:en] Formatting
    [:zh_CN] 格式化
]

[%:begin@lib#format format]

[para]
[:en] Each [`formatter] ([#format.formatter]) specialization in the chrono
library ([#time.syn]) meets the [^:newoc Formatter] requirements
([#formatter.requirements]).
[:zh_CN] 时间程序库（[#time.syn]）中的所有 [`formatter]（[#format.formatter]）
特化式都满足 [^:newoc Formatter] 的规定（[#formatter.requirements]）。

[:en] The [`parse] member functions of these formatters interpret the format
specification as a [~@fmt chrono-format-spec] according to the following syntax:
[:zh_CN] 这些格式化器的 [`parse] 成员函数将格式说明根据以下语法解释为
[~@fmt 时间格式说明]。

[syntax]
[rule@fmt chrono-format-spec [:zh_CN] 时间格式说明 ]
    [| [~:opt fill-and-align] [~:opt width] [~:opt precision] [~:opt chrono-specs] ]
[rule:end]

[rule@fmt chrono-specs [:zh_CN] 时间说明 ]
    [| conversion-spec ]
    [| chrono-specs conversion-spec ]
    [| chrono-specs literal-char ]
[rule:end]

[rule@fmt literal-char [:zh_CN] 字面字符 ]
    [|:descriptive
        [:en] any character other than [`{] or [`}]
        [:zh_CN] 除 [`{] 或 [`}] 之外的任何字符
    ]
[rule:end]

[rule@fmt conversion-spec [:zh_CN] 转换说明 ]
    [| [`%] [~:opt modifier] type ]
[rule:end]

[rule@fmt modifier [:zh_CN] 修饰符 ]
    [| [`E] [`O] ]
[rule:end]

[rule:oneof type [:zh_CN] 类型 ]
    [| a A b B c C d D e F g G h H I j m M n ]
    [| p r R S t T u U V w W x X y Y z Z % ]
[rule:end]
[syntax:end]

[:en] The productions [~@fmt fill-and-align], [~@fmt width], and
[~@fmt precision] are described in [#format.string].
[:zh_CN] 产生式[~@fmt 填充与对齐]、[~@fmt 宽度]和[~@fmt 精度]在 [#format.string]
中描述。

[:en] Giving a [~@fmt precision] specification in the [~@fmt chrono-format-spec]
is valid only for [`std::chrono::duration] types where the representation type
[`Rep] is a floating-point type.
[:zh_CN] 在[~@fmt 时间格式说明]中给出[~@fmt 精度]说明，仅对于表示类型 [`Rep] 为
浮点类型的 [`std::chrono::duration] 类型有效。

[:en] For all other [`Rep] types, an exception of type [`format_error] is thrown
if the [~@fmt chrono-format-spec] contains a [~@fmt precision] specification.
[:zh_CN] 对于所有其他 [`Rep] 类型，当[~@fmt 时间格式说明]包含[~@fmt 精度]说明时
将抛出 [`format_error] 类型的异常。

[:en] All ordinary multibyte characters represented by [~@fmt literal-char] are
copied unchanged to the output.
[:zh_CN] [~@fmt 字面字符]所表示的所有普通多字节字符，都无修改地复制到输出中。

[para]
[:en] Each conversion specifier [~@fmt conversion-spec] is replaced by
appropriate characters as described in [#:tab#time.format.spec].
[:zh_CN] 每个[~@fmt 转换说明]转换说明符，都被替换为 [#:tab#time.format.spec] 中
所述的适当字符。

[:en] Some of the conversion specifiers depend on the locale that is passed to
the formatting function if the latter takes one, or the global locale otherwise.
[:zh_CN] 某些转换说明符，当格式化函数接受一个地域时依赖于它，否则依赖于全局地域。

[:en] If the formatted object does not contain the information the conversion
specifier refers to, an exception of type [`format_error] is thrown.
[:zh_CN] 当所格式化的对象并不包含转换说明符所指代的信息时，抛出 [`format_error]
类型的异常。

[para]
[:en] Unless explicitly requested, the result of formatting a chrono type does
not contain time zone abbreviation and time zone offset information.
[:zh_CN] 除非明确要求，否则对一个 chrono 类型的格式化并不包含时区简称和时区
偏移量信息。

[:en] If the information is available, the conversion specifiers [`%Z] and [`%z]
will format this information (respectively).
[:zh_CN] 当这些信息可用时，转换说明符 [`%Z] 和 [`%z] 分别格式化它们。

[begin:note]
[:en] If the information is not available and a [`%Z] or [`%z] conversion
specifier appears in the [~@fmt chrono-format-spec], an exception of type
[`format_error] is thrown, as described above.
[:zh_CN] 若这些信息不可用而[~@fmt 时间格式说明]中出现了转换说明符 [`%Z] 或 [`%z]，
则抛出 [`format_error] 类型的异常，如上所述。
[end:note]

[table:grid#time.format.spec
    [:en] Meaning of conversion specifiers
    [:zh_CN] 转换说明符的含义
    
    [|@code
        [:en] Specifier
        [:zh_CN] 说明符 ]
    [|  [:en] Replacement
        [:zh_CN] 替换为 ]
]

[|] %a
[|] [:en] The Locale[=']s abbreviated weekday name.
    [:zh_CN] 该地域的简写周日期名。

[:en] If the value does not contain a valid weekday, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果值中不包含有效的周日期，则抛出 [`format_error] 类型的异常。
[-]
[|] %A
[|] [:en] The locale[=']s full weekday name.
    [:zh_CN] 该地域的全称周日期名。

[:en] If the value does not contain a valid weekday, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果值中不包含有效的周日期，则抛出 [`format_error] 类型的异常。
[-]
[|] %b
[|] [:en] The locale[=']s abbreviated month name.
    [:zh_CN] 该地域的简称月名。

[:en] If the value does not contain a valid month, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果值中不包含有效的月，则抛出 [`format_error] 类型的异常。
[-]
[|] %B
[|] [:en] The locale[=']s full month name.
    [:zh_CN] 该地域的全称月名。

[:en] If the value does not contain a valid month, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果值中不包含有效的月，则抛出 [`format_error] 类型的异常。
[-]
[|] %c
[|] [:en] The locale[=']s date and time representation.
    [:zh_CN] 该地域的日期与时间表示。

[:en] The modified command [`%Ec] produces the locale[=']s alternate date and
time representation.
[:zh_CN] 修饰命令 [`%Ec] 产生该地域的替代日期与时间表示。
[-]
[|] %C
[|] [:en] The year divided by 100 using floored division.
    [:zh_CN] 年份以向下取整除法除以 100 的值。

[:en] If the result is a single decimal digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个十进制数字，则加上 [`0] 前缀。

[:en] The modified command [`%EC] produces the locale[=']s alternate
representation of the century.
[:zh_CN] 修饰命令 [`%EC] 产生该地域的替代世纪表示。
[-]
[|] %d
[|] [:en] The day of month as a decimal number.
    [:zh_CN] 月内日期的十进制数字。

[:en] If the result is a single decimal digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个十进制数字，则加上 [`0] 前缀。

[:en] The modified command [`%Od] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%Od] 产生该地域的替代表示。
[-]
[|] %D
[|] [:en] Equivalent to [`%m/%d/%y].
    [:zh_CN] 等价于 [`%m/%d/%y]。
[-]
[|] %e
[|] [:en] The day of month as a decimal number.
    [:zh_CN] 十进制数字表示的月日期。

[:en] If the result is a single decimal digit, it is prefixed with a space.
[:zh_CN] 如果其结果是单个十进制数字，则加上一个空格为前缀。

[:en] The modified command [`%Oe] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%Oe] 产生该地域的替代表示。
[-]
[|] %F
[|] [:en] Equivalent to [`%Y-%m-%d].
    [:zh_CN] 等价于 [`%Y-%m-%d]。
[-]
[|] %g
[|] [:en] The last two decimal digits of the ISO week-based year.
    [:zh_CN] ISO 基于周的年份的后两位十进制数字。

[:en] If the result is a single digit, it is prefixed by [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。
[-]
[|] %G
[|] [:en] The ISO week-based year as a decimal number.
    [:zh_CN] ISO 基于周的年份的十进制数字。

[:en] If the result is less than four digits it is left-padded with [`0] to four
digits.
[:zh_CN] 如果其结果少于四位数字，则在左边填充 [`0] 到四位数字。
[-]
[|] %h
[|] [:en] Equivalent to [`%b].
    [:zh_CN] 等价于 [`%b]。
[-]
[|] %H
[|] [:en] The hour (24-hour clock) as a decimal number.
    [:zh_CN] 小时（24 小时时钟）的十进制数字。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OH] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OH] 产生该地域的替代表示。
[-]
[|] %I
[|] [:en] The hour (12-hour clock) as a decimal number.
    [:zh_CN] 小时（12 小时时钟）的十进制数字。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OI] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OI] 产生该地域的替代表示。
[-]
[|] %j
[|] [:en] The day of the year as a decimal number.
    [:zh_CN] 年内日期的十进制数字。

[:en] Jan 1 is [`001].
[:zh_CN] 一月一日为 [`001]。

[:en] If the result is less than three digits, it is left-padded with [`0] to
three digits.
[:zh_CN] 如果其结果少于三位数字，则在左边填充 [`0] 到三位数字。
[-]
[|] %m
[|] [:en] The month as a decimal number.
    [:zh_CN] 月的十进制数字。

[:en] Jan is [`01].
[:zh_CN] 一月为 [`01]。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%Om] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%Om] 产生该地域的替代表示。
[-]
[|] %M
[|] [:en] The minute as a decimal number.
    [:zh_CN] 分的十进制数字。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OM] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OM] 产生该地域的替代表示。
[-]
[|] %n
[|] [:en] A new-line character.
    [:zh_CN] 一个换行字符。
[-]
[|] %p
[|] [:en] The locale[=']s equivalent of the AM/PM designations associated with a
12-hour clock.
    [:zh_CN] 该地域中等价于与 12 小时时钟关联的“AM/PM”指示符。
[-]
[|] %q
[|] [:en] The duration[=']s unit suffix as specified in [#time.duration.io].
    [:zh_CN] 该时长的单位前缀，如 [#time.duration.io] 所指定。
[-]
[|] %Q
[|] [:en] The duration[=']s numeric value (as if extracted via [`.count()]).
    [:zh_CN] 该时长的数值（如同通过 [`.count()] 提取）。
[-]
[|] %r
[|] [:en] The locale[=']s 12-hour clock time.
    [:zh_CN] 该地域的 12 小时时钟时间。
[-]
[|] %R
[|] [:en] Equivalent to [`%H:%M].
    [:zh_CN] 等价于 [`%H:%M]。
[-]
[|] %S
[|] [:en] Seconds as a decimal number.
    [:zh_CN] 秒的十进制数字。

[:en] If the number of seconds is less than [`10], the result is prefixed with
[`0].
[:zh_CN] 如果秒数小于 [`10]，则对结果加上 [`0] 前缀。

[:en] If the precision of the input cannot be exactly represented with seconds,
then the format is a decimal floating-point number with a fixed format and a
precision matching that of the precision of the input (or to a microseconds
precision if the conversion to floating-point decimal seconds cannot be made
within 18 fractional digits).
[:zh_CN] 如果输入的精度无法以秒精确表示，则该格式是一个具有固定格式的十进制浮点
数，其精度与输入的精度匹配（或者当向浮点十进制秒数的转换无法在 18 个小数位中完成
则为微秒精度）。

[:en] The character for the decimal point is localized according to the locale.
[:zh_CN] 小数点的字符根据地域进行本地化。

[:en] The modified command [`%OS] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OS] 产生该地域的替代表示。
[-]
[|] %t
[|] [:en] A horizontal-tab character.
    [:zh_CN] 一个水平制表字符。
[-]
[|] %T
[|] [:en] Equivalent to [`%H:%M:%S].
    [:zh_CN] 等价于 [`%H:%M:%S]。
[-]
[|] %u
[|] [:en] The ISO weekday as a decimal number ([`1]-[`7]), where Monday is [`1].
    [:zh_CN] ISO 周日期的十进制数字（[`1] 到 [`7]），其中周一为 [`1]。

[:en] The modified command [`%Ou] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%Ou] 产生该地域的替代表示。
[-]
[|] %U
[|] [:en] The week number of the year as a decimal number.
    [:zh_CN] 年内周序数的十进制数字。

[:en] The first Sunday of the year is the first day of week [`01].
[:zh_CN] 一年的第一个周日为第 [`01] 周的第一天。

[:en] Days of the same year prior to that are in week [`00].
[:zh_CN] 同年中此前的日期处于第 [`00] 周。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OU] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OU] 产生该地域的替代表示。
[-]
[|] %V
[|] [:en] The ISO week-based week number as a decimal number.
    [:zh_CN] ISO 基于周的周序数的十进制数字。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OV] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OV] 产生该地域的替代表示。
[-]
[|] %w
[|] [:en] The weekday as a decimal number ([`0]-[`6]), where Sunday is [`0].
    [:zh_CN] ISO 周内日期的十进制数字（[`0] 到 [`6]），其中周日为 [`0]。

[:en] The modified command [`%Ow] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%Ow] 产生该地域的替代表示。
[-]
[|] %W
[|] [:en] The week number of the year as a decimal number.
    [:zh_CN] 年内周序数的十进制数字。

[:en] The first Monday of the year is the first day of week [`01].
[:zh_CN] 一年的第一个周一为第 [`01] 周的第一天。

[:en] Days of the same year prior to that are in week [`00].
[:zh_CN] 同年中此前的日期处于第 [`00] 周。

[:en] If the result is a single digit, it is prefixed with [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。

[:en] The modified command [`%OW] produces the locale[=']s alternate
representation.
[:zh_CN] 修饰命令 [`%OW] 产生该地域的替代表示。
[-]
[|] %x
[|] [:en] The locale[=']s date representation.
    [:zh_CN] 该地域的日期表示。

[:en] The modified command [`%Ex] produces the locale[=']s alternate
date representation.
[:zh_CN] 修饰命令 [`%Ex] 产生该地域的替代日期表示。
[-]
[|] %X
[|] [:en] The locale[=']s time representation.
    [:zh_CN] 该地域的时间表示。

[:en] The modified command [`%EX] produces the locale[=']s alternate
time representation.
[:zh_CN] 修饰命令 [`%EX] 产生该地域的替代时间表示。
[-]
[|] %y
[|] [:en] The last two decimal digits of the year.
    [:zh_CN] 年份的后两位十进制数字。

[:en] If the result is a single digit, it is prefixed by [`0].
[:zh_CN] 如果其结果是单个数字，则加上 [`0] 前缀。
[-]
[|] %Y
[|] [:en] The year as a decimal number.
    [:zh_CN] 年份的十进制数字。

[:en] If the result is less than four digits it is left-padded with [`0] to four
digits.
[:zh_CN] 如果其结果少于四位数字，则在左边填充 [`0] 到四位数字。
[-]
[|] %z
[|] [:en] The offset from UTC in the ISO 8601 format.
    [:zh_CN] ISO 8601 格式中的 UTC 偏移量。

[:en] For example [`-0430] refers to 4 hours 30 minutes behind UTC.
[:zh_CN] 例如 [`-0430] 代表落后 UTC 4 小时 30 分钟。

[:en] If the offset is zero, [`+0000] is used.
[:zh_CN] 如果偏移量为零，则使用 [`+0000]。

[:en] The modified commands [`%Ez] and [`%Oz] insert a [`:] between the hours
and minutes: [`-04:30].
[:zh_CN] 修饰命令 [`%Ez] 和 [`%Oz] 在小时和分钟之间插入一个 [`:]：[`-04:30]。

[:en] If the offset information is not available, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果没有偏移量信息，则抛出 [`format_error] 类型的异常。
[-]
[|] %Z
[|] [:en] The time zone abbreviation.
    [:zh_CN] 时区简称。

[:en] If the time zone abbreviation is not available, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果没有时区简称，则抛出 [`format_error] 类型的异常。
[-]
[|] %%
[|] [:en] A [`%] character.
    [:zh_CN] 一个 [`%] 字符。
[-]
[table:end]

[para]
[:en] If the [~@fmt chrono-specs] is omitted, the chrono object is formatted
as if by streaming it to [`std::ostringstream os] and copying [`os.str()]
through the output iterator of the context with additional padding and
adjustments as specified by the format specifiers.
[:zh_CN] 当省略[~@fmt 时间说明]时，时间对象的格式化，如同将其流向
[`std::ostringstream os]，并在实施各格式说明符所指定的额外填充和对齐下，通过其
语境的输出迭代器复制 [`os.str()] 而达成。

[begin:example]
[codeblock]
string s = format("{:=>8}", 42ms);      // [:en] value of [`s] is [`"====42ms"] \
                                           [:zh_CN] [`s] 的值为 [`"====42ms"]
[codeblock:end]
[end:example]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::sys_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::sys_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`[*STATICALLY-WIDEN]<charT>("UTC")].
[:zh_CN] 当使用 [`%Z] 时，它被替换为 [`[*STATICALLY-WIDEN]<charT>("UTC")]。

[:en] If [`%z] (or a modified variant of [`%z]) is used, an offset of [`0min] is
formatted.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，格式化偏移量 [`0min]。
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::utc_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::utc_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`[*STATICALLY-WIDEN]<charT>("UTC")].
[:zh_CN] 当使用 [`%Z] 时，它被替换为 [`[*STATICALLY-WIDEN]<charT>("UTC")]。

[:en] If [`%z] (or a modified variant of [`%z]) is used, an offset of [`0min] is
formatted.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，格式化偏移量 [`0min]。

[:en] If the argument represents a time during a leap second insertion, and if a
seconds field is formatted, the integral portion of that format is
[`[*STATICALLY-WIDEN]<charT>("60")].
[:zh_CN] 如果实参表示的是处于闰秒插入期中的时间，且若格式化其秒数字段，则该格式
的整数部分为 [`[*STATICALLY-WIDEN]<charT>("60")]。
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::tai_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::tai_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`[*STATICALLY-WIDEN]<charT>("TAT")].
[:zh_CN] 当使用 [`%Z] 时，它被替换为 [`[*STATICALLY-WIDEN]<charT>("TAT")]。

[:en] If [`%z] (or a modified variant of [`%z]) is used, an offset of [`0min] is
formatted.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，格式化偏移量 [`0min]。

[:en] The date and time formatted are equivalent to those formatted by a
[`sys_time] initialized with
[:zh_CN] 其所格式化的日期和时间等价于以如下方式初始化的 [`sys_time] 的格式化
[codeblock:notation]
sys_time<Duration>{tp.time_since_epoch()} -
  (sys_days{1970y/January/1} - sys_days{1958y/January/1})
[codeblock:end]
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::gps_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::gps_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`[*STATICALLY-WIDEN]<charT>("GPS")].
[:zh_CN] 当使用 [`%Z] 时，它被替换为 [`[*STATICALLY-WIDEN]<charT>("GPS")]。

[:en] If [`%z] (or a modified variant of [`%z]) is used, an offset of [`0min] is
formatted.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，格式化偏移量 [`0min]。

[:en] The date and time formatted are equivalent to those formatted by a
[`sys_time] initialized with
[:zh_CN] 其所格式化的日期和时间等价于以如下方式初始化的 [`sys_time] 的格式化
[codeblock:notation]
sys_time<Duration>{tp.time_since_epoch()} +
  (sys_days{1980y/January/Sunday[1]} - sys_days{1970y/January/1})
[codeblock:end]
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::file_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::file_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`[*STATICALLY-WIDEN]<charT>("UTC")].
[:zh_CN] 当使用 [`%Z] 时，它被替换为 [`[*STATICALLY-WIDEN]<charT>("UTC")]。

[:en] If [`%z] (or a modified variant of [`%z]) is used, an offset of [`0min] is
formatted.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，格式化偏移量 [`0min]。

[:en] The date and time formatted are equivalent to those formatted by a
[`sys_time] initialized with [`clock_cast<system_clock>(t)] or by a [`utc_time]
initialized with [`clock_cast<utc_clock>(t)], where [`t] is the first argument
to [`format].
[:zh_CN] 其所格式化的日期和时间等价于以 [`clock_cast<system_clock>(t)] 初始化的
[`sys_time]，或以 [`clock_cast<utc_clock>(t)] 初始化的 [`utc_time] 的格式化，
其中 [`t] 为 [`format] 的第一个实参。
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::local_time]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::local_time<Duration>, charT>;
[codeblock:end]

[div:description]
[para:remarks]
[:en] If [`%Z], [`%z], or a modified version of [`%z] is used, an exception of
type [`format_error] is thrown.
[:zh_CN] 如果使用了 [`%Z]、[`%z] 或 [`%z] 的经修饰版本，则抛出 [`format_error]
类型的异常。
[div:end]

[%@lib@raw [*local-time-format-t]]
[codeblock:synopsis]
template<class Duration> struct [[redoc("^", "n>")]]local-time-format-t {           // [=expos]
  local_time<Duration> time;                                    // [=expos]
  const string* abbrev;                                         // [=expos]
  const seconds* offset_sec;                                    // [=expos]
};
[codeblock:end]

[%@lib local_time_format]
[codeblock:declaration]
template<class Duration>
  [[redoc("^", "n>")]]local-time-format-t<Duration>
    local_time_format(local_time<Duration> time, const string* abbrev = nullptr,
                      const seconds* offset_sec = nullptr);
[codeblock:end]

[div:description]
[para:returns]
[:en] [`{time, abbrev, offset_sec}].
[:zh_CN] [`{time, abbrev, offset_sec}]。
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::[*local-time-format-t]]]]]
[codeblock:declaration]
template<class Duration, class charT>
  struct formatter<chrono::[[redoc("^", "n>")]]local-time-format-t<Duration>, charT>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`f] be a [`[*local-time-format-t]<Duration>] object passed to
[`formatter::format].
[:zh_CN] 令 [`f] 为传递给 [`formatter::format] 的
[`[*local-time-format-t]<Duration>] 对象。

[para:remarks]
[:en] If [`%Z] is used, it is replaced with [`*f.abbrev] if [`f.abbrev] is not
a null pointer value.
[:zh_CN] 当使用 [`%Z] 时，若 [`f.abbrev] 不是空指针值，则它被替换为 [`*f.abbrev]。

[:en] If [`%Z] is used and [`f.abbrev] is a null pointer value, an exception of
type [`format_error] is thrown.
[:zh_CN] 当使用 [`%Z] 时，若 [`f.abbrev] 是空指针值，则抛出 [`format_error] 类型
的异常。

[:en] If [`%z] (or a modified variant of [`%z]) is used, it is formatted with
the value of [`*f.offset_sec] if [`f.offset_sec] is not a null pointer value.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，若 [`f.offset_sec] 不是
空指针值，则它被以 [`*f.offset_sec] 的值格式化。

[:en] If [`%z] (or a modified variant of [`%z]) is used and [`f.offset_sec] is
a null pointer value, then an exception of type [`format_error] is thrown.
[:zh_CN] 当使用 [`%z]（或 [`%z] 的经修饰变体）时，若 [`f.offset_sec] 是空指针值，
则抛出 [`format_error] 类型的异常。
[div:end]

[%@lib@raw [`formatter][![:en]specializations[:zh_CN]特化式[![`chrono::zoned_time]]]]
[codeblock:synopsis]
template<class Duration, class TimeZonePtr, class charT>
struct formatter<chrono::zoned_time<Duration, TimeZonePtr>, charT>
    : formatter<chrono::[[redoc("^", "n>")]]local-time-format-t<Duration>, charT> {
  template<class FormatContext>
    typename FormatContext::iterator
      format(const chrono::zoned_time<Duration, TimeZonePtr>& tp, FormatContext& ctx);
};
[codeblock:end]

[%@lib format[!formatter<chrono::zoned_time>]]
[codeblock:declaration]
template<class FormatContext>
  typename FormatContext::iterator
    format(const chrono::zoned_time<Duration, TimeZonePtr>& tp, FormatContext& ctx);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
sys_info info = tp.get_info();
return formatter<chrono::[[redoc("^", "n>")]]local-time-format-t<Duration>, charT>::
         format({tp.get_local_time(), &info.abbrev, &info.offset}, ctx);
[codeblock:end]
[div:end]

[%:end#format]
