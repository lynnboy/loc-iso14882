[section#time.tod.subsecond
    [:en] Sub-second precision
    [:zh_CN] 亚秒精度
]

[%@library time_of_day<[*sub-second duration]>]

[codeblock:synopsis]
namespace std::chrono {
  template<class Rep, class Period>
  class time_of_day<duration<Rep, Period>> {
  public:
    using precision = duration<Rep, Period>;

    time_of_day() = default;
    constexpr explicit time_of_day(precision since_midnight) noexcept;

    constexpr chrono::hours     hours()      const noexcept;
    constexpr chrono::minutes   minutes()    const noexcept;
    constexpr chrono::seconds   seconds()    const noexcept;
    constexpr precision subseconds() const noexcept;

    constexpr explicit operator  precision()   const noexcept;
    constexpr          precision to_duration() const noexcept;

    constexpr void make24() noexcept;
    constexpr void make12() noexcept;
  };
}
[codeblock:end]

[para]
[:en]
This specialization shall not exist unless [`treat_as_floating_point_v<Rep>] is
[`false] and [`duration<Rep, Period>] is not convertible to [`seconds].
[:zh_CN]
除非 [`treat_as_floating_point_v<Rep>] 为 [`false] 并且 [`duration<Rep, Period>]
不能转换为 [`seconds]，否则这个特例不能存在。

[enter:note]
[:en] This specialization handles hours, minutes, seconds, and fractional
seconds since midnight.
[:zh_CN] 这个特化式处理自午夜起的小时、分钟、秒和亚秒分数。

[:en] Typical uses are with [`milliseconds], [`microseconds] and [`nanoseconds].
[:zh_CN] 通常使用 [`milliseconds]、[`microseconds] 和[`nanoseconds]。
[exit:note]

\indexlibrary{\idxcode{time_of_day<\placeholder{sub-second duration}>}!constructor}%
[%@library time_of_day<[*sub-second duration]>[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr explicit time_of_day(precision since_midnight) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs an object of type [`time_of_day] in 24-hour format
corresponding to [`since_midnight] seconds after 00:00:00.
[:zh_CN] 构造一个对应于 00:00:00 之后 [`since_midnight] 分数秒的 24 小时格式的
[`time_of_day] 类型的对象。

[para:ensures]
[:en] [`hours()] returns the integral number of hours [`since_midnight] is after
00:00:00.
[:zh_CN] [`hours()] 返回 [`since_midnight] 的 00:00:00 之后的小时整数值。

[:en] [`minutes()] returns the integral number of minutes [`since_midnight] is
after [`(]00:00:00[` + hours())].
[:zh_CN] [`minutes()] 返回 [`since_midnight] 的 [`(]00:00:00[` + hours())] 之后
的分钟整数值。

[:en] [`seconds()] returns the integral number of seconds [`since_midnight] is
after [`(]00:00:00[` + hours() + minutes())].
[:zh_CN] [`seconds()] 返回 [`since_midnight] 的
[`(]00:00:00[` + hours() + seconds())] 之后的秒整数值。

[:en] [`subseconds()] returns the integral number of seconds [`since_midnight]
is after [`(]00:00:00[` + hours() + minutes() + seconds())].
[:zh_CN] [`subseconds()] 返回 [`since_midnight] 的
[`(]00:00:00[` + hours() + minutes() + seconds())] 之后的分数秒整数值。
[exit:description]

[%@library hours[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!hours]]
[codeblock:declaration]
constexpr chrono::hours hours() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The stored hour of [`*this].
[:zh_CN] [`*this] 存储的小时。
[exit:description]

[%@library minutes[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!minutes]]
[codeblock:declaration]
constexpr chrono::minutes minutes() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The stored minute of [`*this].
[:zh_CN] [`*this] 存储的分钟。
[exit:description]

[%@library seconds[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!seconds]]
[codeblock:declaration]
constexpr chrono::seconds seconds() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The stored second of [`*this].
[:zh_CN] [`*this] 存储的秒。
[exit:description]

[%@library subseconds[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!subseconds]]
[codeblock:declaration]
constexpr duration<Rep, Period> subseconds() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The stored subsecond of [`*this].
[:zh_CN] [`*this] 存储的亚秒。
[exit:description]

[%@library operator precision[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!operator precision]]
[codeblock:declaration]
constexpr explicit operator precision() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] The number of subseconds since midnight.
[:zh_CN] 自午夜起的亚秒数。
[exit:description]

[%@library to_duration[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!to_duration]]
[codeblock:declaration]
constexpr precision to_duration() const noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`precision{*this}].
[:zh_CN] [`precision{*this}]。
[exit:description]

[%@library make24[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!make24]]
[codeblock:declaration]
constexpr void make24() noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`*this] is a 12-hour time, converts to a 24-hour time.
[:zh_CN] 如果 [`*this] 为 12 小时时间，则转换为 24 小时时间。

[:en] Otherwise, no effects.
[:zh_CN] 否则没有效果。
[exit:description]

[%@library make12[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!make12]]
[codeblock:declaration]
constexpr void make12() noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`*this] is a 24-hour time, converts to a 12-hour time.
[:zh_CN] 如果 [`*this] 为 24 小时时间，则转换为 12 小时时间。

[:en] Otherwise, no effects.
[:zh_CN] 否则没有效果。
[exit:description]
