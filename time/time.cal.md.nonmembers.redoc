[section#time.cal.md.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@library operator==[!month_day]]
[%@library month_day[!operator==]]
[codeblock:declaration]
constexpr bool operator==(const month_day& x, const month_day& y) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x.month() == y.month() && x.day() == y.day()].
[:zh_CN] [`x.month() == y.month() && x.day() == y.day()]。
[exit:description]

[%@library operator<=>[!month_day]]
[%@library month_day[!operator<=>]]
[codeblock:declaration]
constexpr strong_ordering operator<=>(const month_day& x, const month_day& y) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock:notation]
if (auto c = x.month() <=> y.month(); c != 0) return c;
return x.day() <=> y.day();
[codeblock:end]
[exit:description]

[%@library operator<<[!month_day]]
[%@library month_day[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const month_day& md);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock:notation]
return os << format(os.getloc(), [*STATICALLY-WIDEN]<charT>("{}/{}"),
                    md.month(), md.day());
[codeblock:end]
[exit:description]

[%@library from_stream[!month_day]]
[%@library month_day[!from_stream]]
[codeblock:declaration]
template<class charT, class traits, class Alloc = allocator<charT>>
  basic_istream<charT, traits>&
    from_stream(basic_istream<charT, traits>& is, const charT* fmt,
                month_day& md, basic_string<charT, traits, Alloc>* abbrev = nullptr,
                minutes* offset = nullptr);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Attempts to parse the input stream [`is] into the [`month_day] [`md] using
the format flags given in the NTCTS [`fmt] as specified in [#time.parse].
[:zh_CN] 尝试如 [#time.parse] 中所指定的方式使用由 [$:sc ntcts] [`fmt] 所给定的
格式标记将输入流 [`is] 解析到 [`month_day] [`md] 之中。

[:en] If the parse fails to decode a valid [`month_day],
[`is.setstate(ios_base::failbit)] shall be called and [`md] shall not be
modified.
[:zh_CN] 如果解析无法解码有效 [`month_day]，则应当调用
[`is.setstate(ios_base::failbit)] 且 [`md] 不应被改动。

[:en] If [`%Z] is used and successfully parsed, that value will be assigned to
[`*abbrev] if [`abbrev] is non-null.
[:zh_CN] 如果使用了 [`%Z] 并且成功进行了解析，则当 [`abbrev] 不为空值时将该值
赋值给 [`*abbrev]。

[:en] If [`%z] (or a modified variant) is used and successfully parsed,
that value will be assigned to [`*offset] if [`offset] is non-null.
[:zh_CN] 如果使用了 [`%z]（或其带修饰变体）并且成功进行了解析，则当 [`offset]
不为空值时将该值赋值给 [`*offset]。

[para:returns]
[:en] [`is].
[:zh_CN] [`is]。
[exit:description]
