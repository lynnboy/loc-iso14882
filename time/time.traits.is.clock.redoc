[section#time.traits.is.clock
    [:en] Class template [`is_clock]
    [:zh_CN] 类模板 [`is_clock]
]

[%@library is_clock]
[codeblock:declaration]
template<class T> struct is_clock;
[codeblock:end]

[para]
[:en]
[`is_clock] is a [^:oc UnaryTypeTrait] ([#meta.rqmts]) with a base
characteristic of [`true_type] if [`T] meets the [^:oc Clock] requirements
([#time.clock.req]), otherwise [`false_type].
[:zh_CN]
[`is_clock] 是一种 [^:oc UnaryTypeTrait]（[#meta.rqmts]），当 [`T] 满足
[^:oc Clock] 的规定（[#time.clock.req]）时，其基础特征为 [`true_type]，否则为
[`false_type]。

[:en]
For the purposes of the specification of this trait, the extent to which an
implementation determines that a type cannot meet the [^:oc Clock] requirements
is unspecified, except that as a minimum a type [`T] shall not qualify as a
[^:oc Clock] unless it meets all of the following conditions:
[:zh_CN]
在对这项特征做出说明的方面，实现以何种程度确定某个类型无法满足 [^:oc Clock]
的规定是未指明的，但最小要求是除非类型 [`T] 满足以下全部条件，否则不能将它当做
[^:oc Clock]：

[list]
[item]
[:en] the [~qualified-id]s [`T::rep], [`T::period], [`T::duration], and
[`T::time_point] are valid and each denotes a type ([#temp.deduct]),
[:zh_CN] [~限定标识] [`T::rep]、[`T::period]、[`T::duration] 和 [`T::time_point]
都有效且各自都代表某个类型（[#temp.deduct]），
[item]
[:en] the expression [`T::is_steady] is well-formed when treated as an
unevaluated operand,
[:zh_CN] 表达式 [`T::is_steady] 当将其当做免求值操作数时是良构的，
[item]
[:en] the expression [`T::now()] is well-formed when treated as an unevaluated
operand.
[:zh_CN] 表达式 [`T::now()] 当将其当做免求值操作数时是良构的。
[list:end]

[para]
[:en]
The behavior of a program that adds specializations for [`is_clock] is
undefined.
[:zh_CN]
为 [`is_clock] 添加特化式的程序的行为是未定义的。
