[section#time.zone.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@library name[!time_zone]]
[%@library time_zone[!name]]
[codeblock:declaration]
string_view name() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] The name of the [`time_zone].
[:zh_CN] 该 [`time_zone] 的名字。

[para]
[begin:example]
[:en] [`"America/New_York"].
[:zh_CN] [`"America/New_York"]。
[end:example]
[div:end]

[%@library get_info[!time_zone]]
[%@library time_zone[!get_info]]
[codeblock:declaration]
template<class Duration>
  sys_info get_info(const sys_time<Duration>& st) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`sys_info] [`i] for which [`st] is in the range [=range(i.begin,i.end)].
[:zh_CN] 一个 [`sys_info] [`i]，使得 [`st] 处于范围 [=range(i.begn,i.end)] 之中。
[div:end]

[%@library get_info[!time_zone]]
[%@library time_zone[!get_info]]
[codeblock:declaration]
template<class Duration>
  local_info get_info(const local_time<Duration>& tp) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`local_info] for [`tp].
[:zh_CN] 对于 [`tp] 的 [`local_info]。
[div:end]

[%@library to_sys[!time_zone]]
[%@library time_zone[!to_sys]]
[codeblock:declaration]
template<class Duration>
  sys_time<common_type_t<Duration, seconds>>
    to_sys(const local_time<Duration>& tp) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`sys_time] that is at least as fine as [`seconds], and will be finer if
the argument [`tp] has finer precision.
[:zh_CN] 一个至少与 [`seconds] 一样精确的 [`sys_time]，且当实参 [`tp] 有更好的
精度时它也更精确。

[:en] This [`sys_time] is the UTC equivalent of [`tp] according to the rules of
this [`time_zone].
[:zh_CN] 这个 [`sys_time] 是根据该 [`time_zone] 的规则与 [`tp] 等价的 UTC 时间。

[para:throws]
[:en] If the conversion from [`tp] to a [`sys_time] is ambiguous, throws
[`ambiguous_local_time].
[:zh_CN] 如果从 [`tp] 向 [`sys_time] 的转换有歧义，则抛出
[`ambiguous_local_time]。

[:en] If the [`tp] represents a non-existent time between two UTC [`time_points],
throws [`nonexistent_local_time].
[:zh_CN] 如果 [`tp] 表示两个 UTC [`time_point] 之间不存在的时间，则抛出
[`nonexistent_local_time]。
[div:end]

[%@library to_sys[!time_zone]]
[%@library time_zone[!to_sys]]
[codeblock:declaration]
template<class Duration>
  sys_time<common_type_t<Duration, seconds>>
    to_sys(const local_time<Duration>& tp, choose z) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`sys_time] that is at least as fine as [`seconds], and will be finer if
the argument [`tp] has finer precision.
[:zh_CN] 一个至少与 [`seconds] 一样精确的 [`sys_time]，且当实参 [`tp] 有更好的
精度时它也更精确。

[:en] This [`sys_time] is the UTC equivalent of [`tp] according to the rules of
this [`time_zone].
[:zh_CN] 这个 [`sys_time] 是根据该 [`time_zone] 的规则与 [`tp] 等价的 UTC 时间。

[:en] If the conversion from [`tp] to a [`sys_time] is ambiguous, returns the
earlier [`sys_time] if [`z == choose::earliest], and returns the later
[`sys_time] if [`z == choose::latest].
[:zh_CN] 如果从 [`tp] 向 [`sys_time] 的转换有歧义，则当 [`z == choose::earliest]
时返回较早的 [`sys_time]，当 [`z == choose::latest] 时返回较晚的 [`sys_time]。

[:en] If the [`tp] represents a non-existent time between two UTC [`time_points],
then the two UTC [`time_point] will be the same, and that UTC [`time_point]
will be returned.
[:zh_CN] 如果 [`tp] 表示两个 UTC [`time_point] 之间不存在的时间，则这两个
UTC [`time_point] 相同，并返回这个 UTC [`time_point]。
[div:end]

[%@library to_local[!time_zone]]
[%@library time_zone[!to_local]]
[codeblock:declaration]
template<class Duration>
  local_time<common_type_t<Duration, seconds>>
    to_local(const sys_time<Duration>& tp) const;
[codeblock:end]

[div:description]
[para:returns]
[:en] The [`local_time] associated with [`tp] and this [`time_zone].
[:zh_CN] 与 [`tp] 和这个 [`time_zone] 关联的 [`local_time]。
[div:end]
