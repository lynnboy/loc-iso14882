[section#time.cal.ymd.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@lib@member operator==[!year_month_day]]
[codeblock:declaration]
constexpr bool operator==(const year_month_day& x, const year_month_day& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.year() == y.year() && x.month() == y.month() && x.day() == y.day()].
[:zh_CN] [`x.year() == y.year() && x.month() == y.month() && x.day() == y.day()]。
[div:end]

[%@lib@member operator<=>[!year_month_day]]
[codeblock:declaration]
constexpr strong_ordering operator<=>(const year_month_day& x, const year_month_day& y) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
if (auto c = x.year() <=> y.year(); c != 0) return c;
if (auto c = x.month() <=> y.month(); c != 0) return c;
return x.day() <=> y.day();
[codeblock:end]
[div:end]

[%@lib@member operator+[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator+(const year_month_day& ymd, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] If the argument supplied by the caller for the [`months] parameter
is convertible to [`years], its implicit conversion sequence to [`years]
is worse than its implicit conversion sequence to [`months] ([#over.ics.rank]).
[:zh_CN] 如果调用方为 [`months] 形参所提供的实参可以转换为 [`years]，则它向
[`years] 的隐式转换序列比它向 [`months] 的隐式转换序列更差（[#over.ics.rank]）。

[para:returns]
[:en] [`(ymd.year() / ymd.month() + dm) / ymd.day()].
[:zh_CN] [`(ymd.year() / ymd.month() + dm) / ymd.day()]。

[para]
[begin:note]
[:en] If [`ymd.day()] is in the range [=crange(1d,28d)], [`ok()] will return
[`true] for the resultant [`year_month_day].
[:zh_CN] 当 [`ymd.day()] 处于范围 [=crange(1d,28d)] 中时，结果 [`year_month_day]
的 [`ok()] 将返回 [`true]。
[end:note]
[div:end]

[%@lib@member operator+[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator+(const months& dm, const year_month_day& ymd) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] If the argument supplied by the caller for the [`months] parameter
is convertible to [`years], its implicit conversion sequence to [`years]
is worse than its implicit conversion sequence to [`months] ([#over.ics.rank]).
[:zh_CN] 如果调用方为 [`months] 形参所提供的实参可以转换为 [`years]，则它向
[`years] 的隐式转换序列比它向 [`months] 的隐式转换序列更差（[#over.ics.rank]）。

[para:returns]
[:en] [`ymd + dm].
[:zh_CN] [`ymd + dm]。
[div:end]

[%@lib@member operator-[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator-(const year_month_day& ymd, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[:en] If the argument supplied by the caller for the [`months] parameter
is convertible to [`years], its implicit conversion sequence to [`years]
is worse than its implicit conversion sequence to [`months] ([#over.ics.rank]).
[:zh_CN] 如果调用方为 [`months] 形参所提供的实参可以转换为 [`years]，则它向
[`years] 的隐式转换序列比它向 [`months] 的隐式转换序列更差（[#over.ics.rank]）。

[para:returns]
[:en] [`ymd + (-dm)].
[:zh_CN] [`ymd + (-dm)]。
[div:end]

[%@lib@member operator+[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator+(const year_month_day& ymd, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`(ymd.year() + dy) / ymd.month() / ymd.day()].
[:zh_CN] [`(ymd.year() + dy) / ymd.month() / ymd.day()]。

[para]
[begin:note]
[:en] If [`ymd.month()] is February and [`ymd.day()] is not in the range
[=crange(1d,28d)], [`ok()] may return [`false] for the resultant
[`year_month_day].
[:zh_CN] 当 [`ymd.month()] 为 [`February] 而 [`ymd.day()] 并不处于范围
[=crange(1d,28d)] 中时，结果 [`year_month_day] 的 [`ok()] 可能返回 [`false]。
[end:note]
[div:end]

[%@lib@member operator+[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator+(const years& dy, const year_month_day& ymd) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymd + dy].
[:zh_CN] [`ymd + dy]。
[div:end]

[%@lib@member operator-[!year_month_day]]
[codeblock:declaration]
constexpr year_month_day operator-(const year_month_day& ymd, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ymd + (-dy)].
[:zh_CN] [`ymd + (-dy)]。
[div:end]

[%@lib@member operator<<[!year_month_day]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const year_month_day& ymd);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
return os << (ymd.ok() ?
  format([[redoc("^>")]]STATICALLY-WIDEN<charT>("{:%F}"), ymd) :
  format([[redoc("^>")]]STATICALLY-WIDEN<charT>("{:%F} is not a valid date"), ymd));
[codeblock:end]
[div:end]

[%@lib@member from_stream[!year_month_day]]
[codeblock:declaration]
template<class charT, class traits, class Alloc = allocator<charT>>
  basic_istream<charT, traits>&
    from_stream(basic_istream<charT, traits>& is, const charT* fmt,
                year_month_day& ymd, basic_string<charT, traits, Alloc>* abbrev = nullptr,
                minutes* offset = nullptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] Attempts to parse the input stream [`is] into the [`year_month_day] [`ymd]
using the format flags given in the NTCTS [`fmt] as specified in [#time.parse].
[:zh_CN] 尝试如 [#time.parse] 中所指定的方式使用由 [span:sc ntcts] [`fmt] 所给定
的格式标记将输入流 [`is] 解析到 [`year_month_day] [`ymd] 之中。

[:en] If the parse fails to decode a valid [`year_month_day],
[`is.setstate(ios_base::failbit)] is called and [`ymd] is not modified.
[:zh_CN] 如果解析无法解码有效 [`year_month_day]，则调用
[`is.setstate(ios_base::failbit)] 且 [`ymd] 不会被改动。

[:en] If [`%Z] is used and successfully parsed, that value will be assigned to
[`*abbrev] if [`abbrev] is non-null.
[:zh_CN] 如果使用了 [`%Z] 并且成功进行了解析，则当 [`abbrev] 不为空值时将该值
赋值给 [`*abbrev]。

[:en] If [`%z] (or a modified variant) is used and successfully parsed,
that value will be assigned to [`*offset] if [`offset] is non-null.
[:zh_CN] 如果使用了 [`%z]（或其带修饰变体）并且成功进行了解析，则当 [`offset]
不为空值时将该值赋值给 [`*offset]。

[para:returns]
[:en] [`is].
[:zh_CN] [`is]。
[div:end]

