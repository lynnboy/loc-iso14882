[section#time.cal.day.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@library operator==[!day]]
[%@library day[!operator==]]
[codeblock:declaration]
constexpr bool operator==(const day& x, const day& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`unsigned{x} == unsigned{y}].
[:zh_CN] [`unsigned{x} == unsigned{y}]。
[end:description]

[%@library operator<=>[!day]]
[%@library day[!operator<=>]]
[codeblock:declaration]
constexpr strong_ordering operator<=>(const day& x, const day& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`unsigned{x} <=> unsigned{y}].
[:zh_CN] [`unsigned{x} <=> unsigned{y}]。
[end:description]

[%@library operator+[!day]]
[%@library day[!operator+]]
[codeblock:declaration]
constexpr day operator+(const day& x, const days& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`day(unsigned{x} + y.count())].
[:zh_CN] [`day(unsigned{x} + y.count())]。
[end:description]

[%@library operator+[!day]]
[%@library day[!operator+]]
[codeblock:declaration]
constexpr day operator+(const days& x, const day& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`y + x].
[:zh_CN] [`y + x]。
[end:description]

[%@library operator-[!day]]
[%@library day[!operator-]]
[codeblock:declaration]
constexpr day operator-(const day& x, const days& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`x + -y].
[:zh_CN] [`x + -y]。
[end:description]

[%@library operator-[!day]]
[%@library day[!operator-]]
[codeblock:declaration]
constexpr days operator-(const day& x, const day& y) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`days{unsigned{x} - int(unsigned{y})}].
[:zh_CN] [`days{unsigned{x} - int(unsigned{y})}]。
[end:description]

[%@library operator<<[!day]]
[%@library day[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const day& d);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock:notation]
return os << (d.ok() ?
  format([*STATICALLY-WIDEN]<charT>("{:%d}"), d) :
  format([*STATICALLY-WIDEN]<charT>("{:%d} is not a valid day"), d));
[codeblock:end]
[end:description]

[%@library from_stream[!day]]
[%@library day[!from_stream]]
[codeblock:declaration]
template<class charT, class traits, class Alloc = allocator<charT>>
  basic_istream<charT, traits>&
    from_stream(basic_istream<charT, traits>& is, const charT* fmt,
                day& d, basic_string<charT, traits, Alloc>* abbrev = nullptr,
                minutes* offset = nullptr);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Attempts to parse the input stream [`is] into the [`day] [`d] using
the format flags given in the NTCTS [`fmt] as specified in [#time.parse].
[:zh_CN] 尝试如 [#time.parse] 中所指定的方式使用由 [$:sc ntcts] [`fmt] 所给定的
格式标记将输入流 [`is] 解析到 [`day] [`d] 之中。

[:en] If the parse fails to decode a valid day,
[`is.setstate(ios_base::failbit)] shall be called and [`d] shall not be
modified.
[:zh_CN] 如果解析无法解码有效 [`day]，则应当调用
[`is.setstate(ios_base::failbit)] 且 [`d] 不应被改动。

[:en] If [`%Z] is used and successfully parsed, that value will be assigned to
[`*abbrev] if [`abbrev] is non-null.
[:zh_CN] 如果使用了 [`%Z] 并且成功进行了解析，则当 [`abbrev] 不为空值时将该值
赋值给 [`*abbrev]。

[:en] If [`%z] (or a modified variant) is used and successfully parsed,
that value will be assigned to [`*offset] if [`offset] is non-null.
[:zh_CN] 如果使用了 [`%z]（或其带修饰变体）并且成功进行了解析，则当 [`offset]
不为空值时将该值赋值给 [`*offset]。

[para:returns]
[:en] [`is].
[:zh_CN] [`is]。
[end:description]

[%@library operator""d[!day]]
[%@library day[!operator""d]]
[codeblock:declaration]
constexpr day operator""d(unsigned long long d) noexcept;
[codeblock:end]

[begin:description]
[para:returns]
[:en] [`day{static_cast<unsigned>(d)}].
[:zh_CN] [`day{static_cast<unsigned>(d)}]。
[end:description]
