[section#time.clock.cast.fn
    [:en] Function template [`clock_cast]
    [:zh_CN] 函数模板 [`clock_cast]
]

[%@lib clock_cast]
[codeblock:declaration]
template<class DestClock, class SourceClock, class Duration>
  auto clock_cast(const time_point<SourceClock, Duration>& t);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This function does not participate in overload resolution unless at least
one of the following clock time conversion expressions is well-formed:
[:zh_CN] 除非以下至少一个时钟时间转换表达式良构，否则这个函数不能参与重载决议：

[list]
[item]
[codeblock]
clock_time_conversion<DestClock, SourceClock>{}(t)
[codeblock:end]

[item]
[codeblock]
clock_time_conversion<DestClock, system_clock>{}(
    clock_time_conversion<system_clock, SourceClock>{}(t))
[codeblock:end]

[item]
[codeblock]
clock_time_conversion<DestClock, utc_clock>{}(
    clock_time_conversion<utc_clock, SourceClock>{}(t))
[codeblock:end]

[item]
[codeblock]
clock_time_conversion<DestClock, utc_clock>{}(
    clock_time_conversion<utc_clock, system_clock>{}(
        clock_time_conversion<system_clock, SourceClock>{}(t)))
[codeblock:end]

[item]
[codeblock]
clock_time_conversion<DestClock, system_clock>{}(
    clock_time_conversion<system_clock, utc_clock>{}(
        clock_time_conversion<utc_clock, SourceClock>{}(t)))
[codeblock:end]
[list:end]

[:en] A clock time conversion expression is considered better than another clock
time conversion expression if it involves fewer [`operator()] calls on
[`clock_time_conversion] specializations.
[:zh_CN] 如果一个时钟时间转换表达式比另一个时钟时间转换表达式涉及更少的对
[`clock_time_conversion] 的特例的 [`operator()] 调用，则它被认为比另一个更好。

[:en] If, among the well-formed clock time conversion expressions from the above
list, there is not a unique best expression, the [`clock_cast] is ambiguous and
the program is ill-formed.
[:zh_CN] 如果以上列表中的良构的时钟时间转换表达式中，没有唯一的最好的表达式，则
[`clock_cast] 有歧义且程序非良构。

[para:returns]
[:en] The best well-formed clock time conversion expression in the above list.
[:zh_CN] 以上列表中最好的两个时钟时间转换表达式。
[div:end]
