[section#time.cal.ym.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@library operator==[!year_month]]
[%@library year_month[!operator==]]
[codeblock:declaration]
constexpr bool operator==(const year_month& x, const year_month& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.year() == y.year() && x.month() == y.month()].
[:zh_CN] [`x.year() == y.year() && x.month() == y.month()]。
[div:end]

[%@library operator<=>[!year_month]]
[%@library year_month[!operator<=>]]
[codeblock:declaration]
constexpr strong_ordering operator<=>(const year_month& x, const year_month& y) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock:notation]
if (auto c = x.year() <=> y.year(); c != 0) return c;
return x.month() <=> y.month();
[codeblock:end]
[div:end]

[%@library operator+[!year_month]]
[%@library year_month[!operator+]]
[codeblock:declaration]
constexpr year_month operator+(const year_month& ym, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] A [`year_month] value [`z] such that [`z - ym == dm].
[:zh_CN] [`year_month] 值 [`z]，使得 [`z - ym == dm]。

[para:complexity]
[:en] [?bigoh 1] with respect to the value of [`dm].
[:zh_CN] 对于 [`dm] 的值为 [?bigoh 1]。
[div:end]

[%@library operator+[!year_month]]
[%@library year_month[!operator+]]
[codeblock:declaration]
constexpr year_month operator+(const months& dm, const year_month& ym) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ym + dm].
[:zh_CN] [`ym + dm]。
[div:end]

[%@library operator-[!year_month]]
[%@library year_month[!operator-]]
[codeblock:declaration]
constexpr year_month operator-(const year_month& ym, const months& dm) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ym + -dm].
[:zh_CN] [`ym + -dm]。
[div:end]

[%@library operator-[!year_month]]
[%@library year_month[!operator-]]
[codeblock:declaration]
constexpr months operator-(const year_month& x, const year_month& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[codeblock:notation]
x.year() - y.year() + months{static_cast<int>(unsigned{x.month()}) -
                             static_cast<int>(unsigned{y.month()})}
[codeblock:end]
[div:end]

[%@library operator+[!year_month]]
[%@library year_month[!operator+]]
[codeblock:declaration]
constexpr year_month operator+(const year_month& ym, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`(ym.year() + dy) / ym.month()].
[:zh_CN] [`(ym.year() + dy) / ym.month()].
[div:end]

[%@library operator+[!year_month]]
[%@library year_month[!operator+]]
[codeblock:declaration]
constexpr year_month operator+(const years& dy, const year_month& ym) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ym + dy].
[:zh_CN] [`ym + dy]。
[div:end]

[%@library operator-[!year_month]]
[%@library year_month[!operator-]]
[codeblock:declaration]
constexpr year_month operator-(const year_month& ym, const years& dy) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`ym + -dy].
[:zh_CN] [`ym + -dy]。
[div:end]

[%@library operator<<[!year_month]]
[%@library year_month[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const year_month& ym);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：
[codeblock]
return os << format(os.getloc(), [[redoc("^", "n>")]]STATICALLY-WIDEN<charT>("{}/{}"),
                    ym.year(), ym.month());
[codeblock:end]
[div:end]

[%@library from_stream[!year_month]]
[%@library year_month[!from_stream]]
[codeblock:declaration]
template<class charT, class traits, class Alloc = allocator<charT>>
  basic_istream<charT, traits>&
    from_stream(basic_istream<charT, traits>& is, const charT* fmt,
                year_month& ym, basic_string<charT, traits, Alloc>* abbrev = nullptr,
                minutes* offset = nullptr);
[codeblock:end]

[div:description]
[para:effects]
[:en] Attempts to parse the input stream [`is] into the [`year_month] [`ym]
using the format flags given in the NTCTS [`fmt] as specified in [#time.parse].
[:zh_CN] 尝试如 [#time.parse] 中所指定的方式使用由 [$:sc ntcts] [`fmt] 所给定的
格式标记将输入流 [`is] 解析到 [`year_month] [`ym] 之中。

[:en] If the parse fails to decode a valid [`year_month],
[`is.setstate(ios_base::failbit)] shall be called and [`ym] shall not be
modified.
[:zh_CN] 如果解析无法解码有效 [`year_month]，则应当调用
[`is.setstate(ios_base::failbit)] 且 [`ym] 不应被改动。

[:en] If [`%Z] is used and successfully parsed, that value will be assigned to
[`*abbrev] if [`abbrev] is non-null.
[:zh_CN] 如果使用了 [`%Z] 并且成功进行了解析，则当 [`abbrev] 不为空值时将该值
赋值给 [`*abbrev]。

[:en] If [`%z] (or a modified variant) is used and successfully parsed,
that value will be assigned to [`*offset] if [`offset] is non-null.
[:zh_CN] 如果使用了 [`%z]（或其带修饰变体）并且成功进行了解析，则当 [`offset]
不为空值时将该值赋值给 [`*offset]。

[para:returns]
[:en] [`is].
[:zh_CN] [`is]。
[div:end]
