[section#time.tod.io
    [:en] Formatted output
    [:zh_CN] 格式化输出
]

[%@library operator<<[!time_of_day<hours>]]
[%@library time_of_day<hours>[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const time_of_day<hours>& t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`t] is a 24-hour time, outputs to [`os] according to the format
[`"%H00"] ([#time.format]).
[:zh_CN] 如果 [`t] 为 24 小时时间，则根据格式 [`"%H00"]（[#time.format]）输出到
[`os]。

[:en] Otherwise outputs to [`os] according to the format [`"%I%p"]
([#time.format]).
[:zh_CN] 否则根据格式 [`"%I%p"]（[#time.format]）输出到 [`os]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。

[para]
[enter:example]
[codeblock]
for (hours h : {1h, 18h}) {
  time_of_day<hours> tod(h);
  os << tod << '\n';
  tod.make12();
  os << tod << '\n';
}
[codeblock:end]

[:en] Produces the output:
[:zh_CN] 产生输出：

[codeblock:output]
0100
1am
1800
6pm
[codeblock:end]
[exit:example]
[exit:description]

[%@library operator<<[!time_of_day<minutes>]]
[%@library time_of_day<minutes>[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const time_of_day<minutes>& t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`t] is a 24-hour time, outputs to [`os] according to the format
[`"%H:%M"] ([#time.format]).
[:zh_CN] 如果 [`t] 为 24 小时时间，则根据格式 [`"%H:%M"]（[#time.format]）输出到
[`os]。

[:en] Otherwise outputs to [`os] according to the format [`"%I:%M%p"]
([#time.format]).
[:zh_CN] 否则根据格式 [`"%I:%M%p"]（[#time.format]）输出到 [`os]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。

[para:~]
[enter:example]
[codeblock]
for (minutes m : {68min, 1095min}) {
  time_of_day<minutes> tod(m);
  os << tod << '\n';
  tod.make12();
  os << tod << '\n';
}
[codeblock:end]

[:en] Produces the output:
[:zh_CN] 产生输出：

[codeblock:output]
01:08
1:08am
18:15
6:15pm
[codeblock:end]
[exit:example]
[exit:description]

[%@library operator<<[!time_of_day<seconds>]]
[%@library time_of_day<seconds>[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const time_of_day<seconds>& t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`t] is a 24-hour time, outputs to [`os] according to the format
[`"%T"] ([#time.format]).
[:zh_CN] 如果 [`t] 为 24 小时时间，则根据格式 [`"%T"]（[#time.format]）输出到
[`os]。

[:en] Otherwise outputs to [`os] according to the format [`"%I:%M:%S%p"]
([#time.format]).
[:zh_CN] 否则根据格式 [`"%I:%M:%S%p"]（[#time.format]）输出到 [`os]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。

[para:~]
[enter:example]
[codeblock]
for (seconds s : {4083s, 65745s}) {
  time_of_day<seconds> tod(s);
  os << tod << '\n';
  tod.make12();
  os << tod << '\n';
}
[codeblock:end]

[:en] Produces the output:
[:zh_CN] 产生输出：

[codeblock:output]
01:08:03
1:08:03am
18:15:45
6:15:45pm
[codeblock:end]
[exit:example]
[exit:description]

[%@library operator<<[!time_of_day<[*sub-second duration]>]]
[%@library time_of_day<[*sub-second duration]>[!operator<<]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const time_of_day<duration<Rep, Period>>& t);
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`t] is a 24-hour time, outputs to [`os] according to the format
[`"%T"] ([#time.format]).
[:zh_CN] 如果 [`t] 为 24 小时时间，则根据格式 [`"%T"]（[#time.format]）输出到
[`os]。

[:en] Otherwise outputs to [`os] according to the format [`"%I:%M:%S%p"]
([#time.format]).
[:zh_CN] 否则根据格式 [`"%I:%M:%S%p"]（[#time.format]）输出到 [`os]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。

[para:~]
[enter:example]
[codeblock]
for (milliseconds ms : {4083007ms, 65745123ms}) {
  time_of_day<seconds> tod(ms);
  os << tod << '\n';
  tod.make12();
  os << tod << '\n';
}
[codeblock:end]

[:en] Produces the output:
[:zh_CN] 产生输出：

[codeblock:output]
01:08:03.007
1:08:03.007am
18:15:45.123
6:15:45.123pm
[codeblock:end]
[exit:example]
[exit:description]
