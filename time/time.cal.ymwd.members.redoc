[section#time.cal.ymwd.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@library year_month_weekday[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr year_month_weekday(const chrono::year& y, const chrono::month& m,
                             const chrono::weekday_indexed& wdi) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an object of type [`year_month_weekday] by initializing [`y_]
with [`y], [`m_] with [`m] and [`wdi_] with [`wdi].
[:zh_CN] 通过以 [`y] 初始化 [`y_]，以 [`m] 初始化 [`m_]，并以 [`wdi] 初始化
[`wdi_] 构造 [`year_month_weekday] 类型的对象。
[div:end]

[%@library year_month_weekday[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr year_month_weekday(const sys_days& dp) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an object of type [`year_month_weekday] which corresponds to
the date represented by [`dp].
[:zh_CN] 构造一个对应于 [`dp] 所表示的日期的 [`year_month_weekday] 类型的对象。

[para:remarks]
[:en] For any value [`ymd] of type [`year_month_weekday] for which [`ymd.ok()]
is [`true], [`ymd == year_month_weekday{sys_days{ymd}}] is [`true].
[:zh_CN] 对于任何 [`year_month_weekday] 类型的值 [`ymd]，其 [`ymd.ok()] 为
[`true]，则 [`ymd == year_month_weekday{sys_days{ymd}}] 为 [`true]。
[div:end]

[%@library year_month_weekday[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr explicit year_month_weekday(const local_days& dp) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an object of type [`year_month_weekday] that corresponds to the
date represented by [`dp].
[:zh_CN] 构造一个对应于 [`dp] 所表示的日期的 [`year_month_weekday] 类型的对象。

[para:remarks]
[:en] Equivalent to constructing with [`sys_days{dp.time_since_epoch()}].
[:zh_CN] 等价于以 [`sys_days{dp.time_since_epoch()}] 进行的构造。
[div:end]

[%@library operator+=[!year_month_weekday]]
[%@library year_month_weekday[!operator+=]]
[codeblock:declaration]
constexpr year_month_weekday& operator+=(const months& m) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] [`*this = *this + m].
[:zh_CN] [`*this = *this + m]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator-=[!year_month_weekday]]
[%@library year_month_weekday[!operator-=]]
[codeblock:declaration]
constexpr year_month_weekday& operator-=(const months& m) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] [`*this = *this - m].
[:zh_CN] [`*this = *this - m]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator+=[!year_month_weekday]]
[%@library year_month_weekday[!operator+=]]
[codeblock:declaration]
constexpr year_month_weekday& operator+=(const years& y) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] [`*this = *this + y].
[:zh_CN] [`*this = *this + y]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library operator-=[!year_month_weekday]]
[%@library year_month_weekday[!operator-=]]
[codeblock:declaration]
constexpr year_month_weekday& operator-=(const years& y) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] [`*this = *this - y].
[:zh_CN] [`*this = *this - y]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[%@library year[!year_month_weekday]]
[%@library year_month_weekday[!year]]
[codeblock:declaration]
constexpr chrono::year year() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`y_].
[:zh_CN] [`y_]。
[div:end]

[%@library month[!year_month_weekday]]
[%@library year_month_weekday[!month]]
[codeblock:declaration]
constexpr chrono::month month() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`m_].
[:zh_CN] [`m_]。
[div:end]

[%@library weekday[!year_month_weekday]]
[%@library year_month_weekday[!weekday]]
[codeblock:declaration]
constexpr chrono::weekday weekday() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`wdi_.weekday()].
[:zh_CN] [`wdi_.weekday()]。
[div:end]

[%@library index[!year_month_weekday]]
[%@library year_month_weekday[!index]]
[codeblock:declaration]
constexpr unsigned index() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`wdi_.index()].
[:zh_CN] [`wdi_.index()]。
[div:end]

[%@library weekday_indexed[!year_month_weekday]]
[%@library year_month_weekday[!weekday_indexed]]
[codeblock:declaration]
constexpr chrono::weekday_indexed weekday_indexed() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`wdi_].
[:zh_CN] [`wdi_]。
[div:end]

[%@library operator sys_days[!year_month_weekday]]
[%@library year_month_weekday[!operator sys_days]]
[codeblock:declaration]
constexpr operator sys_days() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] If [`y_.ok() && m_.ok() && wdi_.weekday().ok()], returns a [`sys_days]
that represents the date [`(index() - 1) * 7] days after the first [`weekday()]
of [`year()/month()].
[:zh_CN] 如果 [`y_.ok() && m_.ok() && wdi_.weekday().ok()]，则返回代表
[`year()/month()] 的第一个 [`weekday()] 之后 [`(index() - 1) * 7] 天的日期的
[`sys_days]。

[:en] If [`index()] is 0 the returned [`sys_days] represents the date 7 days
prior to the first [`weekday()] of [`year()/month()].
[:zh_CN] 如果 [`index()] 为 0，则所返回的 [`sys_days] 代表 [`year()/month()] 的
第一个 [`weekday()] 之前 7 天的日期。

[:en] Otherwise the returned value is unspecified.
[:zh_CN] 否则返回值是未指明的。
[div:end]

[%@library operator local_days[!year_month_weekday]]
[%@library year_month_weekday[!operator local_days]]
[codeblock:declaration]
constexpr explicit operator local_days() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`local_days{sys_days{*this}.time_since_epoch()}].
[:zh_CN] [`local_days{sys_days{*this}.time_since_epoch()}]。
[div:end]

[%@library ok[!year_month_weekday]]
[%@library year_month_weekday[!ok]]
[codeblock:declaration]
constexpr bool ok() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] If any of [`y_.ok()], [`m_.ok()], or [`wdi_.ok()] is [`false], returns
[`false].
[:zh_CN] 如果 [`y_.ok()]、[`m_.ok()] 或 [`wdi_.ok()] 有任何为 [`false]，则返回
[`false]。

[:en] Otherwise, if [`*this] represents a valid date, returns [`true].
[:zh_CN] 否则，如果 [`*this] 表示有效的日期，则返回 [`true]。

[:en] Otherwise, returns [`false].
[:zh_CN] 否则，返回 [`false]。
[div:end]
