[section#time.clock.local
    [:en] Local time
    [:zh_CN] 本地时间
]
[%@library local_time]

[para]
[:en]
The family of time points denoted by [`local_time<Duration>] are based on the
pseudo clock [`local_t].
[:zh_CN]
由 [`local_time<Duration>] 所代表的时间点家族是基于伪时钟 [`local_t] 的。

[:en]
[`local_t] has no member [`now()] and thus does not meet the clock requirements.
[:zh_CN]
[`local_t] 没有 [`now()] 成员，因而并不满足时钟规定。

[:en]
Nevertheless [`local_time<Duration>] serves the vital role of representing local
time with respect to a not-yet-specified time zone.
[:zh_CN]
不过尽管如此，[`local_time<Duration>] 都在表示相对于某个未指定的时区的本地时间时
都扮演了关键角色。

[:en]
Aside from being able to get the current time, the complete [`time_point]
algebra is available for [`local_time<Duration>] (just as for
[`sys_time<Duration>]).
[:zh_CN]
除了获取当前时间之外，[`local_time<Duration>] 同 [`sys_time<Duration>] 一样都
提供了 [`time_point] 的完整代数运算。

[%@library operator<<[!local_time]]
[%@library local_time[!operator<<]]
[codeblock:declaration]
template<class charT, class traits, class Duration>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os, const local_time<Duration>& lt);
[codeblock:end]

[begin:description]
[para:effects]
[codeblock]
os << sys_time<Duration>{lt.time_since_epoch()};
[codeblock:end]

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。
[end:description]

[%@library from_stream[!local_time]]
[%@library local_time[!from_stream]]
[codeblock:declaration]
template<class charT, class traits, class Duration, class Alloc = allocator<charT>>
  basic_istream<charT, traits>&
    from_stream(basic_istream<charT, traits>& is, const charT* fmt,
                local_time<Duration>& tp, basic_string<charT, traits, Alloc>* abbrev = nullptr,
                minutes* offset = nullptr);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Attempts to parse the input stream [`is] into the [`local_time] [`tp]
using the format flags given in the NTCTS [`fmt] as specified in [#time.parse].
[:zh_CN] 尝试如 [#time.parse] 中所指定的方式使用由 [$:sc ntcts] [`fmt] 所给定的
格式标记将输入流 [`is] 解析到 [`local_time] [`tp] 之中。

[:en] If the parse fails to decode a valid date,
[`is.setstate(ios_base::failbit)] shall be called and [`tp] shall not be
modified.
[:zh_CN] 如果解析无法解码有效日期，则应当调用 [`is.setstate(ios_base::failbit)]
且 [`tp] 不应被改动。

[:en] If [`%Z] is used and successfully parsed, that value will be assigned to
[`*abbrev] if [`abbrev] is non-null.
[:zh_CN] 如果使用了 [`%Z] 并且成功进行了解析，则当 [`abbrev] 不为空值时将该值
赋值给 [`*abbrev]。

[:en] If [`%z] (or a modified variant) is used and successfully parsed,
that value will be assigned to [`*offset] if [`offset] is non-null.
[:zh_CN] 如果使用了 [`%z]（或其带修饰变体）并且成功进行了解析，则当 [`offset]
不为空值时将该值赋值给 [`*offset]。

[para:returns]
[:en] [`is].
[:zh_CN] [`is]。
[end:description]
