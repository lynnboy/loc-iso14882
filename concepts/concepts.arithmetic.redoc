[section#concepts.arithmetic
    [:en] Arithmetic concepts
    [:zh_CN] 算术概念
]

[codeblock:declaration]
template<class T>
  concept [[redoc("`:c@def>")]]integral = is_integral_v<T>;
template<class T>
  concept [[redoc("`:c@def>")]]signed_integral = [[redoc("`:c>")]]integral<T> && is_signed_v<T>;
template<class T>
  concept [[redoc("`:c@def>")]]unsigned_integral = [[redoc("`:c>")]]integral<T> && ![[redoc("`:c>")]]signed_integral<T>;
template<class T>
  concept [[redoc("`:c@def>")]]floating_point = is_floating_point_v<T>;
[codeblock:end]

[div:description]
[para]
[begin:note]
[:en] [`:c signed_integral] can be modeled even by types that are not
signed integral types ([#basic.fundamental]); for example, [`char].
[:zh_CN] 即使是并非有符号整型类型（[#basic.fundamental]）的类型也可以构成
[`:c signed_integral]；例如 [`char]。
[end:note]

[para]
[begin:note]
[:en] [`:c unsigned_integral] can be modeled even by types that are not
unsigned integral types ([#basic.fundamental]); for example, [`bool].
[:zh_CN] 即使是并非无符号整型类型（[#basic.fundamental]）的类型也可以构成
[`:c unsigned_integral]；例如 [`bool]。
[end:note]
[div:end]
