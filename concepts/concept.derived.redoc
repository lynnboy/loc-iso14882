[section#concept.derived
    [:en] Concept [`derived_from]
    [:zh_CN] 概念 [`derived_from]
]

[%@library derived_from]
[codeblock:declaration]
template<class Derived, class Base>
  concept derived_from =
    is_base_of_v<Base, Derived> &&
    is_convertible_v<const volatile Derived*, const volatile Base*>;
[codeblock:end]

[begin:description]
[para]
[begin:note]
[:en] [`derived_from<Derived, Base>] is satisfied if and only if [`Derived] is
publicly and unambiguously derived from [`Base], or [`Derived] and [`Base] are
the same class type ignoring cv-qualifiers.
[:zh_CN] 当且仅当 [`Derived] 公开且无歧义派生于 [`Base]，或者 [`Derived] 和
[`Base] 忽略 cv 限定符时为相同类类型时，[`derived_from<Derived, Base>] 得以满足。
[end:note]
[end:description]
