[section#concept.copyconstructible
    [:en] Concept [`CopyConstructible]
    [:zh_CN] 概念 [`CopyConstructible]
]

[%@library CopyConstructible]
[codeblock:declaration]
template<class T>
  concept CopyConstructible =
    MoveConstructible<T> &&
    Constructible<T, T&> && ConvertibleTo<T&, T> &&
    Constructible<T, const T&> && ConvertibleTo<const T&, T> &&
    Constructible<T, const T> && ConvertibleTo<const T, T>;
[codeblock:end]

[enter:description]
[para]
[:en] If [`T] is an object type, then let [`v] be an lvalue of type
(possibly [`const]) [`T] or an rvalue of type [`const T].
[:zh_CN] 如果 [`T] 为对象类型，则令 [`v] 为（可能为 [`const] 的）[`T] 类型的左值
或者 [`const T] 类型的右值。

[:en] [`CopyConstructible<T>] is satisfied only if
[:zh_CN] 仅当符合以下条件时 [`CopyConstructible<T>] 得以满足：

[list]
[item]
[:en] After the definition [`T u = v;], [`u] is equal to [`v].
[:zh_CN] 经过定义式 [`T u = v;] 之后，[`u] 等于 [`v]。

[item]
[:en] [`T(v)] is equal to [`v].
[:zh_CN] [`T(v)] 等于 [`v]。
[list:end]
[exit:description]
