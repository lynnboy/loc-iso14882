[section#concept.copyconstructible
    [:en] Concept [`copy_constructible]
    [:zh_CN] 概念 [`copy_constructible]
]

[%@library copy_constructible]
[codeblock:declaration]
template<class T>
  concept copy_constructible =
    move_constructible<T> &&
    constructible_from<T, T&> && convertible_to<T&, T> &&
    constructible_from<T, const T&> && convertible_to<const T&, T> &&
    constructible_from<T, const T> && convertible_to<const T, T>;
[codeblock:end]

[enter:description]
[para]
[:en] If [`T] is an object type, then let [`v] be an lvalue of type
(possibly [`const]) [`T] or an rvalue of type [`const T].
[:zh_CN] 如果 [`T] 为对象类型，则令 [`v] 为（可能为 [`const] 的）[`T] 类型的左值
或者 [`const T] 类型的右值。

[:en] [`T] models [`copy_constructible] only if
[:zh_CN] 仅当符合以下条件时，[`T] 构成 [`copy_constructible]：

[list]
[item]
[:en] After the definition [`T u = v;], [`u] is equal to [`v].
[:zh_CN] 经过定义式 [`T u = v;] 之后，[`u] 等于 [`v]。

[item]
[:en] [`T(v)] is equal to [`v].
[:zh_CN] [`T(v)] 等于 [`v]。
[list:end]
[exit:description]
