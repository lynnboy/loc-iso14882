[section#concept.default.init
    [:en] Concept [`:cname default_initializable]
    [:zh_CN] 概念 [`:cname default_initializable]
]

[codeblock:declaration]
template<class T>
  constexpr bool [[redoc("*>")]]is-default-initializable = [[redoc("[=seebelow]")]];         // [=expos]

template<class T>
  concept [[redoc("`:c@def>")]]default_initializable = [[redoc("`:c>")]]constructible_from<T> &&
                                  requires { T{}; } &&
                                  [[redoc("*>")]]is-default-initializable<T>;
[codeblock:end]

[div:description]
[para]
[:en] For a type [`T], [`[*is-default-initializable]<T>] is [`true] if and
only if the variable definition
[:zh_CN] 对于类型 [`T]，当且仅当变量定义式
[codeblock]
T t;
[codeblock:end]
[:en@~] is well-formed for some invented variable [`t]; otherwise it is [`false].
[:zh_CN@~] 对于某个虚构变量 [`t] 良构时，[`[*is-default-initializable]<T>] 为
[`true]；否则为 [`false]。

[:en] Access checking is performed as if in a context unrelated to [`T].
[:zh_CN] 其访问检查如同在某个与 [`T] 无关的语境中进行。

[:en] Only the validity of the immediate context of the variable initialization
is considered.
[:zh_CN] 仅考察变量初始化的直接语境的有效性。
[div:end]
