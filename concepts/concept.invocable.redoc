[section#concept.invocable
    [:en] Concept [`Invocable]
    [:zh_CN] 概念 [`Invocable]
]

[para]
[:en] The [`Invocable] concept specifies a relationship between a callable type
([#func.def]) [`F] and a set of argument types [`Args...] which can be evaluated
by the library function [`invoke] ([#func.invoke]).
[:zh_CN] [`Invocable] 概念指定可调用类型（[#func.def]）[`F] 和一组实参类型
[`Args...] 之间的关系，它可以由程序库函数 [`invoke]（[#func.invoke]）调用。

[%@library Invocable]
[codeblock:declaration]
template<class F, class... Args>
  concept Invocable = requires(F&& f, Args&&... args) {
    invoke(std::forward<F>(f), std::forward<Args>(args)...); // [:en] not required to be equality-preserving
                                                             // [|:zh_CN] 不要求维持相等性
  };
[codeblock:end]

[enter:description]
[para]
[enter:example]
[:en] A function that generates random numbers can satisfy [`Invocable], since
the [`invoke] function call expression is not required to be equality-preserving
([#concepts.equality]).
[:zh_CN] 生成随机数的函数满足 [`Invocable]，因为 [`invoke] 函数调用表达式并不
要求维持相等性（[#concepts.equality]）。
[exit:example]
[exit:description]
