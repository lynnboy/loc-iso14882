[section#concept.commonref
    [:en] Concept [`CommonReference]
    [:zh_CN] 概念 [`CommonReference]
]

[para]
[:en] For two types [`T] and [`U], if [`common_reference_t<T, U>] is well-formed
and denotes a type [`C] such that both [`ConvertibleTo<T, C>] and
[`ConvertibleTo<U, C>] are satisfied, then [`T] and [`U] share a
[+common reference type[%]], [`C].
[:zh_CN] 对于两个类型 [`T] 和 [`U]，如果 [`common_reference_t<T, U>] 良构并代表
某个类型 [`C]，使得 [`ConvertibleTo<T, C>] 和 [`ConvertibleTo<U, C>] 都得以满足，
则 [`T] 和 [`U] 共享[+公共引用类型[%]] [`C]。

[enter:note]
[:en] [`C] could be the same as [`T], or [`U], or it could be a different type.
[:zh_CN] [`C] 可以和 [`T] 或 [`U] 相同，或者它也可以是一个不同的类型。

[:en] [`C] may be a reference type.
[:zh_CN] [`C] 为某个引用类型。
[exit:note]

[%@library CommonReference]
[codeblock:declaration]
template<class T, class U>
  concept CommonReference =
    Same<common_reference_t<T, U>, common_reference_t<U, T>> &&
    ConvertibleTo<T, common_reference_t<T, U>> &&
    ConvertibleTo<U, common_reference_t<T, U>>;
[codeblock:end]

[enter:description]
[para]
[:en] Let [`C] be [`common_reference_t<T, U>].
[:zh_CN] 令 [`C] 为 [`common_reference_t<T, U>]。

[:en] Let [`t] be a function whose return type is [`T], and let [`u] be a
function whose return type is [`U].
[:zh_CN] 令 [`t] 为返回类型为 [`T] 的函数，并令 [`u] 为返回类型为 [`U] 的函数。

[:en] [`CommonReference<T, U>] is satisfied only if:
[:zh_CN] 仅当符合以下条件时 [`CommonReference<T, U>] 得以满足：

[list]
[item]
[:en] [`C(t())] equals [`C(t())] if and only if [`t()] is an equality-preserving
expression ([#concepts.equality]).
[:zh_CN] 当且仅当 [`t()] 是维持相等性表达式（[#concepts.equality]）时，[`C(t())]
等于 [`C(t())]。
[item]
[:en] [`C(u())] equals [`C(u())] if and only if [`u()] is an equality-preserving
expression.
[:zh_CN] 当且仅当 [`u()] 是维持相等性表达式时，[`C(u())] 等于 [`C(u())]。
[list:end]

[para]
[enter:note]
[:en] Users can customize the behavior of [`CommonReference] by specializing
the [`basic_common_reference] class template ([#meta.trans.other]).
[:zh_CN] 用户可以通过特化类模板 [`basic_common_reference]（[#meta.trans.other]）
来定制 [`CommonReference] 的行为。
[exit:note]
[exit:description]
