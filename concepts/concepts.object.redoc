[section#concepts.object
    [:en] Object concepts
    [:zh_CN] 对象概念
]

[para]
[:en] This subclause describes concepts that specify the basis of the
value-oriented programming style on which the library is based.
[:zh_CN] 本子条款描述的概念指定了程序库所基于的面向值编程风格的基础。

[codeblock:declaration]
template<class T>
  concept [[redoc("`:c@def>")]]movable = is_object_v<T> && move_constructible<T> &&
                    [[redoc("`:c>")]]assignable_from<T&, T> && swappable<T>;
template<class T>
  concept [[redoc("`:c@def>")]]copyable = [[redoc("`:c>")]]copy_constructible<T> && [[redoc("`:c>")]]movable<T> && [[redoc("`:c>")]]assignable_from<T&, T&> &&
                     [[redoc("`:c>")]]assignable_from<T&, const T&> && [[redoc("`:c>")]]assignable_from<T&, const T>;
template<class T>
  concept [[redoc("`:c@def>")]]semiregular = copyable<T> && default_initializable<T>;
template<class T>
  concept [[redoc("`:c@def>")]]regular = semiregular<T> && equality_comparable<T>;
[codeblock:end]

[div:description]
[para]
[begin:note]
[:en] The [`:c semiregular] concept is modeled by types that behave similarly to
built-in types like [`int], except that they need not be comparable with [`==].
[:zh_CN] [`:c semiregular] 概念可被行为与如 [`int] 这样的内建类型相似的类型所构成，
但它们不必可由 [`==] 进行比较。
[end:note]

[para]
[begin:note]
[:en] The [`:c regular] concept is modeled by types that behave similarly to
built-in types like [`int] and that are comparable with [`==].
[:zh_CN] [`:c regular] 概念可被行为与如 [`int] 这样的内建类型相似并且可以用 [`==]
进行比较的类型所构成。
[end:note]
[div:end]
