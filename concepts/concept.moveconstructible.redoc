[section#concept.moveconstructible
    [:en] Concept [`MoveConstructible]
    [:zh_CN] 概念 [`MoveConstructible]
]

[%@library MoveConstructible]
[codeblock:declaration]
template<class T>
  concept MoveConstructible = Constructible<T, T> && ConvertibleTo<T, T>;
[codeblock:end]

[enter:description]
[para]
[:en] If [`T] is an object type, then let [`rv] be an rvalue of type [`T] and
[`u2] a distinct object of type [`T] equal to [`rv].
[:zh_CN] 如果 [`T] 为对象类型，则令 [`rv] 为 [`T] 类型的右值，并令 [`u2] 为
[`T] 类型的等于 [`rv] 的其他对象。

[:en] [`T] models [`MoveConstructible] only if
[:zh_CN] 仅当符合以下条件时，[`T] 构成 [`MoveConstructible]：

[list]
[item]
[:en] After the definition [`T u = rv;], [`u] is equal to [`u2].
[:zh_CN] 经过定义式 [`T u = rv;] 之后，[`u] 等于 [`u2]。

[item]
[:en] [`T(rv)] is equal to [`u2].
[:zh_CN] [`T(rv)] 等于 [`u2]。

[item]
[:en] If [`T] is not [`const], [`rv][=']s resulting state is valid but
unspecified ([#lib.types.movedfrom]); otherwise, it is unchanged.
[:zh_CN] 如果 [`T] 不为 [`const]，则 [`rv] 的结果状态有效但未指明
（[#lib.types.movedfrom]）；否则它不被改动。
[list:end]
[exit:description]
