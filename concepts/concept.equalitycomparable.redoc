[section#concept.equalitycomparable
    [:en] Concept [`equality_comparable]
    [:zh_CN] 概念 [`equality_comparable]
]

[codeblock:declaration]
template<class T, class U>
  concept [*weakly-equality-comparable-with] = // [=Expos]
    requires(const remove_reference_t<T>& t,
             const remove_reference_t<U>& u) {
      { t == u } -> boolean;
      { t != u } -> boolean;
      { u == t } -> boolean;
      { u != t } -> boolean;
    };
[codeblock:end]

[enter:description]
[para]
[:en] For some types [`T] and [`U], let [`t] and [`u] be lvalues of types
[`const remove_reference_t<T>] and
[`const remove_reference_t<U>] respectively.
[:zh_CN] 对于类型 [`T] 和 [`U]，令 [`t] 和 [`u] 分别为
[`const remove_reference_t<T>] 和 [`const remove_reference_t<U>] 类型的左值。

[:en] [`T] and [`U] model [`[*weakly-equality-comparable-with]<T, U>] only if:
[:zh_CN] 仅当符合以下条件时，[`T] 和 [`U] 构成
[`[*weakly-equality-comparable-with]<T, U>]：

[list]
[item]
[:en] [`t == u], [`u == t], [`t != u], and [`u != t] have the same domain.
[:zh_CN] [`t == u]，[`u == t]，[`t != u]，和 [`u != t] 具有相同定义域。
[item]
[:en] [`bool(u == t) ==  bool(t == u)].
[:zh_CN] [`bool(u == t) ==  bool(t == u)]。
[item]
[:en] [`bool(t != u) == !bool(t == u)].
[:zh_CN] [`bool(t != u) == !bool(t == u)]。
[item]
[:en] [`bool(u != t) ==  bool(t != u)].
[:zh_CN] [`bool(u != t) ==  bool(t != u)]。
[list:end]
[exit:description]

[%@library equality_comparable]
[codeblock:declaration]
template<class T>
  concept equality_comparable = [*weakly-equality-comparable-with]<T, T>;
[codeblock:end]

[enter:description]
[para]
[:en] Let [`a] and [`b] be objects of type [`T].
[:zh_CN] 令 [`a] 和 [`b] 为 [`T] 类型的对象。

[:en] [`T] models [`equality_comparable] only if [`bool(a == b)] is [`true] when
[`a] is equal to [`b] ([#concepts.equality]), and [`false] otherwise.
[:zh_CN] 仅当若 [`a] 等于 [`b]（[#concepts.equality]）则 [`bool(a == b)] 为
[`true] 否则为 [`false] 时，[`T] 构成 [`equality_comparable]。

[para]
[enter:note]
[:en] The requirement that the expression [`a == b] is equality-preserving
implies that [`==] is transitive and symmetric.
[:zh_CN] 对表达式 [`a == b] 维持相等性的规定意味着 [`==] 的可传递性和对称性。
[exit:note]
[exit:description]

[%@library equality_comparable_with]
[codeblock:declaration]
template<class T, class U>
  concept equality_comparable_with =
    equality_comparable<T> && equality_comparable<U> &&
    common_reference_with<const remove_reference_t<T>&, const remove_reference_t<U>&> &&
    equality_comparable<
      common_reference_t<
        const remove_reference_t<T>&,
        const remove_reference_t<U>&>> &&
    [*weakly-equality-comparable-with]<T, U>;
[codeblock:end]

[enter:description]
[para]
[:en] For some types [`T] and [`U], let [`t] be an lvalue of type
[`const remove_reference_t<T>], [`u] be an lvalue of type
[`const remove_reference_t<U>], and [`C] be:
[:zh_CN] 对于类型 [`T] 和 [`U]，令 [`t] 为 [`const remove_reference_t<T>] 类型的
左值，[`u] 为 [`const remove_reference_t<U>] 类型的左值，并令 [`C] 为：

[codeblock:notation]
common_reference_t<const remove_reference_t<T>&, const remove_reference_t<U>&>
[codeblock:end]

[:en] [`T] and [`U] model [`equality_comparable_with<T, U>] only if
[`bool(t == u) == bool(C(t) == C(u))].
[:zh_CN] 仅当 [`bool(t == u) == bool(C(t) == C(u))] 时，[`T] 和 [`U] 构成
[`equality_comparable_with<T, U>]。
[exit:description]
