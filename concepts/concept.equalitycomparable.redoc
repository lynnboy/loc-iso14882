[section#concept.equalitycomparable
    [:en] Concept [`:cname equality_comparable]
    [:zh_CN] 概念 [`:cname equality_comparable]
]

[codeblock:declaration]
template<class T, class U>
  concept [[redoc("*:c@def>")]]weakly-equality-comparable-with = // [=expos]
    requires(const remove_reference_t<T>& t,
             const remove_reference_t<U>& u) {
      { t == u } -> [[redoc("*:c>")]]boolean-testable;
      { t != u } -> [[redoc("*:c>")]]boolean-testable;
      { u == t } -> [[redoc("*:c>")]]boolean-testable;
      { u != t } -> [[redoc("*:c>")]]boolean-testable;
    };
[codeblock:end]

[div:description]
[para]
[:en] Given types [`T] and [`U], let [`t] and [`u] be lvalues of types
[`const remove_reference_t<T>] and
[`const remove_reference_t<U>] respectively.
[:zh_CN] 给定类型 [`T] 和 [`U]，令 [`t] 和 [`u] 分别为
[`const remove_reference_t<T>] 和 [`const remove_reference_t<U>] 类型的左值。

[:en] [`T] and [`U] model [`[*:c weakly-equality-comparable-with]<T, U>] only if:
[:zh_CN] 仅当符合以下条件时，[`T] 和 [`U] 构成
[`[*:c weakly-equality-comparable-with]<T, U>]：

[list]
[item]
[:en] [`t == u], [`u == t], [`t != u], and [`u != t] have the same domain.
[:zh_CN] [`t == u]，[`u == t]，[`t != u]，和 [`u != t] 具有相同定义域。
[item]
[:en] [`bool(u == t) ==  bool(t == u)].
[:zh_CN] [`bool(u == t) ==  bool(t == u)]。
[item]
[:en] [`bool(t != u) == !bool(t == u)].
[:zh_CN] [`bool(t != u) == !bool(t == u)]。
[item]
[:en] [`bool(u != t) ==  bool(t != u)].
[:zh_CN] [`bool(u != t) ==  bool(t != u)]。
[list:end]
[div:end]

[codeblock:declaration]
template<class T>
  concept [[redoc("`:c@def>")]]equality_comparable = [[redoc("*:c>")]]weakly-equality-comparable-with<T, T>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`a] and [`b] be objects of type [`T].
[:zh_CN] 令 [`a] 和 [`b] 为 [`T] 类型的对象。

[:en] [`T] models [`:c equality_comparable] only if [`bool(a == b)] is [`true]
when [`a] is equal to [`b] ([#concepts.equality]), and [`false] otherwise.
[:zh_CN] 仅当若 [`a] 等于 [`b]（[#concepts.equality]）则 [`bool(a == b)] 为
[`true] 否则为 [`false] 时，[`T] 构成 [`:c equality_comparable]。

[para]
[begin:note]
[:en] The requirement that the expression [`a == b] is equality-preserving
implies that [`==] is transitive and symmetric.
[:zh_CN] 对表达式 [`a == b] 维持相等性的规定意味着 [`==] 的可传递性和对称性。
[end:note]
[div:end]

[codeblock:declaration]
template<class T, class U>
  concept [[redoc("`:c@def>")]]equality_comparable_with =
    [[redoc("`:c>")]]equality_comparable<T> && [[redoc("`:c>")]]equality_comparable<U> &&
    [[redoc("*:c>")]]comparison-common-type-with<T, U> &&
    [[redoc("`:c>")]]equality_comparable<
      common_reference_t<
        const remove_reference_t<T>&,
        const remove_reference_t<U>&>> &&
    [[redoc("*:c>")]]weakly-equality-comparable-with<T, U>;
[codeblock:end]

[div:description]
[para]
[:en] Given types [`T] and [`U], let [`t] and [`t2] be lvalues denoting distinct
equal objects of types [`const remove_reference_t<T>] and [`remove_cvref_t<T>],
respectively, let [`u] and [`u2] be lvalues denoting distinct equal objects of
types [`const remove_reference_t<U>] and [`remove_cvref_t<U>], respectively,
and let [`C] be:
[:zh_CN] 给定类型 [`T] 和 [`U]，令 [`t] 和 [`t2] 分别为代表相等的
[`const remove_reference_t<T>] 和 [`remove_cvref_t<T>] 类型的不同对象的左值，
[`u] 和 [`u2] 分别为代表相等的 [`const remove_reference_t<U>] 和
[`remove_cvref_t<U>] 类型的不同对象的左值，并令 [`C] 为：
[codeblock]
common_reference_t<const remove_reference_t<T>&, const remove_reference_t<U>&>
[codeblock:end]

[:en] [`T] and [`U] model [`[`:c equality_comparable_with]<T, U>] only if
[:zh_CN] 仅当以下情况时，[`T] 和 [`U] 构成[`[`:c equality_comparable_with]<T, U>]：
[codeblock]
bool(t == u) == bool([[redoc("*>")]]CONVERT_TO_LVALUE<C>(t2) == [[redoc("*>")]]CONVERT_TO_LVALUE<C>(u2))
[codeblock:end]
[div:end]
