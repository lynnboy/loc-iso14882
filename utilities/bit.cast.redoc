[section#bit.cast
    [:en] Function template [`bit_cast]
    [:zh_CN] 函数模板 [`bit_cast]
]

[%@lib bit_cast]
[codeblock:declaration]
template<class To, class From>
  constexpr To bit_cast(const From& from) noexcept;
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`sizeof(To) == sizeof(From)] is [`true];
[:zh_CN] [`sizeof(To) == sizeof(From)] 为 [`true]；
[item]
[:en] [`is_trivially_copyable_v<To>] is [`true]; and
[:zh_CN] [`is_trivially_copyable_v<To>] 为 [`true]；并且
[item]
[:en] [`is_trivially_copyable_v<From>] is [`true].
[:zh_CN] [`is_trivially_copyable_v<From>] 为 [`true]。
[list:end]

[para:mandates]
[:en] Neither [`To] nor [`From] are consteval-only types ([#expr.const]).
[:zh_CN] [`To] 和 [`From] 都不是仅 consteval 类型（[#expr.const]）。

[para:constantwhen]
[:en] [`To], [`From], and the types of all subobjects of [`To] and [`From] are
types [`T] such that:
[:zh_CN] [`To]，[`From]，以及 [`To] 和 [`From] 的所有子对象的类型均为满足以下条件的类型 [`T]：
[list]
[item]
[:en] [`is_union_v<T>] is [`false];
[:zh_CN] [`is_union_v<T>] 为 [`false]；
[item]
[:en] [`is_pointer_v<T>] is [`false];
[:zh_CN] [`is_pointer_v<T>] 为 [`false]；
[item]
[:en] [`is_member_pointer_v<T>] is [`false];
[:zh_CN] [`is_member_pointer_v<T>] 为 [`false];
[item]
[:en] [`is_volatile_v<T>] is [`false]; and
[:zh_CN] [`is_volatile_v<T>] 为 [`false]；并且
[item]
[:en] [`T] has no non-static data members of reference type.
[:zh_CN] [`T] 没有引用类型的非静态数据成员。
[list:end]

[para:returns]
[:en] An object of type [`To].
[:zh_CN] [`To] 类型的对象。

[:en] Implicitly creates objects nested within the result ([#intro.object]).
[:zh_CN] 隐式创建结果中所嵌套的对象（[#intro.object]）。

[:en] Each bit of the value representation of the result is equal to the
corresponding bit in the object representation of [`from].
[:zh_CN] 结果的值表示中的每个位都等于 [`from] 的值表示中的对应位。

[:en] Padding bits of the result are unspecified.
[:zh_CN] 结果的填充位是未指明的。

[:en] For the result and each object created within it, if there is no value of
the object[=']s type corresponding to the value representation produced, the
behavior is undefined.
[:zh_CN] 对于在其中所创建的每个对象，如果该对象的类型不存在对应于所产生的值表示
的值，则其行为未定义。

[:en] If there are multiple such values, which value is produced is unspecified.
[:zh_CN] 如果有多个这种值，则产生哪个值是未指明的。

[:en] A bit in the value representation of the result is indeterminate if
it does not correspond to a bit in the value representation of [`from] or
corresponds to a bit for which the smallest enclosing object is not within its
lifetime or has an indeterminate value ([#basic.indet]).
[:zh_CN] 结果的值表示中的位，若它并不对应于 [`from] 的值表示中的位，或者它所对应的位的
最小外围对象不在其生存期内或具有不确定值（[#basic.indet]），则它是不确定的。

[:en] A bit in the value representation of the result is erroneous if it corresponds
to a bit for which the smallest enclosing object has an erroneous value.
[:zh_CN] 结果的值表示中的位，若它所对应的位的最小外围对象具有错误值，则它是错误的。

[:en] For each bit [$b] in the value representation of the result that is
indeterminate or erroneous, let [$u] be the smallest object containing that bit
enclosing [$b]:
[:zh_CN] 对于不确定或错误结果的值表示中的每个位 [$b]，令 [$u] 为包含该位的 [$b] 的最小
外围对象：

[list]
[item]
[:en] If [$u] is of unsigned ordinary character type or [`std::byte] type, [$u]
has an indeterminate value if any of the bits in its value representation are
indeterminate, or otherwise has an erroneous value.
[:zh_CN] 如果 [$u] 具有无符号普通字符类型或 [`std::byte] 类型，则若其值表示中的位
不确定时 [$u] 具有不确定值，否则具有错误值。
[item]
[:en] Otherwise, if [$b] is indeterminate, the behavior is undefined.
[:zh_CN] 否则，若 [$b] 不确定，则其行为未定义。
[item]
[:en] Otherwise, the behavior is erroneous, and the result is as specified above.
[:zh_CN] 否则，其行为错误，且其结果如上所述。
[list:end]

[:en] The result does not otherwise contain any indeterminate or erroneous values.
[:zh_CN] 除此以外结果不会包含任何不确定或错误值。
[div:end]
