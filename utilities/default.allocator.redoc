[section#default.allocator
    [:en] The default allocator
    [:zh_CN] 默认分配器
]

[para]
[:en] All specializations of the default allocator satisfy the allocator
completeness requirements ([#allocator.requirements.completeness]).
[:zh_CN] 默认分配器的所有特例都符合迭代器完整性的规定
（[#allocator.requirements.completeness]）。

[%@library allocator]
[codeblock:synopsis]
namespace std {
  template <class T> class allocator {
   public:
    using value_type      = T;
    using propagate_on_container_move_assignment = true_type;
    using is_always_equal = true_type;

    allocator() noexcept;
    allocator(const allocator&) noexcept;
    template <class U> allocator(const allocator<U>&) noexcept;
    ~allocator();

    T* allocate(size_t n);
    void deallocate(T* p, size_t n);
  };
}
[codeblock:end]

[include allocator.members]

[include allocator.globals]
