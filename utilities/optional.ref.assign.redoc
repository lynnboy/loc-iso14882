[section#optional.ref.assign
    [:en] Assignment
    [:zh_CN] 赋值
]

[codeblock:declaration]
constexpr optional<T>& operator=(nullopt_t) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Assigns [`nullptr] to [*val].
[:zh_CN] 将 [`nullptr] 赋值给 [*val]。

[para:ensures]
[:en] [`*this] does not contain a value.
[:zh_CN] [`*this] 不包含值。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[div:end]

[codeblock:declaration]
template<class U>
  constexpr T& emplace(U&& u) noexcept(is_nothrow_constructible_v<T&, U>);
[codeblock:end]

[div:description]
[para:constraints]
[list]
[item]
[:en] [`is_constructible_v<T&, U>] is [`true], and
[:zh_CN] [`is_constructible_v<T&, U>] 为 [`true]，并且
[item]
[:en] [`reference_constructs_from_temporary_v<T&, U>] is [`false].
[:zh_CN] [`reference_constructs_from_temporary_v<T&, U>] 为 [`false]。
[list:end]

[para:effects]
[:en] Equivalent to: [`[*convert-ref-init-val](std::forward<U>(u))].
[:zh_CN] 等价于：[`[*convert-ref-init-val](std::forward<U>(u))]。
[div:end]
