[section#meta.unary.cat
    [:en] Primary type categories
    [:zh_CN] 基本类型分类
]

[para]
[:en]
The primary type categories correspond to the descriptions given in subclause
[#basic.types] of the [=Cpp] standard.
[:zh_CN]
基本类型分类对应于 [=Cpp] 标准的子条款 [#basic.types] 中所给出的说明。

[para]
[:en]
For any given type [`T], the result of applying one of these templates to [`T]
and to [=cv] [`T] shall yield the same result.
[:zh_CN]
对于任意给定类型 [`T]，对 [`T] 和 [=cv] [`T] 施加这些模板之一应当产生相同的结果。

[para]
[begin:note]
[:en]
For any given type [`T], exactly one of the primary type categories has a
[`value] member that evaluates to [`true].
[:zh_CN]
对于任意给定类型 [`T]，恰好有一个基本类型分类的 [`value] 成员求值为 [`true]。
[end:note]

[table:grid#meta.unary.cat
    [:en] Primary type category predicates
    [:zh_CN] 基本类型分类谓词
    [|
        [:en] Template
        [:zh_CN] 模板
    ]
    [|
        [:en] Condition
        [:zh_CN] 条件
    ]
    [|
        [:en] Comments
        [:zh_CN] 注释
    ]
]
[%@lib is_void]
[|]
[`template<class T>] [br]
[`struct is_void;]
[|] [:en] [`T] is [`:key void]
    [:zh_CN] [`T] 为 [`:key void]
[|]
[-]

[%@lib is_null_pointer]
[|]
[`template<class T>] [br]
[`struct is_null_pointer;]
[|] [:en] [`T] is [`nullptr_t] ([#basic.fundamental])
    [:zh_CN] [`T] 为 [`nullptr_t]（[#basic.fundamental]）
[|]
[-]

[%@lib is_integral]
[|]
[`template<class T>] [br]
[`struct is_integral;]
[|] [:en] [`T] is an integral type ([#basic.fundamental])
    [:zh_CN] [`T] 为整型类型（[#basic.fundamental]）
[|]
[-]

[%@lib is_floating_point]
[|]
[`template<class T>] [br]
[`struct is_floating_point;]
[|] [:en] [`T] is a floating-point type ([#basic.fundamental])
    [:zh_CN] [`T] 为浮点类型（[#basic.fundamental]）
[|]
[-]

[%@lib is_array]
[|]
[`template<class T>] [br]
[`struct is_array;]
[|] [:en] [`T] is an array type ([#basic.compound]) of known or unknown extend
    [:zh_CN] [`T] 为已知或未知边界的数组类型（[#basic.compound]）
[|] [:en] Class template [`array] ([#array]) is not an array type.
    [:zh_CN] 类模板 [`array]（[#array]）不是数组类型。
[-]

[%@lib is_pointer]
[|]
[`template<class T>] [br]
[`struct is_pointer;]
[|] [:en] [`T] is a pointer type ([#basic.compound])
    [:zh_CN] [`T] 为指针类型（[#basic.compound]）
[|] [:en] Includes pointers to functions but not pointers to non-static members.
    [:zh_CN] 包括函数指针，但不包括指向非静态成员的指针。
[-]

[%@lib is_lvalue_reference]
[|]
[`template<class T>] [br]
[`struct is_lvalue_reference;]
[|] [:en] [`T] is an lvalue reference type ([#dcl.ref])
    [:zh_CN] [`T] 为左值引用类型（[#dcl.ref]）
[|]
[-]

[%@lib is_rvalue_reference]
[|]
[`template<class T>] [br]
[`struct is_rvalue_reference;]
[|] [:en] [`T] is an rvalue reference type ([#dcl.ref])
    [:zh_CN] [`T] 为右值引用类型（[#dcl.ref]）
[|]
[-]

[%@lib is_member_object_pointer]
[|]
[`template<class T>] [br]
[`struct is_member_object_pointer;]
[|] [:en] [`T] is a pointer to data member
    [:zh_CN] [`T] 为指向数据成员的指针
[|]
[-]

[%@lib is_member_function_pointer]
[|]
[`template<class T>] [br]
[`struct is_member_function_pointer;]
[|] [:en] [`T] is a pointer to member function
    [:zh_CN] [`T] 为指向成员函数的指针
[|]
[-]

[%@lib is_enum]
[|]
[`template<class T>] [br]
[`struct is_enum;]
[|] [:en] [`T] is an enumeration type ([#basic.compound])
    [:zh_CN] [`T] 为枚举类型（[#basic.compound]）
[|]
[-]

[%@lib is_union]
[|]
[`template<class T>] [br]
[`struct is_union;]
[|] [:en] [`T] is a union type ([#basic.compound])
    [:zh_CN] [`T] 为联合体类型（[#basic.compound]）
[|]
[-]

[%@lib is_class]
[|]
[`template<class T>] [br]
[`struct is_class;]
[|] [:en] [`T] is a non-union class type ([#basic.compound])
    [:zh_CN] [`T] 为非联合体类类型（[#basic.compound]）
[|]
[-]

[%@lib is_function]
[|]
[`template<class T>] [br]
[`struct is_function;]
[|] [:en] [`T] is a function type ([#basic.compound])
    [:zh_CN] [`T] 为函数类型（[#basic.compound]）
[|]
[-]
[table:end]
