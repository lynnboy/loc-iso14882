[section#optional.ref.iterators
    [:en] Iterator support
    [:zh_CN] 迭代器支持
]

[codeblock:declaration]
using iterator = [[redoc("[=impdef]")]];
[codeblock:end]

[div:description]
[para]
[:en] This type models [`:c contiguous_iterator] ([#iterator.concept.contiguous]),
meets the [^:oc RandomAccessIterator] requirements ([#random.access.iterators]),
and meets the requirements for constexpr iterators ([#iterator.requirements.general]),
with value type [`remove_cv_t<T>].
[:zh_CN] 这个类型构成 [`:c contiguous_iterator]（[#iterator.concept.contiguous]），
满足 [^:oc RandomAccessIterator] 的规定（[#random.access.iterators]），并满足
针对 constexpr 迭代器的规定（[#iterator.requirements.general]），值类型为
[`remove_cv_t<T>]。

[:en] The reference type is [`T&] for [`iterator].
[:zh_CN] [`iterator] 的引用类型为 [`T&]。

[para]
[:en] All requirements on container iterators ([#container.reqmts]) apply to [`optional::iterator].
[:zh_CN] 对容器迭代器的所有要求（[#container.reqmts]）同样适用于 [`optional::iterator]。
[div:end]

[codeblock:declaration]
constexpr iterator begin() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] If [`has_value()] is [`true], an iterator referring to [`*[*val]].
[:zh_CN] 如果 [`has_value()] 为 [`true]，则返回指代 [`*[*val]] 的迭代器。

[:en] Otherwise, a past-the-end iterator value.
[:zh_CN] 否则，返回尾后迭代器值。
[div:end]

[codeblock:declaration]
constexpr iterator end() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`begin() + has_value()].
[:zh_CN] [`begin() + has_value()]。
[div:end]
