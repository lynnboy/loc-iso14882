[section#time.zone.zonedtime.nonmembers
    [:en] Non-member functions
    [:zh_CN] 非成员函数
]

[%@library operator==[!zoned_time]]
[%@library zoned_time[!operator==]]
[codeblock:declaration]
template<class Duration1, class Duration2, class TimeZonePtr>
  bool operator==(const zoned_time<Duration1, TimeZonePtr>& x,
                  const zoned_time<Duration2, TimeZonePtr>& y);
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`x.zone_ == y.zone_ && x.tp_ == y.tp_].
[:zh_CN] [`x.zone_ == y.zone_ && x.tp_ == y.tp_]。
[exit:description]

[%@library operator<<[!zoned_time]]
[%@library zoned_time[!operator<<]]
[codeblock:declaration]
template<class charT, class traits, class Duration, class TimeZonePtr>
  basic_ostream<charT, traits>&
    operator<<(basic_ostream<charT, traits>& os,
               const zoned_time<Duration, TimeZonePtr>& t)
[codeblock:end]

[enter:description]
[para:effects]
[:en] Streams the value returned from [`t.get_local_time()] to [`os] using the
format [`"%F %T %Z"].
[:zh_CN] 将从 [`t.get_local_time()] 返回的值使用格式 [`"%F %T %Z"] 插入到 [`os]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。
[exit:description]

[%@library to_stream[!zoned_time]]
[%@library zoned_time[!to_stream]]
[codeblock:declaration]
template<class charT, class traits, class Duration, class TimeZonePtr>
  basic_ostream<charT, traits>&
    to_stream(basic_ostream<charT, traits>& os, const charT* fmt,
              const zoned_time<Duration, TimeZonePtr>& tp);
[codeblock:end]

[enter:description]
[para:effects]
[:en] First obtains a [`sys_info] via [`tp.get_info()] which for exposition
purposes will be referred to as [`info].
[:zh_CN] 首先通过 [`tp.get_info()] 获得一个 [`sys_info]，为阐释目的将其称为
[`info]。

[:en] Then calls
[`to_stream(os, fmt, tp.get_local_time(), &info.abbrev, &info.offset)].
[:zh_CN] 然后调用
[`to_stream(os, fmt, tp.get_local_time(), &info.abbrev, &info.offset)]。

[para:returns]
[:en] [`os].
[:zh_CN] [`os]。
[exit:description]
