[section#variant.get
    [:en] Value access
    [:zh_CN] 访问值
]

[%@library holds_alternative]
[%@library variant[!holds_alternative]]
[codeblock:declaration]
template<class T, class... Types>
  constexpr bool holds_alternative(const variant<Types...>& v) noexcept;
[codeblock:end]

[div:description]
[para:requires]
[:en] The type [`T] occurs exactly once in [`Types].
[:zh_CN] 类型 [`T] 在 [`Types] 中恰好出现一次。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:returns]
[:en] [`true] if [`index()] is equal to the zero-based index of [`T] in [`Types].
[:zh_CN] 当 [`index()] 等于 [`T] 在 [`Types] 中的基于零的索引时为 [`true]。
[div:end]

[%@library get[!variant]]
[%@library variant[!get]]
[codeblock:declaration]
template<size_t I, class... Types>
  constexpr variant_alternative_t<I, variant<Types...>>& get(variant<Types...>& v);
template<size_t I, class... Types>
  constexpr variant_alternative_t<I, variant<Types...>>&& get(variant<Types...>&& v);
template<size_t I, class... Types>
  constexpr const variant_alternative_t<I, variant<Types...>>& get(const variant<Types...>& v);
template<size_t I, class... Types>
  constexpr const variant_alternative_t<I, variant<Types...>>&& get(const variant<Types...>&& v);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`I < sizeof...(Types)].
[:zh_CN] [`I < sizeof...(Types)]。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:effects]
[:en] If [`v.index()] is [`I], returns a reference to the object stored in the
[`variant].
[:zh_CN] 若 [`v.index()] 为 [`I]，则返回指代该 [`variant] 中所存储的对象的引用。

[:en] Otherwise, throws an exception of type [`bad_variant_access].
[:zh_CN] 否则，抛出 [`bad_variant_access] 类型的异常。
[div:end]

[%@library get[!variant]]
[%@library variant[!get]]
[codeblock:declaration]
template<class T, class... Types> constexpr T& get(variant<Types...>& v);
template<class T, class... Types> constexpr T&& get(variant<Types...>&& v);
template<class T, class... Types> constexpr const T& get(const variant<Types...>& v);
template<class T, class... Types> constexpr const T&& get(const variant<Types...>&& v);
[codeblock:end]

[div:description]
[para:requires]
[:en] The type [`T] occurs exactly once in [`Types].
[:zh_CN] 类型 [`T] 在 [`Types] 中恰好出现一次。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:effects]
[:en] If [`v] holds a value of type [`T], returns a reference to that value.
[:zh_CN] 若 [`v] 持有 [`T] 类型的值，则返回指代该值的引用。

[:en] Otherwise, throws an exception of type [`bad_variant_access].
[:zh_CN] 否则，抛出 [`bad_variant_access] 类型的异常。
[div:end]

[%@library get_if]
[%@library variant[!get_if]]
[codeblock:declaration]
template<size_t I, class... Types>
  constexpr add_pointer_t<variant_alternative_t<I, variant<Types...>>>
    get_if(variant<Types...>* v) noexcept;
template<size_t I, class... Types>
  constexpr add_pointer_t<const variant_alternative_t<I, variant<Types...>>>
    get_if(const variant<Types...>* v) noexcept;
[codeblock:end]

[div:description]
[para:requires]
[:en] [`I < sizeof...(Types)].
[:zh_CN] [`I < sizeof...(Types)]。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:returns]
[:en] A pointer to the value stored in the [`variant], if [`v != nullptr] and
[`v->index() == I].
[:zh_CN] 当 [`v != nullptr] 且 [`v->index() == I] 时为指向该 [`variant] 中所存储
的值的指针。

[:en] Otherwise, returns [`nullptr].
[:zh_CN] 否则，返回 [`nullptr]。
[div:end]

[%@library get_if]
[%@library variant[!get_if]]
[codeblock:declaration]
template<class T, class... Types>
  constexpr add_pointer_t<T>
    get_if(variant<Types...>* v) noexcept;
template<class T, class... Types>
  constexpr add_pointer_t<const T>
    get_if(const variant<Types...>* v) noexcept;
[codeblock:end]

[div:description]
[para:requires]
[:en] The type [`T] occurs exactly once in [`Types].
[:zh_CN] 类型 [`T] 在 [`Types] 中恰好出现一次。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:effects]
[:en] Equivalent to: [`return get_if<[$i]>(v);] with [$i] being the
zero-based index of [`T] in [`Types].
[:zh_CN] 等价于：[`return get_if<[$i]>(v);]，其中 [$i] 为 [`T] in [`Types] 中的
基于零的索引。
[div:end]
