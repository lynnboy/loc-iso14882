[section#format.string.std
    [:en] Standard format specifiers
    [:zh_CN] 标准格式说明符
]

[para]
[:en] Each [`formatter] specialization described in [#format.formatter.spec]
for fundamental and string types interprets [~@fmt format-spec] as a
[~@fmt std-format-spec].
[:zh_CN] [#format.formatter.spec] 中描述的所有针对基础和字符串类型的 [`formatter]
的特化式，都将[~@fmt 格式说明]解释为[~@fmt 标准格式说明]。

[begin:note]
[:en] The format specification can be used to specify such details as minimum
field width, alignment, padding, and decimal precision.
[:zh_CN] 格式说明可以用于指定一些细节，如最小字段宽度，对齐，填充，以及小数精度。

[:en] Some of the formatting options are only supported for arithmetic types.
[:zh_CN] 某些格式化选项仅支持算术类型。
[end:note]

[:en] The syntax of format specifications is as follows:
[:zh_CN] 格式说明的语法如下：

[syntax]
[rule@fmt std-format-spec [:zh_CN] 标准格式说明 ]
    [| [~:opt fill-and-align] [~:opt sign] [`:opt #] [`:opt 0] [~:opt width] [~:opt precision] [`:opt L] [~:opt type] ]
[rule:end]

[rule@fmt fill-and-align [:zh_CN] 填充与对齐 ]
    [| [~:opt fill] align ]
[rule:end]

[rule@fmt fill [:zh_CN] 填充 ]
    [|:descriptive
        [:en] any character other than [`{] or [`}]
        [:zh_CN] 除 [`{] 或 [`}] 外的任意字符
    ]
[rule:end]

[rule:oneof@fmt align [:zh_CN] 对齐 ]
    [| [`< > ^] ]
[rule:end]

[rule:oneof@fmt sign [:zh_CN] 正负号 ]
    [| [`+ -] [span:normal [:en] space [:zh_CN] 空格 ] ]
[rule:end]

[rule@fmt width [:zh_CN] 宽度 ]
    [| positive-integer ]
    [| [`{] [~:opt arg-id] [`}] ]
[rule:end]

[rule@fmt precision [:zh_CN] 精度 ]
    [| [`.] nonnegative-integer ]
    [| [`.] [`{] [~:opt arg-id] [`}] ]
[rule:end]

[rule:oneof@fmt type [:zh_CN] 类型 ]
    [| [`a A b B c d e E f F g G o p s x X ?] ]
[rule:end]
[syntax:end]

[para]
[:en] Field widths are specified in [+:adj field width[!units]]; the number of
column positions required to display a sequence of characters in a terminal.
[:zh_CN] 字段宽度按[+:adj 字段宽度[!单位]]指定；它是在终端上显式一个字符序列所
需要的列位置数量。

[:en] The [+:adj minimum[!field width]] is the number of field width units a
replacement field minimally requires of the formatted sequence of characters
produced for a format argument.
[:zh_CN] [+:adj 最小[!字段宽度]]是对一个格式实参所产生的已格式化字符序列的替代
字段所最少需要的字段宽度单位的数量。

[:en] The [+:adj estimated[!field width]] is the number of field width units
that are required for the formatted sequence of characters produced for a format
argument independent of the effects of the [~@fmt width] option.
[:zh_CN] [+:adj 估计[!字段宽度]]是对一个格式实参所产生的已格式化字符序列所需的
与[~@fmt 宽度]选项的效果无关的字段宽度单位数量。

[:en] The [+:adj padding[!width]] is the greater of [`0] and the difference of
the minimum field width and the estimated field width.
[:zh_CN] [+:adj 填充[!宽度]]是 [`0] 与最小字段宽度和估计字段宽度的差之间的较大值。

[begin:note]
[:en] The POSIX [`wcswidth] function is an example of a function that,
given a string, returns the number of column positions required by
a terminal to display the string.
[:zh_CN] 以 POSIX 的 [`wcswidth] 函数为例，给定一个字符串，它返回终端显式这个
字符串所需的列位置的数量。
[end:note]

[para]
[:en] The [+:adj fill[!character]] is the character denoted by the [~@fmt fill]
option or, if the [~@fmt fill] option is absent, the space character.
[:zh_CN] [+:adj 填充[!字符]]为[~@fmt 填充]选项所代表的字符，或当缺少[~@fmt 填充]
选项时为空格字符。

[:en] For a format specification in UTF-8, UTF-16, or UTF-32,
the fill character corresponds to a single Unicode scalar value.
[:zh_CN] 对于 UTF-8，UTF-16 或 UTF-32 格式说明，填充字符对应于单个 Unicode 标量值。

[begin:note]
[:en] The presence of a [~@fmt fill] option is signaled by the character
following it, which must be one of the alignment options.
[:zh_CN] 是否出现[~@fmt 填充]选项是由跟在其后的字符标明的，它必然为对齐选项之一。

[:en] If the second character of [~@fmt std-format-spec] is not a valid
alignment option, then it is assumed that the [~@fmt fill] and [~@fmt align]
options are both absent.
[:zh_CN] 如果[~@fmt 标准格式说明]的第二个字符不是有效的对齐选项，则假定
[~@fmt 填充]和[~@fmt 对齐]选项都不存在。
[end:note]

[para]
[:en] The [~@fmt align] option applies to all argument types.
[:zh_CN] [~@fmt 对齐]选项适用于所有实参类型。

[:en] The meaning of the various alignment options is as specified in
[#:tab#format.align].
[:zh_CN] 各个对齐选项的含义由 [#:tab#format.align] 指定。

[begin:example]
[codeblock]
char c = 120;
string s0 = format("{:6}", 42);             // [:en] value of [`s0] is [`"    42"] \
                                            [:zh_CN] [`s0] 的值为 [`"    42"]
string s1 = format("{:6}", 'x');            // [:en] value of [`s1] is [`"x     "] \
                                            [:zh_CN] [`s1] 的值为 [`"x     "]
string s2 = format("{:*<6}", 'x');          // [:en] value of [`s2] is [`"x*****"] \
                                            [:zh_CN] [`s2] 的值为 [`"x*****"]
string s3 = format("{:*>6}", 'x');          // [:en] value of [`s3] is [`"*****x"] \
                                            [:zh_CN] [`s3] 的值为 [`"*****x"]
string s4 = format("{:*^6}", 'x');          // [:en] value of [`s4] is [`"**x***"] \
                                            [:zh_CN] [`s4] 的值为 [`"**x***"]
string s5 = format("{:6d}", c);             // [:en] value of [`s5] is [`"   120"] \
                                            [:zh_CN] [`s5] 的值为 [`"   120"]
string s6 = format("{:6}", true);           // [:en] value of [`s6] is [`"true  "] \
                                            [:zh_CN] [`s6] 的值为 [`"true  "]
string s7 = format("{:*<6.3}", "123456");   // [:en] value of [`s6] is [`"123***"] \
                                            [:zh_CN] [`s6] 的值为 [`"123***"]
string s8 = format("{:02}", 1234);          // [:en] value of [`s6] is [`"1234"] \
                                            [:zh_CN] [`s6] 的值为 [`"1234"]
string s9 = format("{:*<}", "12");          // [:en] value of [`s6] is [`"12"] \
                                            [:zh_CN] [`s6] 的值为 [`"12"]
string sA = format("{:*<6}", "12345678");   // [:en] value of [`s6] is [`"12345678"] \
                                            [:zh_CN] [`s6] 的值为 [`"12345678"]
[codeblock:end]
[end:example]

[begin:note]
[:en] The [~@fmt fill], [~@fmt align], and [`0] options have no effect when the
minimum field width is not greater than the estimated field width because
padding width is [`0] in that case.
[:zh_CN] 如果最小字段宽度不大于估计字段宽度，则选项[~@fmt 填充]，[~@fmt 对齐] 和
[`0] 均没有效果，因为这种情况下填充宽度为 [`0]。

[:en] Since fill characters are assumed to have a field width of [`1],
use of a character with a different field width can produce misaligned output.
[:zh_CN] 由于假定填充字符的字段宽度为 [`1]，使用具有不同字段宽度的字符将产生
无法对齐的输出。

[:en] The [=unicode(1f921,clown face)] character has a field width of [`2].
[:zh_CN] 字符 [=unicode(1f921,clown face)] 的字段宽度为 [`2]。

[:en] The examples above that include that character illustrate the effect of
the field width when that character is used as a fill character as opposed to
when it is used as a formatting argument.
[:zh_CN] 以上包含该字符的例子演示了当将该字符用作填充字符时和当将它用作格式化
实参时的效果的对比。
[end:note]

[table:grid#format.align
    [:en] Meaning of [~@fmt align] options
    [:zh_CN] [~@fmt 对齐] 选项的含义
    [|  [:en] Option
        [:zh_CN] 选项 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [`<]
[|] [:en] Forces the formatted argument to be aligned to the start of the field
    by inserting [$n] fill characters after the formatted argument where [$n] is
    the padding width.
    [:zh_CN] 通过在经格式化实参之后插入 [$n] 个填充字符，使经格式化实参强制对齐
    到字段的开头，其中 [$n] 为填充宽度。

    [:en] This is the default for non-arithmetic non-pointer types, [`charT],
    and [`bool], unless an integer presentation type is specified.
    [:zh_CN] 这对于非算术非指针类型，[`charT] 和 [`bool] 是默认选项，除非指定的
    是整数表现类型。
[-]

[|] [`>]
[|] [:en] Forces the formatted argument to be aligned to the end of the field by
    inserting [$n] fill characters before the formatted argument where [$n] is
    the padding width.
    [:zh_CN] 通过在经格式化实参之前插入 [$n] 个填充字符，使经格式化实参强制对齐
    到字段的末尾，其中 [$n] 为填充宽度。

    [:en] This is the default for arithmetic types other than [`charT] and
    [`bool], pointer types, or when an integer presentation type is specified.
    [:zh_CN] 这对于除 [`charT] 和 [`bool] 之外的算术类型，指针类型，或当指定的是
    整数表现类型时是默认选项。
[-]

[|] [`^]
[|] [:en] Forces the formatted argument to be centered within the field by
    inserting [$\bigl\lfloor \frac{n}{2} \bigr\rfloor] fill characters before
    and [$\bigl\lceil \frac{n}{2} \bigr\rceil] fill characters after the
    formatted argument, where [$n] is the padding width.
    [:zh_CN] 通过在经格式化实参之前插入 [$\bigl\lfloor \frac{n}{2} \bigr\rfloor]
    个填充字符，在其之后插入 [$\bigl\lceil \frac{n}{2} \bigr\rceil] 个填充字符，
    使经格式化实参在字段内居中，其中 [$n] 为填充宽度。
[-]
[table:end]

[para]
[:en] The [~@fmt sign] option is only valid for arithmetic types other than
[`charT] and [`bool] or when an integer presentation type is specified.
[:zh_CN] [~@fmt 正负号]选项仅对于除 [`charT] 和 [`bool] 之外的算术类型，或当指定
的是整数表现类型时有效。

[:en] The meaning of the various options is as specified in [#:tab#format.sign].
[:zh_CN] 各个选项的含义由 [#:tab#format.sign] 指定。

[table:grid#format.sign
    [:en] Meaning of [~@fmt sign] options
    [:zh_CN] [~@fmt 正负号]选项的含义
    [|  [:en] Option
        [:zh_CN] 选项 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [`+]
[|] [:en] Indicates that a sign should be used for both non-negative and
    negative numbers.
    [:zh_CN] 指定应当对于非负数和负数都使用正负号。

    [:en] The [`+] sign is inserted before the output of [`to_chars] for
    non-negative numbers other than negative zero.
    [:zh_CN] 对于除了负零之外的非负数，在 [`to_chars] 输出之前插入 [`+] 号。

    [begin:note]
    [:en] For negative numbers and negative zero the output of [`to_chars] will
    already contain the sign so no additional transformation is performed.
    [:zh_CN] 对于负数和负零，[`to_chars] 的输出已经包含正负号，因而无需进行额外
    的变换。
    [end:note]
[-]

[|] [`-]
[|] [:en] Indicates that a sign should be used for negative numbers and negative
    zero only (this is the default behavior).
    [:zh_CN] 指定仅应当对负数和负零使用正负号（此为默认行为）。
[-]

[|] [:en] space [:zh_CN] 空格
[|] [:en] Indicates that a leading space should be used for non-negative numbers
    other than negative zero, and a minus sign for negative numbers and negative
    zero.
    [:zh_CN] 指定应当对除负零之外的非负数使用前导空格，对于负数和负零使用减号。
[-]
[table:end]

[para]
[:en] The [~@fmt sign] option applies to floating-point infinity and NaN.
[:zh_CN] [~@fmt 正负号]选项适用于浮点无穷和 NaN 值。

[begin:example]
[codeblock]
double inf = numeric_limits<double>::infinity();
double nan = numeric_limits<double>::quiet_NaN();
string s0 = format("{0:},{0:+},{0:-},{0: }", 1);        // [:en] value of [`s0] is [`"1,+1,1, 1"] \
                                                        [:zh_CN] [`s0] 的值为 [`"1,+1,1, 1"]
string s1 = format("{0:},{0:+},{0:-},{0: }", -1);       // [:en] value of [`s1] is [`"-1,-1,-1,-1"] \
                                                        [:zh_CN] [`s1] 的值为 [`"-1,-1,-1,-1"]
string s2 = format("{0:},{0:+},{0:-},{0: }", inf);      // [:en] value of [`s2] is [`"inf,+inf,inf, inf"] \
                                                        [:zh_CN] [`s2] 的值为 [`"inf,+inf,inf, inf"]
string s3 = format("{0:},{0:+},{0:-},{0: }", nan);      // [:en] value of [`s3] is [`"nan,+nan,nan, nan"] \
                                                        [:zh_CN] [`s3] 的值为 [`"nan,+nan,nan, nan"]
[codeblock:end]
[end:example]

[para]
[:en] The [`#] option causes the [+alternate form[%alternate form[!format string]]]
to be used for the conversion.
[:zh_CN] [`#] 选项导致在转换中采用[+替代形式[%替代形式[!格式字符串]]]。

[:en] This option is valid for arithmetic types other than [`charT] and [`bool]
or when an integer presentation type is specified, and not otherwise.
[:zh_CN] 这个选项对于除 [`charT] 和 [`bool] 之外的算术类型，或当指定的是整数表现
类型时有效，否则无效。

[:en] For integral types, the alternate form inserts the base prefix (if any)
specified in [#:tab#format.type.int] into the output after the sign character
(possibly space) if there is one, or before the output of [`to_chars] otherwise.
[:zh_CN] 对于整型类型，替代形式中将 [#:tab#format.type.int] 中指定的基数前缀
（如果有）插入到输出中，当有正负号字符（可能为空格）时在其之后，否则在
[`to_chars] 的输出之前插入。

[:en] For floating-point types, the alternate form causes the result of the
conversion of finite values to always contain a decimal-point character, even if
no digits follow it.
[:zh_CN] 对于浮点类型，替代形式导致对有穷值的转换的结果总是包含小数点字符，即便
其后没有任何数字。

[:en] Normally, a decimal-point character appears in the result of these
conversions only if a digit follows it.
[:zh_CN] 通常，仅当小数点字符之后有跟着数字时，它才在转换结果中出现。

[:en] In addition, for [`g] and [`G] conversions, trailing zeros are not removed
from the result.
[:zh_CN] 此外，对于 [`g] 和 [`G] 转换，不会从结果中移除末尾的零。

[para]
[:en] The [`0] option is valid for arithmetic types other than [`charT] and
[`bool] or when an integer presentation type is specified.
[:zh_CN] 选项 [`0] 对于除 [`charT] 和 [`bool] 之外的算术类型，或当指定的是整数
表现类型时有效。

[:en] For formatting arguments that have a value other than an infinity or a NaN,
this option pads the formatted argument by inserting the [`0] character [$n]
times following the sign or base prefix indicators (if any) where [$n] is [`0]
if the [~@fmt align] option is present and is the padding width otherwise.
[:zh_CN] 对于具有并非无穷或 NaN 值的格式化实参，该选项通过在正负号或基数前缀
指示符（如果有）之后 [$n] 次插入字符 [`0] 来填充以格式化实参，其中 [$n] 当出现
[~@fmt 对齐]选项时为 [`0]，否则为填充宽度。

[begin:example]
[codeblock]
char c = 120;
string s1 = format("{:+06d}", c);       // [:en] value of [`s1] is [`"+00120"] \
                                        [:zh_CN] [`s1] 的值为 [`"+00120"]
string s2 = format("{:#06x}", 0xa);     // [:en] value of [`s2] is [`"0x000a"] \
                                        [:zh_CN] [`s2] 的值为 [`"0x000a"]
string s3 = format("{:<06}", -42);      // [:en] value of [`s3] is [`"-42   "] ([`0] has no effect) \
                                        [:zh_CN] [`s3] 的值为 [`"-42   "]（[`0] 没有效果）
string s4 = format("{:06}", inf);       // [:en] value of [`s4] is [`"   inf"] ([`0] has no effect) \
                                        [:zh_CN] [`s4] 的值为 [`"   inf"]（[`0] 没有效果）
[codeblock:end]
[end:example]

[para]
[:en] The [~@fmt width] option specifies the minimum field width.
[:zh_CN] [~@fmt 宽度]选项指定了最小字段宽度。

[:en] If the [~@fmt width] option is absent, the minimum field width is [`0].
[:zh_CN] 如果缺少[~@fmt 宽度]选项，则最小字段宽度为 [`0]。

[para]
[:en] If [`{ [~:opt@fmt arg-id] }] is used in a [~@fmt width] or
[~@fmt precision] option, the value of the corresponding formatting argument is
used as the value of the option.
[:zh_CN] 如果[~@fmt 宽度]或[~@fmt 精度]中使用了 [`{ [~:opt@fmt 实参标识] }]，则
在对应的格式化实参的值被用作选项的值。

[:en] If the corresponding formatting argument is not of standard signed or
unsigned integer type, or its value is negative, an exception of type
[`format_error] is thrown.
[:zh_CN] 如果其对应格式化实参不是标准有符号或无符号整数类型，或者其值为负数，则
抛出 [`format_error] 类型的异常。

[para]
[:en] If [~@fmt positive-integer] is used in a [~@fmt width] option, the value
of the [~@fmt positive-integer] is interpreted as a decimal integer and used as
the value of the option.
[:zh_CN] 如果在[~@fmt 宽度]选项中使用了[~@fmt 正整数]，则该[~@fmt 正整数]的值被
解释为十进制整数并作为该选项的值。

[para]
[:en] For the purposes of width computation, a string is assumed to be in
a locale-independent, [?impldef encoding assumption for [`format] width
computation] encoding.
[:zh_CN] 为进行宽度计算，假定字符串具有一种地域无关的，[?impldef 为进行 [`format]
宽度计算假定的编码]编码。

[:en] Implementations should use either UTF-8, UTF-16, or UTF-32, on platforms
capable of displaying Unicode text in a terminal.
[:zh_CN] 各实现在有能力在终端中显示 Unicode 文本的平台上应当使用 UTF-8，UTF-16，
或者 UTF-32 之一。

[begin:note]
[:en] This is the case for Windows[#:fn]-based and many POSIX-based operating
systems.
[:zh_CN] 这正是基于 Windows[#:fn] 和许多基于 POSIX 的操作系统的情况。
[end:note]

[note:foot]
[:en]
Windows[=Reg] is a registered trademark of Microsoft Corporation.
[:zh_CN]
Windows[=Reg] 是 Microsoft 公司的注册商标。

[:en]
This information is given for the convenience of users of this document and
does not constitute an endorsement by ISO or IEC of this product.
[:zh_CN]
这条信息是为本文档的用户的便利而提供的，并不构成 ISO 或 IEC 对此产品的宣传。
[note:end]

[para]
[:en] For a sequence of characters in UTF-8, UTF-16, or UTF-32, an
implementation should use as its field width the sum of the field widths of the
first code point of each extended grapheme cluster.
[:zh_CN] 对于 UTF-8，UTF-16，或 UTF-32 编码的字符序列，实现应当将各个扩展图形群
的第一个代码点的字段宽度的总和作为其字段宽度。

[:en] Extended grapheme clusters are defined by UAX #29 of the Unicode Standard.
[:zh_CN] 扩展图形群在 Unicode 标准的 UAX #29 中定义。

[:en] The following code points have a field width of 2:
[:zh_CN] 以下代码点的字段宽度为 2：
[list]
[item]
[:en@~] any code point with the [`East_Asian_Width="W"] or [`East_Asian_Width="F"]
Derived Extracted Property as described by UAX #44 of the Unicode Standard
[:zh_CN@~] 任何带有 Unicode 标准 UAX #44 中所述的 [`East_Asian_Width="W"] 或
[`East_Asian_Width="F"] 衍生提取属性的代码点
[item]
[:en@~] [&:ucode 4dc0] [=-] [&:ucode 4dff] (Yijing Hexagram Symbols)
[:zh_CN@~] [&:ucode 4dc0] [=-] [&:ucode 4dff]（易经卦象（Yijing Hexagram）符号）
[item]
[:en@~] [&:ucode 1F300] [=-] [&:ucode 1F64F] (Miscellaneous Symbols and Pictographs)
[:zh_CN@~] [&:ucode 1F300] [=-] [&:ucode 1F64F]（杂项符号和图形文字）
[item]
[:en@~] [&:ucode 1F900] [=-] [&:ucode 1F9FF] (Supplemental Symbols and Pictographs)
[:zh_CN@~] [&:ucode 1F900] [=-] [&:ucode 1F9FF]（增补符号和图形文字）
[list:end]

[:en] The field width of all other code points is 1.
[:zh_CN] 其他所有代码点的字段宽度均为 1。

[para]
[:en] For a sequence of characters in neither UTF-8, UTF-16, nor UTF-32,
the field width is unspecified.
[:zh_CN] 对于非 UTF-8，UTF-16，或 UTF-32 编码的字符序列，未指明字段宽度。

[para]
[:en] The [~@fmt precision] option is valid for floating-point and string types.
[:zh_CN] [~@fmt 精度]选项对于浮点和字符串类型有效。

[:en] For floating-point types, the value of this option specifies the precision
to be used for the floating-point presentation type.
[:zh_CN] 对于浮点类型，该选项的值指定用于浮点表示类型的精度。

[:en] For string types, this option specifies the longest prefix of the
formatted argument to be included in the replacement field such that
the field width of the prefix is no greater than the value of this option.
[:zh_CN] 对于字符串类型，该选项指定替换字段中所包含的已格式化实参的最长前缀，
使得前缀的字段宽度不大于该选项的值。

[para]
[:en] If [~@fmt nonnegative-integer] is used in a [~@fmt precision] option,
the value of the decimal integer is used as the value of the option.
[:zh_CN] 如果[~@fmt 精度]选项中使用了[~@fmt 非负整数]，则使用该十进制整数的值
作为该选项的值。

[para]
[:en] When the [`L] option is used, the form used for the conversion is called
the [+locale-specific form[%locale-specific form[!format string]]].
[:zh_CN] 当使用 [`L] 选项时，转换中所用的形式被称为[+地域特定形式[%地域特定形式
[!格式字符串]]]。

[:en] The [`L] option is only valid for arithmetic types, and its effect depends
upon the type.
[:zh_CN] [`L] 选项仅对算术类型有效，其效果取决于类型。

[list]
[item]
[:en] For integral types, the locale-specific form causes the context[=']s
locale to be used to insert the appropriate digit group separator characters.
[:zh_CN] 对于整型类型，地域特定形式导致使用其语境的地域来插入适当的数字分组分隔
字符。

[item]
[:en] For floating-point types, the locale-specific form causes the context[=']s
locale to be used to insert the appropriate digit group and radix separator
characters.
[:zh_CN] 对于浮点类型，地域特定形式导致使用其语境的地域来插入适当的数字分组和
基数分隔字符。

[item]
[:en] For the textual representation of [`bool], the locale-specific form causes
the context[=']s locale to be used to insert the appropriate string as if
obtained with [`numpunct::truename] or [`numpunct::falsename].
[:zh_CN] 对于 [`bool] 的文本表示，地域特定形式导致使用其语境的地域来插入如同以
[`numpunct::truename] 或 [`numpunct::falsename] 所获得的适当字符串。
[list:end]

[para]
[:en] The [~@fmt type] determines how the data should be presented.
[:zh_CN] [~@fmt 类型]决定如何呈现数据。

[para]
[:en] The available string presentation types are specified in
[#:tab#format.type.string].
[:zh_CN] [#:tab#format.type.string] 中指定了可用的字符串表现类型。

[table:grid#format.type.string
    [:en] Meaning of [~@fmt type] options for strings
    [:zh_CN] 针对字符串的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [:en] none, [`s]
    [:zh_CN] 无，[`s]
[|] [:en] Copies the string to the output.
    [:zh_CN] 向输出复制字符串。
[-]
[|] [`?]
[|] [:en] Copies the escaped string ([#format.string.escaped]) to the output.
    [:zh_CN] 向输出复制经转义字符串（[#format.string.escaped]）。
[-]
[table:end]

[para]
[:en] The meaning of some non-string presentation types is defined in terms of
a call to [`to_chars].
[:zh_CN] 一些非字符串表现类型的含义是基于对 [`to_chars] 的调用而定义的。

[:en] In such cases, let [=range(first,last)] be a range large enough to hold
the [`to_chars] output and [`value] be the formatting argument value.
[:zh_CN] 此种情况下，令 [=range(first,last)] 为大小足以持有 [`to_chars] 的输出的
范围，而 [`value] 为所格式化的实参值。

[:en] Formatting is done as if by calling [`to_chars] as specified and copying
the output through the output iterator of the format context.
[:zh_CN] 格式化如同通过按规定调用 [`to_chars] 并通过格式化语境的输出迭代器复制其
输出而完成的。

[begin:note]
[:en] Additional padding and adjustments are performed prior to copying the
output through the output iterator as specified by the format specifiers.
[:zh_CN] 额外的填充和调整，是在通过输出迭代器进行复制之前，根据格式说明符实施的。
[end:note]

[para]
[:en] The available integer presentation types for integral types other than
[`bool] and [`charT] are specified in [#:tab#format.type.int].
[:zh_CN] [#:tab#format.type.int] 中指定了对于除 [`bool] 和 [`charT] 之外的整型
类型可用的整数表现类型。

[begin:example]
[codeblock]
string s0 = format("{}", 42);                           // [:en] value of [`s0] is [`"42"] \
                                                        [:zh_CN] [`s0] 的值为 [`"42"]
string s1 = format("{0:b} {0:d} {0:o} {0:x}", 42);      // [:en] value of [`s1] is [`"101010 42 52 2a"] \
                                                        [:zh_CN] [`s1] 的值为 [`"101010 42 52 2a"]
string s2 = format("{0:#x} {0:#X}", 42);                // [:en] value of [`s2] is [`"0x2a 0X2A"] \
                                                        [:zh_CN] [`s2] 的值为 [`"0x2a 0X2A"]
string s3 = format("{:L}", 1234);                       // [:en] value of [`s3] can be [`"1,234"] \
                                                        [:zh_CN] [`s3] 的值可以为 [`"1,234"]
                                                        // [:en@~] (depending on the locale) \
                                                        [:zh_CN@~] （取决于地域）
[codeblock:end]
[end:example]

[table:grid#format.type.int
    [:en] Meaning of [~@fmt type] options for integer types
    [:zh_CN] 针对整数类型的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[%[:en]base prefix[:zh_CN]基数前缀]
[|] [`b]
[|] [:en] [`to_chars(first, last, value, 2)]; the base prefix is [`0b].
    [:zh_CN] [`to_chars(first, last, value, 2)]；基数前缀为 [`0b]。
[-]

[%[:en]base prefix[:zh_CN]基数前缀]
[|] [`B]
[|] [:en] The same as [`b], except that the base prefix is [`0B].
    [:zh_CN] 与 [`b] 相同，但基数前缀为 [`0B]。
[-]

[|] [`c]
[|] [:en] Copies the character [`static_cast<charT>(value)] to the output.
    [:zh_CN] 将字符 [`static_cast<charT>(value)] 复制到输出。

    [:en] Throws [`format_error] if [`value] is not in the range of
    representable values for [`charT].
    [:zh_CN] 当 [`value] 不在 [`charT] 的可表示值范围中时抛出 [`format_error]。
[-]

[|] [`d]
[|] [:en] [`to_chars(first, last, value)].
    [:zh_CN] [`to_chars(first, last, value)]。
[-]

[%[:en]base prefix[:zh_CN]基数前缀]
[|] [`o]
[|] [:en] [`to_chars(first, last, value, 8)]; the base prefix is [`0] if [`value]
    is nonzero and is empty otherwise.
    [:zh_CN] [`to_chars(first, last, value, 8)]；当 [`value] 非零时基数前缀为
    [`0]，否则为空。
[-]

[%[:en]base prefix[:zh_CN]基数前缀]
[|] [`x]
[|] [:en] [`to_chars(first, last, value, 16)]; the base prefix is [`0x].
    [:zh_CN] [`to_chars(first, last, value, 16)]；基数前缀为 [`0x]。
[-]

[%[:en]base prefix[:zh_CN]基数前缀]
[|] [`X]
[|] [:en] The same as [`x], except that it uses uppercase letters for digits
    above 9 and the base prefix is [`0X].
    [:zh_CN] 与 [`x] 相同，但对大于 9 的数字采用大写字母，且基数前缀为 [`0X]。
[-]

[|] [:en] none
    [:zh_CN] 无
[|] [:en] The same as [`d].
    [:zh_CN] 与 [`d] 相同。

    [begin:note]
    [:en] If the formatting argument type is [`charT] or [`bool], the default is
    instead [`c] or [`s], respectively.
    [:zh_CN] 若格式化实参的类型为 [`charT] 或 [`bool]，则默认类型分别换为 [`c]
    和 [`s]。
    [end:note]
[-]
[table:end]

[para]
[:en] The available [`charT] presentation types are specified in
[#:tab#format.type.char].
[:zh_CN] [#:tab#format.type.char] 中指定了可用的 [`charT] 表现类型。

[table:grid#format.type.char
    [:en] Meaning of [~@fmt type] options for [`charT]
    [:zh_CN] 针对 [`charT] 的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [:en] none, [`c]
    [:zh_CN] 无，[`c]
[|] [:en] Copies the character to the output.
    [:zh_CN] 将字符复制到输出。
[-]

[|] [`b], [`B], [`d], [`o], [`x], [`X]
[|] [:en] As specified in [#:tab#format.type.int].
    [:zh_CN] 如 [#:tab#format.type.int] 中的规定。
[-]
[|] [`?]
[|] [:en] Copies the escaped string ([#format.string.escaped]) to the output.
    [:zh_CN] 向输出复制经转义字符串（[#format.string.escaped]）。
[-]
[table:end]

[para]
[:en] The available [`bool] presentation types are specified in
[#:tab#format.type.bool].
[:zh_CN] [#:tab#format.type.bool] 中指定了可用的 [`bool] 表现类型。

[table:grid#format.type.bool
    [:en] Meaning of [~@fmt type] options for [`bool]
    [:zh_CN] 针对 [`bool] 的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [:en] none, [`s]
    [:zh_CN] 无，[`s]
[|] [:en] Copies textual representation, either [`true] or [`false], to the
    output.
    [:zh_CN] 将其文本表示，即 [`true] 或 [`false] 复制到输出。
[-]

[|] [`b], [`B], [`d], [`o], [`x], [`X]
[|] [:en] As specified in [#:tab#format.type.int] for the value
    [`static_cast<unsigned char>(value)].
    [:zh_CN] 如 [#:tab#format.type.int] 中对值
    [`static_cast<unsigned char>(value)] 的规定。
[-]
[table:end]

[para]
[:en] The available floating-point presentation types and their meanings for
values other than infinity and NaN are specified in [#:tab#format.type.float].
[:zh_CN] [#:tab#format.type.float] 指定了对于除无穷和 NaN 之外的可用的浮点表现
类型及其含义。

[:en] For lower-case presentation types, infinity and NaN are formatted as
[`inf] and [`nan], respectively.
[:zh_CN] 对于小写表现类型，无穷和 NaN 分别格式化为 [`inf] 和 [`nan]。

[:en] For upper-case presentation types, infinity and NaN are formatted as
[`INF] and [`NAN], respectively.
[:zh_CN] 对于大写表现类型，无穷和 NaN 分别格式化为 [`INF] 和 [`NAN]。

[begin:note]
[:en] In either case, a sign is included if indicated by the [~@fmt sign] option.
[:zh_CN] 无论哪种情况，当[~@fmt 正负号]选项有所指定时包含正负号。
[end:note]

[table:grid#format.type.float
    [:en] Meaning of [~@fmt type] options for floating-point types
    [:zh_CN] 针对浮点类型的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [`a]
[|] [:en] If [~@fmt precision] is specified, equivalent to
    [:zh_CN] 当指定了[~@fmt 精度]时，等价于
[codeblock]
to_chars(first, last, value, chars_format::hex, precision)
[codeblock:end]
[:en@~] where [`precision] is the specified formatting precision; equivalent to
[:zh_CN@~] 其中 [`precision] 为所指定的格式化精度；否则等价于
[codeblock]
to_chars(first, last, value, chars_format::hex)
[codeblock:end]
[:en@~] otherwise.
[:zh_CN@~] 。
[-]

[|] [`A]
[|] [:en] The same as [`a], except that it uses uppercase letters for digits
    above 9 and [`P] to indicate the exponent.
    [:zh_CN] 与 [`a] 相同，但对大于 9 的数字采用大写字母，且采用 [`P] 标明指数。
[-]

[|] [`e]
[|] [:en] Equivalent to
    [:zh_CN] 等价于
[codeblock]
to_chars(first, last, value, chars_format::scientific, precision)
[codeblock:end]
[:en@~] where [`precision] is the specified formatting precision, or [`6] if
[~@fmt precision] is not specified.
[:zh_CN@~] 其中 [`precision] 为所指定的格式化精度，或当未指定[~@fmt 精度]时为 [`6]。
[-]

[|] [`E]
[|] [:en] The same as [`e], except that it uses [`E] to indicate exponent.
    [:zh_CN] 与 [`e] 相同，但采用 [`E] 标明指数。
[-]

[|] [`f], [`F]
[|] [:en] Equivalent to
    [:zh_CN] 等价于
[codeblock]
to_chars(first, last, value, chars_format::fixed, precision)
[codeblock:end]
[:en@~] where [`precision] is the specified formatting precision, or [`6] if
[~@fmt precision] is not specified.
[:zh_CN@~] 其中 [`precision] 为所指定的格式化精度，或当未指定[~@fmt 精度]时为 [`6]。
[-]

[|] [`g]
[|] [:en] Equivalent to
    [:zh_CN] 等价于
[codeblock]
to_chars(first, last, value, chars_format::general, precision)
[codeblock:end]
[:en@~] where [`precision] is the specified formatting precision, or [`6] if
[~@fmt precision] is not specified.
[:zh_CN@~] 其中 [`precision] 为所指定的格式化精度，或当未指定[~@fmt 精度]时为 [`6]。
[-]

[|] [`G]
[|] [:en] The same as [`g], except that it uses [`E] to indicate exponent.
    [:zh_CN] 与 [`g] 相同，但采用 [`E] 指定指数。
[-]

[|] [:en] none
    [:zh_CN] 无
[|] [:en] If [~@fmt precision] is specified, equivalent to
    [:zh_CN] 当指定了[~@fmt 精度]时，等价于
[codeblock]
to_chars(first, last, value, chars_format::general, precision)
[codeblock:end]
[:en@~] where [`precision] is the specified formatting precision; equivalent to
[:zh_CN@~] 其中 [`precision] 为所指定的格式化精度；否则等价于
[codeblock]
to_chars(first, last, value)
[codeblock:end]
[:en@~] otherwise.
[:zh_CN@~] 。
[-]

[table:end]

[para]
[:en] The available pointer presentation types and their mapping to [`to_chars]
are specified in [#:tab#format.type.ptr].
[:zh_CN] [#:tab#format.type.ptr] 指定了指针表现类型及其与 [`to_chars] 的映射。

[begin:note]
[:en] Pointer presentation types also apply to [`nullptr_t].
[:zh_CN] 指针表现类型也适用于 [`nullptr_t]。
[end:note]

[table:grid#format.type.ptr
    [:en] Meaning of [~@fmt type] options for pointer types
    [:zh_CN] 针对指针类型的[~@fmt 类型]选项的含义
    [|  [:en] Type
        [:zh_CN] 类型 ]
    [|  [:en] Meaning
        [:zh_CN] 含义 ]
]

[|] [:en] none, [`p]
    [:zh_CN] 无，[`p]
[|] [:en] If [`uintptr_t] is defined,
    [:zh_CN] 若定义了 [`uintptr_t]，则为
[codeblock]
to_chars(first, last, reinterpret_cast<uintptr_t>(value), 16)
[codeblock:end]
    [:en@~] with the prefix [`0x] inserted immediately before the output of
    [`to_chars]; otherwise, implementation-defined.
    [:zh_CN@~] 并紧接 [`to_chars] 的输出之前插入 [`0x] 前缀；否则由实现定义。
[-]

[table:end]
