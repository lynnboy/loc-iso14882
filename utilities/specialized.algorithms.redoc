[section#specialized.algorithms
    [:en] Specialized algorithms
    [:zh_CN] 特化的算法
]

[para]
[:en]
Throughout this subclause, the names of template parameters are used to express
type requirements.
[:zh_CN]
本子条款的通篇中，各模板形参的名字用于表达类型规定。

[list]
[item]
[:en]
If an algorithm[=']s template parameter is named [`InputIterator], the template
argument shall satisfy the [*Cpp17InputIterator] requirements
([#input.iterators]).
[:zh_CN]
若某个算法的模板形参名为 [`InputIterator]，则其模板实参应当满足
[*Cpp17InputIterator] 的规定（[#input.iterators]）。

[item]
[:en]
If an algorithm[=']s template parameter is named [`ForwardIterator], the
template argument shall satisfy the [*Cpp17ForwardIterator] requirements
([#forward.iterators]), and is required to have the property that no exceptions
are thrown from increment, assignment, comparison, or indirection through valid
iterators.
[:zh_CN]
若某个算法的模板形参名为 [`ForwardIterator]，则其模板实参应当满足
[*Cpp17ForwardIterator] 的规定（[#forward.iterators]），并且还被要求具有对有效的
迭代器的增量、赋值、比较或间接中不抛出异常的性质。
[list:end]

[:en]
Unless otherwise specified, if an exception is thrown in the following
algorithms there are no effects.
[:zh_CN]
除非另行说明，否则当下列算法中抛出异常时，它们没有效果。

[include specialized.addressof]

[include uninitialized.construct.default]

[include uninitialized.construct.value]

[include uninitialized.copy]

[include uninitialized.move]

[include uninitialized.fill]

[include specialized.destroy]
