[section#tuple.helper
    [:en] Tuple helper classes
    [:zh_CN] 元组的辅助类
]

[%@lib@raw [`tuple_size][![:en]in general[:zh_CN]一般说明]]
[codeblock:declaration]
template<class T> struct tuple_size;
[codeblock:end]

[div:description]
[para]
[:en] All specializations of [`tuple_size] meet the [^:oc UnaryTypeTrait]
requirements ([#meta.rqmts]) with a base characteristic of
[`integral_constant<size_t, N>] for some [`N].
[:zh_CN] [`tuple_size] 的所有特例都满足 [^:oc UnaryTypeTrait] 规定（[#meta.rqmts]），
并以对于某个 [`N] 的 [`integral_constant<size_t, N>] 为其基础特征。
[div:end]

[%@lib tuple_size]
[codeblock:declaration]
template<class... Types>
  struct tuple_size<tuple<Types...>> : public integral_constant<size_t, sizeof...(Types)> { };
[codeblock:end]

[%@lib tuple_element]
[codeblock:declaration]
template<size_t I, class... Types>
  struct tuple_element<I, tuple<Types...>> {
    using type = TI;
  };
[codeblock:end]

[div:description]
[para:mandates]
[:en] [$[`I] < [`sizeof...(Types)]].
[:zh_CN] [$[`I] < [`sizeof...(Types)]]。

[para:ctype]
[:en] [`TI] is the type of the [$[`I]^\text{th}] element of [`Types], where
indexing is zero-based.
[:zh_CN] [`TI] 为 [`Types] 的第 [`I] 个元素的类型，其中的索引基于零。
[div:end]

[%@lib tuple_size]
[codeblock:declaration]
template<class T> struct tuple_size<const T>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`TS] denote [`tuple_size<T>] of the cv-unqualified type [`T].
[:zh_CN] 令 [`TS] 代表无 cv 限定的类型 [`T] 的 [`tuple_size<T>]。

[:en] If the expression [`TS::value] is well-formed when treated as an
unevaluated operand ([#term.unevaluated.operand]), then each specialization of
the template meets the [^:oc UnaryTypeTrait] requirements ([#meta.rqmts]) with
a base characteristic of
[:zh_CN] 若表达式 [`TS::value] 被当成免求值操作数（[#term.unevaluated.operand]）
时是良构的，则该模板的每个特例都满足 [^:oc UnaryTypeTrait] 规定（[#meta.rqmts]），
其基础特征为
[codeblock]
integral_constant<size_t, TS::value>
[codeblock:end]

[:en] Otherwise, it has have no member [`value].
[:zh_CN] 否则，它没有 [`value] 成员。

[para]
[:en] Access checking is performed as if in a context unrelated to [`TS] and [`T].
[:zh_CN] 如同在与 [`TS] 和 [`T] 无关的语境中一样照常进行访问检查。

[:en] Only the validity of the immediate context of the expression is considered.
[:zh_CN] 仅考虑表达式的直接语境的有效性。

[begin:note]
[:en] The compilation of the expression can result in side effects such as the
instantiation of class template specializations and function template
specializations, the generation of implicitly-defined functions, and so on.
[:zh_CN] 对表达式的编译可能会造成诸如类模板特例和函数模板特例的实例化，生成隐式
定义的函数等等的各种副作用。

[:en] Such side effects are not in the [=lq]immediate context[=rq] and can
result in the program being ill-formed.
[:zh_CN] 这样的副作用并不属于其“直接语境”，并可能造成程序非良构。
[end:note]

[para]
[:en] In addition to being available via inclusion of the [?libheader tuple]
header, the template is available when any of the headers [?libheader@ref array],
[?libheader@ref ranges], or [?libheader@ref utility] are included.
[:zh_CN] 除了通过包含 [?libheader tuple] 头文件而使其可用之外，这个模板还可以
通过包含 [?libheader@ref array]、[?libheader@ref ranges] 或
[?libheader@ref utility] 之一而可用。
[div:end]

[%@lib tuple_element]
[codeblock:declaration]
template<size_t I, class T> struct tuple_element<I, const T>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`TE] denote [`tuple_element<I, T>] of the cv-unqualified type [`T].
[:zh_CN] 令 [`TE] 代表无 cv 限定的类型 [`T] 的 [`tuple_element<I, T>]。

[:en] Then each specialization of the template meets the
[^:oc TransformationTrait] requirements ([#meta.rqmts]) with a member typedef
[`type] that names the type [`add_const_t<TE>].
[:zh_CN] 则该模板的每个特例都满足 [^:oc TransformationTrait] 规定（[#meta.rqmts]），
并带有指名 [`add_const_t<TE>] 类型的成员 typedef [`type]。

[para]
[:en] In addition to being available via inclusion of the [?libheader tuple]
header, the template is available when any of the headers [?libheader@ref array],
[?libheader@ref ranges], or [?libheader@ref utility] are included.
[:zh_CN] 除了通过包含 [?libheader tuple] 头文件而使其可用之外，这个模板还可以
通过包含 [?libheader@ref array]、[?libheader@ref ranges] 或
[?libheader@ref utility] 之一而可用。
[div:end]
