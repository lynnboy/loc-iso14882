[section#tuple.rel
    [:en] Relational operators
    [:zh_CN] 关系运算符
]

[%@lib@member operator==[!tuple]]
[codeblock:declaration]
template<class... TTypes, class... UTypes>
  constexpr bool operator==(const tuple<TTypes...>& t, const tuple<UTypes...>& u);
[codeblock:end]

[div:description]
[para:requires]
[:en] For all [`i], where [`0 <= i] and [`i < sizeof...(TTypes)],
[`get<i>(t) == get<i>(u)] is a valid expression returning a type that is
convertible to [`bool].
[:zh_CN] 对于所有 [`i]，其中 [`0 <= i] 且 [`i < sizeof...(TTypes)]，
[`get<i>(t) == get<i>(u)] 为有效表达式，且其返回类型可以转换为 [`bool]。

[:en] [`sizeof...(TTypes) == sizeof...(UTypes)].
[:zh_CN] [`sizeof...(TTypes) == sizeof...(UTypes)]。

[para:returns]
[:en] [`true] if [`get<i>(t) == get<i>(u)] for all [`i], otherwise [`false].
[:zh_CN] 若对于所有 [`i] 有 [`get<i>(t) == get<i>(u)] 则为 [`true]，否则为
[`false]。

[:en] For any two zero-length tuples [`e] and [`f], [`e == f] returns [`true].
[:zh_CN] 对于任意两个零长度元组 [`e] 和 [`f]，[`e == f] 返回 [`true]。

[para:effects]
[:en] The elementary comparisons are performed in order from the zeroth index
upwards.
[:zh_CN] 按元素比较从第零个索引开始依增序进行。

[:en] No comparisons or element accesses are performed after the first equality
comparison that evaluates to [`false].
[:zh_CN] 在第一个求值为 [`false] 的比较之后将不再实施任何比较或元素访问。
[div:end]

[%@lib@member operator<=>[!tuple]]
[codeblock:declaration]
template<class... TTypes, class... UTypes>
  constexpr common_comparison_category_t<[[redoc("^", "n>")]]synth-three-way-result<TTypes, UTypes>...>
    operator<=>(const tuple<TTypes...>& t, const tuple<UTypes...>& u);
[codeblock:end]

[div:description]
[para:effects]
[:en] Performs a lexicographical comparison between [`t] and [`u].
[:zh_CN] 在 [`t] 和 [`u] 直接实施字典序比较。

[:en] For any two zero-length tuples [`t] and [`u], [`t <=> u] returns
[`strong_ordering::equal].
[:zh_CN] 对于任意两个零长度元组 [`t] 和 [`u]，[`t <=> u] 返回
[`strong_ordering::equal]。

[:en] Otherwise, equivalent to:
[:zh_CN] 否则，等价于：
[codeblock]
if (auto c = [[redoc("^", "n>")]]synth-three-way(get<0>(t), get<0>(u)); c != 0) return c;
return t[_tail] <=> u[_tail];
[codeblock:end]
[:en@~] where [`r][_tail] for some tuple [`r] is a tuple containing all but the
first element of [`r].
[:zh_CN@~] 其中对于某个元组 [`r]，[`r][_tail] 为包含 [`r] 除第一个之外所有元素
的元组。
[div:end]

[para]
[begin:note]
[:en]
The above definitions does not require [`t][_tail] (or [`u][_tail]) to be
constructed.
[:zh_CN]
以上定义并不要求构造 [`t][_tail]（或 [`u][_tail]）。

[:en]
It may not even be possible, as [`t] and [`u] are not required to be copy
constructible.
[:zh_CN]
这在当并不要求 [`t] 和 [`u] 为可被复制构造时甚至是不可能的。

[:en]
Also, all comparison functions are short circuited; they do not perform element
accesses beyond what is required to determine the result of the comparison.
[:zh_CN]
并且，所有的比较函数都是短路的：它们并不实施超出了用以确定比较结果所需的元素
访问。
[end:note]
