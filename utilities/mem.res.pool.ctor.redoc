[section#mem.res.pool.ctor
    [:en] Constructors and destructors
    [:zh_CN] 构造函数和析构函数
]

[%@library synchronized_pool_resource[![:en]constructor[:zh_CN]构造函数]]
[%@library unsynchronized_pool_resource[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
synchronized_pool_resource(const pool_options& opts, memory_resource* upstream);
unsynchronized_pool_resource(const pool_options& opts, memory_resource* upstream);
[codeblock:end]

[enter:description]
[para:requires]
[:en] [`upstream] is the address of a valid memory resource.
[:zh_CN] [`upstream] 为某个有效内存资源的地址。

[para:effects]
[:en] Constructs a pool resource object that will obtain memory from [`upstream]
whenever the pool resource is unable to satisfy a memory request from its own
internal data structures.
[:zh_CN] 构造一个池化资源对象，当这个池化资源无法从自身所有的内部数据结构来满足
某个内存请求时，将从 [`upstream] 获取内存。

[:en] The resulting object will hold a copy of [`upstream], but will not own the
resource to which [`upstream] points.
[:zh_CN] 其结果对象将持有 [`upstream] 的一个副本，但并不会拥有 [`upstream] 所
指向的资源。

[enter:note]
[:en] The intention is that calls to [`upstream->allocate()] will be
substantially fewer than calls to [`this->allocate()] in most cases.
[:zh_CN] 其意图是使对 [`upstream->allocate()] 的调用在大多数情况下都显著少于对
[`this->allocate()] 的调用。
[exit:note]

[:en] The behavior of the pooling mechanism is tuned according to the value of
the [`opts] argument.
[:zh_CN] 池化机制的行为是通过 [`opts] 实参的值来进行调节的。

[para:throws]
[:en] Nothing unless [`upstream->allocate()] throws.
[:zh_CN] 无，除非 [`upstream->allocate()] 抛出了异常。

[:en] It is unspecified if, or under what conditions, this constructor calls
[`upstream->allocate()].
[:zh_CN] 这个构造函数是否调用，或于何种条件下调用 [`upstream->allocate()] 是
未指明的。
[exit:description]

[%@library synchronized_pool_resource[![:en]destructor[:zh_CN]析构函数]]
[%@library unsynchronized_pool_resource[![:en]destructor[:zh_CN]析构函数]]
[codeblock:declaration]
virtual ~synchronized_pool_resource();
virtual ~unsynchronized_pool_resource();
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`release()].
[:zh_CN] 调用 [`release()]。
[exit:description]
