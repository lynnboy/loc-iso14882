[section#declval
    [:en] Function template [`declval]
    [:zh_CN] 函数模板 [`declval]
]

[para]
[:en]
The library provides the function template [`declval] to simplify the definition
of expressions which occur as unevaluated operands ([#expr.prop]).
[:zh_CN]
程序库提供函数模板 [`declval]，以简化对用作免求值操作数（[#expr.prop]）的表达式
的定义。

[%@lib declval]
[codeblock:declaration]
template<class T> add_rvalue_reference_t<T> declval() noexcept;    // [:en] as unevaluated operand \
                                                                   [:zh_CN] 作为免求值操作数
[codeblock:end]

[div:description]
[para:mandates]
[:en] This function is not odr-used ([#basic.def.odr]).
[:zh_CN] 该函数未被 ODR 式使用（[#basic.def.odr]）。

[para:remarks]
[:en] The template parameter [`T] of [`declval] may be an incomplete type.
[:zh_CN] [`declval] 的模板形参 [`T] 可以是不完整类型。

[para]
[begin:example]
[codeblock]
template<class To, class From> decltype(static_cast<To>(declval<From>())) convert(From&&);
[codeblock:end]

[:en]
declares a function template [`convert] which only participates in overload
resolution if the type [`From] can be explicitly converted to type [`To].
[:zh_CN]
声明了函数模板 [`convert]，仅当类型 [`From] 可以显式转换为类型 [`To] 时，它才
参与重载决议。

[:en]
For another example see class template [`common_type] ([#meta.trans.other]).
[:zh_CN]
另一个例子，参见类模板 [`common_type]（[#meta.trans.other]）。
[end:example]
[div:end]
