[section#expected.void.obs
    [:en] Observers
    [:zh_CN] 探察函数
]

[%@lib@member operator bool[!expected<void>]]
[%@lib@member has_value[!expected<void>]]
[codeblock:declaration]
constexpr explicit operator bool() const noexcept;
constexpr bool has_value() const noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [*has_val].
[:zh_CN] [*has_val]。
[div:end]

[%@lib@member operator*[!expected<void>]]
[codeblock:declaration]
constexpr void operator*() const noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [`has_value()] is [`true].
[:zh_CN] [`has_value()] 为 [`true]。
[div:end]

[%@lib@member value[!expected]]
[codeblock:declaration]
constexpr void value() const &;
[codeblock:end]

[div:description]
[para:throws]
[:en] [`bad_expected_access(error())] if [`has_value()] is [`false].
[:zh_CN] 当 [`has_value()] 为 [`false] 时抛出 [`bad_expected_access(error())]。
[div:end]

[%@lib@member value[!expected<void>]]
[codeblock:declaration]
constexpr void value() &&;
[codeblock:end]

[div:description]
[para:throws]
[:en] [`bad_expected_access(std::move(error()))] if [`has_value()] is [`false].
[:zh_CN] 当 [`has_value()] 为 [`false] 时抛出
[`bad_expected_access(std::move(error()))]。
[div:end]

[%@lib@member error[!expected<void>]]
[codeblock:declaration]
constexpr const E& error() const & noexcept;
constexpr E& error() & noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [`has_value()] is [`false].
[:zh_CN] [`has_value()] 为 [`false]。

[para:returns]
[:en] [*unex].
[:zh_CN] [*unex]。
[div:end]

[%@lib@member error[!expected<void>]]
[codeblock:declaration]
constexpr E&& error() && noexcept;
constexpr const E&& error() const && noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] [`has_value()] is [`false].
[:zh_CN] [`has_value()] 为 [`false]。

[para:returns]
[:en] [`std::move([*unex])].
[:zh_CN] [`std::move([*unex])]。
[div:end]
