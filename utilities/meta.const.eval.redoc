[section#meta.const.eval
    [:en] Constant evaluation context
    [:zh_CN] 常量求值语句
]

[codeblock:declaration]
constexpr bool is_constant_evaluated() noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] if and only if evaluation of the call occurs within the evaluation
of an expression or conversion that is manifestly constant-evaluated
([#expr.const]).
[:zh_CN] 当且仅当调用发生于某个显然常量求值的表达式或转换之中时返回 [`true]。

[para]
[begin:example]
[codeblock]
constexpr void f(unsigned char *p, int n) {
  if (std::is_constant_evaluated()) {           // [:en] should not be a constexpr if statement \
                                                   [:zh_CN] 不能是 constexpr if 语句
    for (int k = 0; k<n; ++k) p[k] = 0;
  } else {
    memset(p, 0, n);                            // [:en] not a core constant expression \
                                                   [:zh_CN] 不是核心常量表达式
  }
}
[codeblock:end]
[end:example]
[div:end]
