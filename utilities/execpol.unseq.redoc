[section#execpol.unseq
    [:en] Unsequenced execution policy
    [:zh_CN] 并行无顺序执行策略
]

[%@library execution::unsequenced_policy]
[codeblock:declaration]
class execution::unsequenced_policy { [[redoc("=unspec")]] };
[codeblock:end]

[begin:description]
[para]
[:en] The class [`execution::unsequenced_policy] is an execution policy type
used as a unique type to disambiguate parallel algorithm overloading and
indicate that a parallel algorithm[=']s execution may be vectorized, e.g.,
executed on a single thread using instructions that operate on multiple data
items.
[:zh_CN] 类 [`execution::unsequenced_policy] 是一种执行策略类型，用作在并行算法
重载中进行歧义消解的唯一类型，并要求并行算法的执行可以被向量化，例如在单个线程中
利用操作多个数据项的处理器指令予以执行。

[para]
[:en] During the execution of a parallel algorithm with the
[`execution::unsequenced_policy] policy, if the invocation of an element access
function exits via an uncaught exception, [`terminate()] shall be called.
[:zh_CN] 在具有 [`execution::unsequenced_policy] 的并行算法的执行过程中，如果
某次元素访问函数的执行以未捕获的异常而退出，则应当调用 [`terminate()]。
[end:description]
