[section#formatter.requirements
    [:en] Formatter requirements
    [:zh_CN] 格式化器规定
]

[para]
[:en]
A type [`F] meets the [^:newoc@def Formatter] requirements if:
[:zh_CN]
当符合以下情况时，类型 [`F] 满足 [^:newoc@def Formatter] 的规定：

[list]
[item]
[:en] it meets the
[:zh_CN] 它满足
[list]
[item]
[:en@~] [^:oc DefaultConstructible] ([#:tab#cpp17.defaultconstructible]),
[:zh_CN@~] [^:oc DefaultConstructible]（[#:tab#cpp17.defaultconstructible]），
[item]
[:en@~] [^:oc CopyConstructible] ([#:tab#cpp17.copyconstructible]),
[:zh_CN@~] [^:oc CopyConstructible]（[#:tab#cpp17.copyconstructible]），
[item]
[:en@~] [^:oc CopyAssignable] ([#:tab#cpp17.copyassignable]), and
[:zh_CN@~] [^:oc CopyAssignable]（[#:tab#cpp17.copyassignable]），和
[item]
[:en@~] [^:oc Destructible] ([#:tab#cpp17.destructible])
[:zh_CN@~] [^:oc Destructible]（[#:tab#cpp17.destructible]）
[list]
[:en@~] requirements.
[:zh_CN@~] 的规定。

[item]
[:en] it is swappable ([#swappable.requirements]) for lvalues, and
[:zh_CN] 对于左值，它是可交换的（[#swappable.requirements]），并且

[item]
[:en] the expressions shown in [#:tab#formatter] are valid and have the
indicated semantics.
[:zh_CN] [#:tab#formatter] 中给出的表达式均有效，并具有所指定的语义。
[list:end]

[para]
[:en] Given character type [`charT], output iterator type [`Out], and formatting
argument type [`T], in [#:tab#formatter]:
[:zh_CN] 给定字符类型 [`charT]，输出迭代器类型 [`Out]，以及格式化实参类型 [`T]，
则 [#:tab#formatter] 中：
[list]
[item]
[:en] [`f] is a value of type [`F],
[:zh_CN] [`f] 为 [`F] 类型的值，
[item]
[:en] [`u] is an lvalue of type [`T],
[:zh_CN] [`u] 为 [`T] 类型的左值，
[item]
[:en] [`t] is a value of a type convertible to (possibly const) [`T].
[:zh_CN] [`t] 为某个可转换为（可能 const 的）[`T] 的类型的值。
[item]
[:en] [`PC] is [`basic_format_parse_context<charT>],
[:zh_CN] [`PC] 为 [`basic_format_parse_context<charT>]，
[item]
[:en] [`FC] is [`basic_format_context<Out, charT>],
[:zh_CN] [`FC] 为 [`basic_format_context<Out, charT>],
[item]
[:en] [`pc] is an lvalue of type [`PC], and
[:zh_CN] [`pc] 为 [`PC] 类型的左值，而
[item]
[:en] [`fc] is an lvalue of type [`FC].
[:zh_CN] [`fc] 为 [`FC] 类型的左值。
[list:end]

[:en] [`pc.begin()] points to the beginning of the [~@fmt format-spec]
([#format.string]) of the replacement field being formatted in the format string.
[:zh_CN] [`pc.begin()] 指向格式字符串中所要格式化的替换字段的[~@fmt 格式说明]
（[#format.string]）的开头。

[:en] If [~@fmt format-spec] is empty then either [`pc.begin() == pc.end()] or
[`*pc.begin() == '}'].
[:zh_CN] 当[~@fmt 格式说明]为空时，要么 [`pc.begin() == pc.end()]，要么
[`*pc.begin() == '}']。

[table:grid#formatter
    [:en] [^:newoc Formatter] requirements
    [:zh_CN] [^:newoc Formatter] 的规定
    [|@code
        [:en] Expression
        [:zh_CN] 表达式 ]
    [|@code
        [:en] Return type
        [:zh_CN] 返回类型 ]
    [|  [:en] Requirement
        [:zh_CN] 规定 ]
]

[|] f.parse(pc)
[|] PC::iterator
[|] [:en] Parses [~@fmt format-spec] ([#format.string]) for type [`T] in the
    range [=range(pc.begin(),pc.end())] until the first unmatched character.
    [:zh_CN] 在范围 [=range(pc.begin(),pc.end())] 中解析针对类型 [`T] 的
    [~@fmt 格式说明]（[#format.string]），直到首个不匹配字符。

[:en] Throws [`format_error] unless the whole range is parsed or the unmatched
character is [`}].
[:zh_CN] 除非解析了整个范围或不匹配字符为 [`}]，否则抛出 [`format_error]。

[begin:note]
[:en] This allows formatters to emit meaningful error messages.
[:zh_CN] 这样就允许格式化器生成有意义的错误消息。
[end:note]

[:en] Stores the parsed format specifiers in [`*this] and returns an iterator
past the end of the parsed range.
[:zh_CN] 在 [`*this] 中存储所解析的格式，并返回越过所解析范围末尾位置的迭代器。
[-]

[|] f.format(t, fc)
[|] FC::iterator
[|] [:en] Formats [`t] according to the specifiers stored in [`*this], writes
    the output to [`fc.out()] and returns an iterator past the end of the output
    range.
    [:zh_CN] 根据 [`*this] 中所存储的声明符格式化 [`t]，将输出写入到 [`fc.out()]
    并返回越过输出范围末尾位置的迭代器。

[:en] The output shall only depend on [`t], [`fc.locale()], [`fc.arg(n)] for any
value [`n] of type [`size_t], and the range [=range(pc.begin(),pc.end())] from
the last call to [`f.parse(pc)].
[:zh_CN] 其输出应当仅依赖于 [`t]，[`fc.locale()]，对于任意 [`size_t] 类型的值
[`n] 的 [`fc.arg(n)]，以及上一次对 [`f.parse(pc)] 的调用所得的范围
[=range(pc.begin(),pc.end())]。
[-]

[|] f.format(u, fc)
[|] FC::iterator
[|] [:en] As above, but does not modify [`u].
    [:zh_CN] 同上，但不改动 [`u]。
[-]
[table:end]
