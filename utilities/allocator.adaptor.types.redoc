[section#allocator.adaptor.types
    [:en] Scoped allocator adaptor member types
    [:zh_CN] 有范围分配器适配器的成员类型
]

[%@library scoped_allocator_adaptor[!inner_allocator_type]]
[%@library inner_allocator_type[!scoped_allocator_adaptor]]
[codeblock:declaration [!:mark SeeBelow] ]
using inner_allocator_type = [=SeeBelow];
[codeblock:end]

[enter:description]
[para:ctype]
[:en] [`scoped_allocator_adaptor<OuterAlloc>] if [`sizeof...(InnerAllocs)] is
zero; otherwise, [`scoped_allocator_adaptor<InnerAllocs...>].
[:zh_CN] 当 [`sizeof...(InnerAllocs)] 为零时为
[`scoped_allocator_adaptor<OuterAlloc>]，否则为
[`scoped_allocator_adaptor<InnerAllocs...>]。
[exit:description]

[%@library scoped_allocator_adaptor[!propagate_on_container_copy_assignment]]
[%@library propagate_on_container_copy_assignment[!scoped_allocator_adaptor]]
[codeblock:declaration [!:mark SeeBelow] ]
using propagate_on_container_copy_assignment = [=SeeBelow];
[codeblock:end]

[enter:description]
[para:ctype]
[:en] [`true_type] if
[`allocator_traits<A>::propagate_on_container_copy_assignment::value] is [`true]
for any [`A] in the set of [`OuterAlloc] and [`InnerAllocs...]; otherwise,
[`false_type].
[:zh_CN] 若集合 [`OuterAlloc] 和 [`InnerAllocs...] 中存在任意 [`A] 使得
[`allocator_traits<A>::propagate_on_container_copy_assignment::value] 为 [`true]
，则为 [`true_type]，否则为 [`false_type]。
[exit:description]

[%@library scoped_allocator_adaptor[!propagate_on_container_move_assignment]]
[%@library propagate_on_container_move_assignment[!scoped_allocator_adaptor]]
[codeblock:declaration [!:mark SeeBelow] ]
using propagate_on_container_move_assignment = [=SeeBelow];
[codeblock:end]

[enter:description]
[para:ctype]
[:en] [`true_type] if
[`allocator_traits<A>::propagate_on_container_move_assignment::value] is [`true]
for any [`A] in the set of [`OuterAlloc] and [`InnerAllocs...]; otherwise,
[`false_type].
[:zh_CN] 若集合 [`OuterAlloc] 和 [`InnerAllocs...] 中存在任意 [`A] 使得
[`allocator_traits<A>::propagate_on_container_move_assignment::value] 为 [`true]
，则为 [`true_type]，否则为 [`false_type]。
[exit:description]

[%@library scoped_allocator_adaptor[!propagate_on_container_swap]]
[%@library propagate_on_container_swap[!scoped_allocator_adaptor]]
[codeblock:declaration [!:mark SeeBelow] ]
using propagate_on_container_swap = [=SeeBelow];
[codeblock:end]

[enter:description]
[para:ctype]
[:en] [`true_type] if [`allocator_traits<A>::propagate_on_container_swap::value]
is [`true] for any [`A] in the set of [`OuterAlloc] and [`InnerAllocs...];
otherwise, [`false_type].
[:zh_CN] 若集合 [`OuterAlloc] 和 [`InnerAllocs...] 中存在任意 [`A] 使得
[`allocator_traits<A>::propagate_on_container_swap::value] 为 [`true]，则为
[`true_type]，否则为 [`false_type]。
[exit:description]

[%@library scoped_allocator_adaptor[!is_always_equal]]
[%@library is_always_equal[!scoped_allocator_adaptor]]
[codeblock:declaration [!:mark SeeBelow] ]
using is_always_equal = [=SeeBelow];
[codeblock:end]

[enter:description]
[para:ctype]
[:en] [`true_type] if [`allocator_traits<A>::is_always_equal::value] is [`true]
for every [`A] in the set of [`OuterAlloc] and [`InnerAllocs...]; otherwise,
[`false_type].
[:zh_CN] 若集合 [`OuterAlloc] 和 [`InnerAllocs...] 中存在任意 [`A] 使得
[`allocator_traits<A>::is_always_equal::value] 为 [`true]，则为 [`true_type]，
否则为 [`false_type]。
[exit:description]
