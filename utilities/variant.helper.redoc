[section#variant.helper
    [:en] [`variant] helper classes
    [:zh_CN] [`variant] 的辅助类
]

[%@lib variant_size]
[codeblock:declaration]
template<class T> struct variant_size;
[codeblock:end]

[div:description]
[para]
[:en] All specializations of [`variant_size] meet the [^:oc UnaryTypeTrait]
requirements ([#meta.rqmts]) with a base characteristic of
[`integral_constant<size_t, N>] for some [`N].
[:zh_CN] [`variant_size] 的每个特例都满足 [^:oc UnaryTypeTrait] 的规定
（[#meta.rqmts]），其基础特征为对于某个 [`N] 的 [`integral_constant<size_t, N>]。
[div:end]

[%@lib variant_size]
[codeblock:declaration]
template<class T> struct variant_size<const T>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`VS] denote [`variant_size<T>] of the cv-unqualified type [`T].
[:zh_CN] 令 [`VS] 代表对某个无 cv 限定的类型 [`T] 的 [`variant_size<T>]。

[:en] Then each specialization of the template meets the [^:oc UnaryTypeTrait]
requirements ([#meta.rqmts]) with a base characteristic of
[`integral_constant<size_t, VS::value>].
[:zh_CN] 则这个模板的每个特例都满足 [^:oc UnaryTypeTrait] 的规定（[#meta.rqmts]），
其基础特征为 [`integral_constant<size_t, VS::value>]。
[div:end]

[%@lib variant_size]
[codeblock:declaration]
template<class... Types>
  struct variant_size<variant<Types...>> : integral_constant<size_t, sizeof...(Types)> { };
[codeblock:end]
[/% No itemdescr needed for variant_size<variant<Types...>>/]

[%@lib variant_alternative]
[codeblock:declaration]
template<size_t I, class T> struct variant_alternative<I, const T>;
[codeblock:end]

[div:description]
[para]
[:en] Let [`VA] denote [`variant_alternative<I, T>] of the cv-unqualified type
[`T].
[:zh_CN] 令 [`VA] 代表对某个无 cv 限定的类型 [`T] 的 [`variant_alternative<I, T>]。

[:en] Then each specialization of the template meets the
[^:oc TransformationTrait] requirements ([#meta.rqmts]) with a member typedef
[`type] that names the type [`add_const_t<VA::type>].
[:zh_CN] 则这个模板的每个特例都满足 [^:oc TransformationTrait] 的规定
（[#meta.rqmts]），其成员 typedef [`type] 指名类型 [`add_const_t<VA::type>]。
[div:end]

[%@lib variant_alternative]
[codeblock:declaration]
variant_alternative<I, variant<Types...>>::type
[codeblock:end]

[div:description]
[para:mandates]
[:en] [$[`I] < [`sizeof...(Types)]].
[:zh_CN] [$[`I] < [`sizeof...(Types)]]。

[para:ctype]
[:en] The type [$[`T]_I].
[:zh_CN] 类型 [$[`T]_I]。
[div:end]
