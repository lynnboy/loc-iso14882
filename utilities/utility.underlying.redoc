[section#utility.underlying
    [:en] Function template [`to_underlying]
    [:zh_CN] 函数模板 [`to_underlying]
]

[%@lib to_underlying]
[codeblock:declaration]
template<class T>
  constexpr underlying_type_t<T> to_underlying(T value) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`static_cast<underlying_type_t<T>>(value)].
[:zh_CN] [`static_cast<underlying_type_t<T>>(value)]。
[div:end]
