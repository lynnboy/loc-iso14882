[section#meta.rqmts
    [:en] Requirements
    [:zh_CN] 规定
]

[para]
[:en]
A [^:oc@def UnaryTypeTrait] describes a property of a type.
[:zh_CN]
[^:oc@def UnaryTypeTrait] 描述类型的一项属性。

[:en]
It shall be a class template that takes one template type argument and,
optionally, additional arguments that help define the property being described.
[:zh_CN]
它应当为获取一个模板类型实参，并可选地获取额外的实参以帮助定义其所描述的属性的
类模板。

[:en]
It shall be [^:oc DefaultConstructible], [^:oc CopyConstructible], and
publicly and unambiguously derived, directly or indirectly, from its
[+base characteristic], which is a specialization of the template
[`integral_constant] ([#meta.help]), with the arguments to the template
[`integral_constant] determined by the requirements for the particular property
being described.
[:zh_CN]
它应当为 [^:oc DefaultConstructible]，[^:oc CopyConstructible]，并且直接或间接
公开且无歧义派生自它的[+基础特征]，这是 [`integral_constant] 模板（[#meta.help]）
的某个特例，其中传给 [`integral_constant] 模板的实参是由其所描述的特定属性的要求
来确定的。

[:en]
The member names of the base characteristic shall not be hidden and shall be
unambiguously available in the [^:oc UnaryTypeTrait].
[:zh_CN]
基础特征的成员的名字不能被隐藏，且应当在 [^:oc UnaryTypeTrait] 可以无歧义地访问。

[para]
[:en]
A [^:oc@def BinaryTypeTrait] describes a relationship between two types.
[:zh_CN]
[^:oc@def BinaryTypeTrait] 描述两个类型之间的关系。

[:en]
It shall be a class template that takes two template type arguments and,
optionally, additional arguments that help define the relationship being
described.
[:zh_CN]
它应当为获取两个模板类型实参，并可选地获取额外的实参以帮助定义其所描述的关系的
类模板。

[:en]
It shall be [^:oc DefaultConstructible], [^:oc CopyConstructible], and
publicly and unambiguously derived, directly or indirectly, from its
[+:% base characteristic], which is a specialization of the template
[`integral_constant] ([#meta.help]), with the arguments to the template
[`integral_constant] determined by the requirements for the particular
relationship being described.
[:zh_CN]
它应当为 [^:oc DefaultConstructible]，[^:oc CopyConstructible]，并且直接或间接
公开且无歧义派生自它的[+:% 基础特征]，这是 [`integral_constant] 模板
（[#meta.help]）的某个特例，其中传给 [`integral_constant] 模板的实参是由其所
描述的特定关系的要求来确定的。

[:en]
The member names of the base characteristic shall not be hidden and shall be
unambiguously available in the [^:oc BinaryTypeTrait].
[:zh_CN]
基础特征的成员的名字不能被隐藏，且应当在 [^:oc BinaryTypeTrait] 可以无歧义地访问。

[para]
[:en]
A [^:oc@def TransformationTrait] modifies a property of a type.
[:zh_CN]
[^:oc@def TransformationTrait] 改造类型的某个属性。

[:en]
It shall be a class template that takes one template type argument and,
optionally, additional arguments that help define the modification.
[:zh_CN]
它应当为获取一个模板类型实参，并可选地获取额外的实参以帮助定义其改动的类模板。

[:en]
It shall define a publicly accessible nested type named [`type], which shall be
a synonym for the modified type.
[:zh_CN]
它应当定义一个名为 [`type] 的公用可访问的嵌套类型，并作为改造后的类型的同义词。

[para]
[:en]
Unless otherwise specified, the behavior of a program that adds specializations
for any of the templates specified in this subclause [#meta] is undefined.
[:zh_CN]
除非另行指明，为本子条款 [#meta] 中所指定的任意模板添加特化式的程序的行为是
未定义的。

[para]
[:en]
Unless otherwise specified, an incomplete type may be used to instantiate
a template specified in this subclause.
[:zh_CN]
除非另行指明，不完整类型可以用于实例化本子条款中所指定的模板。

[:en]
The behavior of a program is undefined if:
[:zh_CN]
以下情况下程序的行为是未定义的：

[list]
[item]
[:en@~] an instantiation of a template specified in subclause [#meta] directly
or indirectly depends on an incompletely-defined object type [`T], and
[:zh_CN@~] 子条款 [#meta] 中给出的模板的某个实例化依赖于某个不完整定义的对象类型
[`T]，并且
[item]
[:en@~] that instantiation could yield a different result were [`T]
hypothetically completed.
[:zh_CN@~] 该实例化所产生的结果与假定当 [`T] 完整时不同。
[list:end]
