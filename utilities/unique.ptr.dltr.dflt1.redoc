[section#unique.ptr.dltr.dflt1
    [`default_delete<T`[`]>]
]

[codeblock:synopsis]
namespace std {
  template <class T> struct default_delete<T[]> {
    constexpr default_delete() noexcept = default;
    template <class U> default_delete(const default_delete<U[]>&) noexcept;
    template <class U> void operator()(U* ptr) const;
  };
}
[codeblock:end]

[%@library default_delete[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
template <class U> default_delete(const default_delete<U[]>& other) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Constructs a [`default_delete] object from another
[`default_delete<U`[`]>] object.
[:zh_CN]
以另一个 [`default_delete<U`[`]>] 对象构造一个 [`default_delete] 对象。

[para:remarks]
[:en] This constructor shall not participate in overload resolution unless
[`U(*)`[`]] is convertible to [`T(*)`[`]].
[:zh_CN]
除非 [`U(*)`[`]] 可以转换为 [`T(*)`[`]]，否则该构造函数不能参与重载决议。
[exit:description]

[%@library operator()[!default_delete]]
[%@library default_delete[!operator()]]
[codeblock:declaration]
template <class U> void operator()(U* ptr) const;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Calls [`delete`[`]] on [`ptr].
[:zh_CN] 对 [`ptr] 调用 [`delete`[`]]。

[para:remarks]
[:en] If [`U] is an incomplete type, the program is ill-formed.
[:zh_CN] 若 [`U] 是不完整类型，则程序非良构。

[:en] This function shall not participate in overload resolution unless
[`U(*)`[`]] is convertible to [`T(*)`[`]].
[:zh_CN]
除非 [`U(*)`[`]] 可以转换为 [`T(*)`[`]]，否则该函数不能参与重载决议。
[exit:description]
