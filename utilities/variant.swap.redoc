[section#variant.swap
    [:en] Swap
    [:zh_CN] swap
]

[%@library swap[!variant]]
[%@library variant[!swap]]
[codeblock:declaration [!:mark SeeBelow] ]
void swap(variant& rhs) noexcept([=SeeBelow]);
[codeblock:end]

[enter:description]
[para:requires]
[:en] Lvalues of type [`T][$_i] shall be swappable ([#swappable.requirements])
and [`is_move_constructible_v<T[$_i]>] shall be [`true] for all [$i].
[:zh_CN] [`T][$_i] 类型的左值应当是可交换的（[#swappable.requirements]），并且
对于所有 [$i]，[`is_move_constructible_v<T[$_i]>] 应当为 [`true]。

[para:effects]
[list]
[item]
[:en] if [`valueless_by_exception() && rhs.valueless_by_exception()] no effect.
[:zh_CN] 若 [`valueless_by_exception() && rhs.valueless_by_exception()] 则没有
效果。

[item]
[:en] Otherwise, if [`index() == rhs.index()], calls
[`swap(get<[$i]>(*this), get<[$i]>(rhs))] where [$i] is [`index()].
[:zh_CN] 否则，若 [`index() == rhs.index()]，则调用
[`swap(get<[$i]>(*this), get<[$i]>(rhs))]，其中 [$i] 为 [`index()]。

[item]
[:en] Otherwise, exchanges values of [`rhs] and [`*this].
[:zh_CN] 否则，互换 [`rhs] 和 [`*this] 的值。
[list:end]

[para:throws]
[:en] If [`index() == rhs.index()], any exception thrown by
[`swap(get<[$i]>(*this), get<[$i]>(rhs))] with [$i] being [`index()].
[:zh_CN] 当 [`index() == rhs.index()] 时，由
[`swap(get<[$i]>(*this), get<[$i]>(rhs))] 所抛出的任何异常，其中 [$i] 为
[`index()]。

[:en] Otherwise, any exception thrown by the move constructor of [`T][$_i] or
[`T][$_j] with [$i] being [`index()] and [$j] being [`rhs.index()].
[:zh_CN] 否则为由 [`T][$_i] 或 [`T][$_j] 的移动构造函数所抛出的任何异常，
其中 [$i] 为 [`index()] 而 [$j] 为 [`rhs.index()]。

[para:remarks]
[:en] If an exception is thrown during the call to function
[`swap(get<[$i]>(*this), get<[$i]>(rhs))], the states of the contained values of
[`*this] and of [`rhs] are determined by the exception safety guarantee of
[`swap] for lvalues of [`T][$_i] with [$i] being [`index()].
[:zh_CN] 如果在调用函数 [`swap(get<[$i]>(*this), get<[$i]>(rhs))] 的过程中抛出了
异常，则 [`*this] 和 [`rhs] 所包含的值的状态由对 [`T][$_i] 的左值的 [`swap] 的
异常安全性保证所决定，其中 [$i] 为 [`index()]。

[:en] If an exception is thrown during the exchange of the values of [`*this]
and [`rhs], the states of the values of [`*this] and of [`rhs] are determined by
the exception safety guarantee of [`variant][=']s move constructor.
[:en] 如果在交换 [`*this] 和 [`rhs] 的值的过程中抛出了异常，则 [`*this] 和
[`rhs] 的值由 [`variant] 的移动构造函数的异常安全性保证所决定。

[:en] The expression inside [`noexcept] is equivalent to the logical AND of
[`is_nothrow_move_constructible_v<T[$_i]> && is_nothrow_swappable_v<T[$_i]>] for
all [$i].
[:zh_CN] [`noexcept] 中的表达式等价于
[`is_nothrow_move_constructible_v<T[$_i]> && is_nothrow_swappable_v<T[$_i]>]
对于所有 [$i] 的逻辑与。
[exit:description]
