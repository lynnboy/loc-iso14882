[section#meta.endian
    [:en] Endian
    [:zh_CN] 字节序
]

[para]
[:en]
Two common methods of byte ordering in multibyte scalar types are big-endian
and little-endian in the execution environment.
[:zh_CN]
多字节标量类型在执行环境中的两种常用字节排序方式时大头序和小头序。

[:en]
Big-endian is a format for storage of binary data in which the most significant
byte is placed first, with the rest in descending order.
[:zh_CN]
大头序是二进制数据的一种存储格式，其中最高有效字节放在前面，按降序排列剩余字节。

[:en]
Little-endian is a format for storage of binary data in which the least
significant byte is placed first, with the rest in ascending order.
小头序是二进制数据的一种存储格式，其中最低有效字节放在前面，按升序排列剩余字节。

[:en]
This subclause describes the endianness of the scalar types of the execution
environment.
[:zh_CN]
本子条款描述执行环境的标量类型字节序。

[%@library endian]
[%@library little[!endian]]
[%@library endian[!little]]
[%@library big[!endian]]
[%@library endian[!big]]
[%@library native[!endian]]
[%@library endian[!native]]
[codeblock:declaration [!:mark SeeBelow] ]
enum class endian {
  little = [=SeeBelow],
  big    = [=SeeBelow],
  native = [=SeeBelow]
};
[codeblock:end]

[enter:description]
[para]
[:en]
If all scalar types have size [`1], then all of [`endian::little],
[`endian::big], and [`endian::native] have the same value.
[:zh_CN]
如果所有标量类型大小为 [`1]，则 [`endian::little]，[`endian::big] 和
[`endian::native] 的值均相同。

[:en]
Otherwise, [`endian::little] is not equal to [`endian::big].
[:zh_CN]
否则，[`endian::little] 与 [`endian::big] 不相等。

[:en]
If all scalar types are big-endian, [`endian::native] is equal to
[`endian::big].
[:zh_CN]
如果所有标量类型都为大头序，则 [`endian::native] 等于 [`endian::big]。

[:en]
If all scalar types are little-endian, [`endian::native] is equal to
[`endian::little].
[:zh_CN]
如果所有标量类型都为小头序，则 [`endian::native] 等于 [`endian::little]。

[:en]
Otherwise, [`endian::native] is not equal to either [`endian::big] or
[`endian::little].
[:zh_CN]
否则，[`endian::native] 既不等于 [`endian::big] 也不等于 [`endian::little]。
[exit:description]
