[section#variant.specalg
    [:en] Specialized algorithms
    [:zh_CN] 特化的算法
]

[%@lib@member swap[!variant]]
[codeblock:declaration]
template<class... Types>
  constexpr void swap(variant<Types...>& v, variant<Types...>& w) noexcept([[redoc("[=seebelow]")]]);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_move_constructible_v<T[$_i]> && is_swappable_v<T[$_i]>] is [`true]
for all [$i].
[:zh_CN] [`is_move_constructible_v<T[$_i]> && is_swappable_v<T[$_i]>] 对于所有
[$i] 均为 [`true]。

[para:effects]
[:en] Equivalent to [`v.swap(w)].
[:zh_CN] 等价于 [`v.swap(w)]。

[para:remarks]
[:en] The exception specification is equivalent to [`noexcept(v.swap(w))].
[:zh_CN] 其异常说明等价于 [`noexcept(v.swap(w))]。
[div:end]
