[section#variant.specalg
    [:en] Specialized algorithms
    [:zh_CN] 特化的算法
]

[%@library swap[!variant]]
[codeblock:declaration [!:mark SeeBelow] ]
template<class... Types>
  void swap(variant<Types...>& v, variant<Types...>& w) noexcept([=SeeBelow]);
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to [`v.swap(w)].
[:zh_CN] 等价于 [`v.swap(w)]。

[para:remarks]
[:en] This function shall not participate in overload resolution unless
[`is_move_constructible_v<T[$_i]> && is_swappable_v<T[$_i]>] is [`true] for all
[$i].
[:zh_CN] 除非
[`is_move_constructible_v<T[$_i]> && is_swappable_v<T[$_i]>] 对于所有 [$i] 为
[`true]，否则这个函数不能参与重载决议。

[:en] The expression inside [`noexcept] is equivalent to [`noexcept(v.swap(w))].
[:zh_CN] [`noexcept] 中的表达式等价于 [`noexcept(v.swap(w))]。
[end:description]
