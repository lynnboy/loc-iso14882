[section#any.assign
    [:en] Assignment
    [:zh_CN] 赋值
]

[%@library operator=[!any]]
[%@library any[!operator=]]
[codeblock:declaration]
any& operator=(const any& rhs);
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`any(rhs).swap(*this)].
[:zh_CN] 如同执行 [`any(rhs).swap(*this)]。

[:en] No effects if an exception is thrown.
[:zh_CN] 当抛出异常时没有效果。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。

[para:throws]
[:en] Any exceptions arising from the copy constructor for the contained value.
[:zh_CN] 由所包含的值的复制构造函数所抛出的任何异常。
[div:end]

[%@library operator=[!any]]
[%@library any[!operator=]]
[codeblock:declaration]
any& operator=(any&& rhs) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`any(std::move(rhs)).swap(*this)].
[:zh_CN] 如同执行 [`any(std::move(rhs)).swap(*this)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。

[para:ensures]
[:en] The state of [`*this] is equivalent to the original state of [`rhs] and
[`rhs] is left in a valid but otherwise unspecified state.
[:zh_CN] [`*this] 的状态等价于 [`rhs] 原来的状态，而 [`rhs] 将处于某个有效但
未指明的状态。
[div:end]

[%@library operator=[!any]]
[%@library any[!operator=]]
[codeblock:declaration]
template<class T>
  any& operator=(T&& rhs);
[codeblock:end]

[div:description]
[para]
[:en] Let [`VT] be [`decay_t<T>].
[:zh_CN] 令 [`VT] 为 [`decay_t<T>]。

[para:requires]
[:en] [`VT] shall meet the [^:oc CopyConstructible] requirements.
[:zh_CN] [`VT] 应当满足 [^:oc CopyConstructible] 的规定。

[para:effects]
[:en] Constructs an object [`tmp] of type [`any] that contains an object of type
[`VT] direct-initialized with [`std::forward<T>(rhs)], and [`tmp.swap(*this)].
[:zh_CN] 构造一个 [`any] 类型的对象 [`tmp] 使其包含以 [`std::forward<T>(rhs)]
进行直接初始化的 [`VT] 类型的对象，然后执行 [`tmp.swap(*this)]。

[:en] No effects if an exception is thrown.
[:zh_CN] 当抛出异常时没有效果。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。

[para:remarks]
[:en] This operator shall not participate in overload resolution unless [`VT] is
not the same type as [`any] and [`is_copy_constructible_v<VT>] is [`true].
[:zh_CN] 除非 [`VT] 和 [`any] 并非同一类型，并且 [`is_copy_constructible_v<VT>]
为 [`true]，否则这个运算符不能参与重载决议。

[para:throws]
[:en] Any exception thrown by the selected constructor of [`VT].
[:zh_CN] 由所选择的 [`VT] 的构造函数所抛出的任何异常。
[div:end]
