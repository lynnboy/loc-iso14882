[section#refwrap.helpers
    [:en] Helper functions
    [:zh_CN] 辅助函数
]

[para]
[:en] The template parameter [`T] of the following [`ref] and [`cref] function
templates may be an incomplete type.
[:zh_CN] 下列各 [`ref] 和 [`cref] 函数模板的模板形参 [`T] 可以为不完整类型。

[%@library reference_wrapper[!ref]]
[%@library ref[!reference_wrapper]]
[codeblock:declaration]
template<class T> constexpr reference_wrapper<T> ref(T& t) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`reference_wrapper<T>(t)].
[:zh_CN] [`reference_wrapper<T>(t)]。
[exit:description]

[%@library reference_wrapper[!ref]]
[%@library ref[!reference_wrapper]]
[codeblock:declaration]
template<class T> constexpr reference_wrapper<T> ref(reference_wrapper<T> t) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`ref(t.get())].
[:zh_CN] [`ref(t.get())]。
[exit:description]

[%@library reference_wrapper[!cref]]
[%@library cref[!reference_wrapper]]
[codeblock:declaration]
template<class T> constexpr reference_wrapper<const T> cref(const T& t) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`reference_wrapper <const T>(t)].
[:zh_CN] [`reference_wrapper <const T>(t)]。
[exit:description]

[%@library reference_wrapper[!cref]]
[%@library cref[!reference_wrapper]]
[codeblock:declaration]
template<class T> constexpr reference_wrapper<const T> cref(reference_wrapper<T> t) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`cref(t.get())].
[:zh_CN] [`cref(t.get())]。
[exit:description]
