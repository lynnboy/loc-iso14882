[section#meta.trans.sign
    [:en] Sign modifications
    [:zh_CN] 符号改造
]

[table:grid#meta.trans.sign
    [:en] Sign modifications
    [:zh_CN] 符号改造
    [|  [:en] Template
        [:zh_CN] 模板 ]
    [|  [:en] Comments
        [:zh_CN] 注释 ]
]

[%@lib make_signed]
[|]
[`template<class T>] [br]
[`struct make_signed;]
[|] [:en] If [`T] names a (possibly cv-qualified) signed integer type
    ([#basic.fundamental]) then the member typedef [`type] names the type [`T];
    otherwise, if [`T] names a (possibly cv-qualified) unsigned integer type
    then [`type] names the corresponding signed integer type, with the same
    cv-qualifiers as [`T]; otherwise, [`type] names the signed integer type with
    smallest rank ([#conv.rank]) for which [`sizeof(T) == sizeof(type)], with
    the same cv-qualifiers as [`T].
    [:zh_CN] 若 [`T] 指名（可能被 cv 限定的）有符号整数类型
    （[#basic.fundamental]），则成员 typedef [`type] 指名类型 [`T]；否则，若
    [`T] 指名（可能被 cv 限定的）无符号整数类型，则 [`type] 指名带有与 [`T] 相同
    的 cv 限定符的对应有符号整数类型；否则 [`type] 指名带有与 [`T] 相同的 cv
    限定符并具有使得 [`sizeof(T) == sizeof(type)] 成立的最小等级（[#conv.rank]）
    的有符号整数类型。

    [para:mandates]
    [:en] [`T] is an integral or enumeration type other than [=cv] [`bool].
    [:zh_CN] [`T] 为除 [=cv] [`bool] 之外的整形或枚举类型。
[-]

[%@lib make_unsigned]
[|]
[`template<class T>] [br]
[`struct make_unsigned;]
[|] [:en] If [`T] names a (possibly cv-qualified) unsigned integer type
    ([#basic.fundamental]) then the member typedef [`type] names the type [`T];
    otherwise, if [`T] names a (possibly cv-qualified) signed integer type then
    [`type] names the corresponding unsigned integer type, with the same
    cv-qualifiers as [`T]; otherwise, [`type] names the unsigned integer type
    with smallest rank ([#conv.rank]) for which [`sizeof(T) == sizeof(type)],
    with the same cv-qualifiers as [`T].
    [:zh_CN] 若 [`T] 指名（可能被 cv 限定的）无符号整数类型
    （[#basic.fundamental]），则成员 typedef [`type] 指名类型 [`T]；否则，若
    [`T] 指名（可能被 cv 限定的）有符号整数类型，则 [`type] 指名带有与 [`T] 相同
    的 cv 限定符的对应无符号整数类型；否则 [`type] 指名带有与 [`T] 相同的 cv
    限定符并具有使得 [`sizeof(T) == sizeof(type)] 成立的最小等级（[#conv.rank]）
    的无符号整数类型。

    [para:mandates]
    [:en] [`T] is an integral or enumeration type other than [=cv] [`bool].
    [:zh_CN] [`T] 为除 [=cv] [`bool] 之外的整形或枚举类型。
[-]
[table:end]
