[section#execpol.par
    [:en] Parallel execution policy
    [:zh_CN] 并行执行策略
]

[%@lib execution::parallel_policy]
[codeblock:declaration]
class execution::parallel_policy { [[redoc("[=unspec]")]] };
[codeblock:end]

[div:description]
[para]
[:en] The class [`execution::parallel_policy] is an execution policy type used
as a unique type to disambiguate parallel algorithm overloading and indicate
that a parallel algorithm[=']s execution may be parallelized.
[:zh_CN] 类 [`execution::parallel_policy] 是一种执行策略类型，用作在并行算法
重载中进行歧义消解的唯一类型，并要求并行算法的执行可以被并行化。

[para]
[:en] During the execution of a parallel algorithm with the
[`execution::parallel_policy] policy, if the invocation of an element access
function exits via an uncaught exception, [`terminate()] shall be called.
[:zh_CN] 在具有 [`execution::parallel_policy] 的并行算法的执行过程中，如果某次
元素访问函数的执行以未捕获的异常而退出，则应当调用 [`terminate()]。
[div:end]
