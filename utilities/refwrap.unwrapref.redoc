[section#refwrap.unwrapref
    [:en] Transformation type trait [`unwrap_reference]
    [:zh_CN] 变换类型特征 [`unwrap_reference]
]

[%@library unwrap_reference]
[codeblock:declaration]
template<class T>
  struct unwrap_reference;
[codeblock:end]

[enter:description]
[para]
[:en] If [`T] is a specialization [`reference_wrapper<X>] for some type [`X],
the member typedef [`type] of [`unwrap_reference<T>] is [`X&], otherwise it is
[`T].
[:zh_CN] 若 [`T] 是 [`reference_wrapper<X>] 针对某个类型 [`X] 的特例，则
[`unwrap_reference<T>] 的成员 typedef [`type] 为 [`X&]，否则为 [`T]。
[exit:description]

[%@library unwrap_ref_decay]
[codeblock:declaration]
template<class T>
  struct unwrap_ref_decay;
[codeblock:end]

[enter:description]
[para]
[:en] The member typedef [`type] of [`unwrap_ref_decay<T>] denotes the type 
[`unwrap_reference_t<decay_t<T>>].
[:zh_CN] [`unwrap_ref_decay<T>] 的成员 typedef [`type] 代表类型
[`unwrap_reference_t<decay_t<T>>]。
[exit:description]
