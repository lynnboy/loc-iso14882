[section#variant.status
    [:en] Value status
    [:zh_CN] 值的状态
]

[%@library valueless_by_exception[!variant]]
[%@library variant[!valueless_by_exception]]
[codeblock:declaration]
constexpr bool valueless_by_exception() const noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] Returns [`false] if and only if the [`variant] holds a value.
[:zh_CN] 当且仅当该 [`variant] 持有值时返回 [`false]。

[para]
[enter:note]
[:en] A [`variant] might not hold a value if an exception is thrown during a
type-changing assignment or emplacement.
[:zh_CN] 如果在改变类型的赋值或放置操作中抛出了异常，[`variant] 就可能不持有值。

[:en] The latter means that even a [`variant<float, int>] can become
[`valueless_by_exception()], for instance by
[:zh_CN] 后一种情况意味着，即便是 [`variant<float, int>] 也可能变为
[`valueless_by_exception()]，比如通过以下代码

[codeblock]
struct S { operator int() { throw 42; }};
variant<float, int> v{12.f};
v.emplace<1>(S());
[codeblock:end]
[exit:note]
[exit:description]

[%@library index[!variant]]
[%@library variant[!index]]
[codeblock:declaration]
constexpr size_t index() const noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en] If [`valueless_by_exception()] is [`true], returns [`variant_npos].
[:zh_CN] 当 [`valueless_by_exception()] 为 [`true] 时返回 [`variant_npos]。

[:en] Otherwise, returns the zero-based index of the alternative of the
contained value.
[:zh_CN] 否则，就返回其所包含的值的候选的基于零的索引。
[exit:description]
