[section#meta.trans.ref
    [:en] Reference modifications
    [:zh_CN] 引用改造
]

[table:grid#meta.trans.ref
    [:en] Reference modifications
    [:zh_CN] 引用改造
    [|@code
        [:en] Template
        [:zh_CN] 模板
    ]
    [|
        [:en] Comments
        [:zh_CN] 注释
    ]
]

[%@lib remove_reference]
[|]
template<class T> [br]
struct remove_reference;
[|] [:en] If [`T] has type [=lq]reference to [`T1][=rq] then the member typedef
    [`type] names [`T1]; otherwise, [`type] names [`T].
    [:zh_CN] 若 [`T] 的类型为“[`T1] 的引用”，则成员 typedef [`type] 指名 [`T1]；
    否则 [`type] 指名 [`T]。
[-]

[%@lib add_lvalue_reference]
[|]
template<class T> [br]
struct add_lvalue_reference;
[|] [:en] If [`T] names a referenceable type ([#defns.referenceable]) then the
    member typedef [`type] names [`T&]; otherwise, [`type] names [`T].
    [:zh_CN] 若 [`T] 指名某个可被引用的类型（[#defns.referenceable]），则成员
    typedef [`type] 指名 [`T&]；否则 [`type] 指名 [`T]。
[-]

[%@lib add_rvalue_reference]
[|]
template<class T> [br]
struct add_rvalue_reference;
[|] [:en] If [`T] names a referenceable type then the member typedef [`type]
    names [`T&&]; otherwise, [`type] names [`T].
    [:zh_CN] 若 [`T] 指名某个可被引用的类型，则成员 typedef [`type] 指名 [`T&&]；
    否则 [`type] 指名 [`T]。

    [begin:note]
    [:en] This rule reflects the semantics of reference collapsing ([#dcl.ref]).
    [:zh_CN] 这条规则反映了引用坍缩（[#dcl.ref]）语义。

    [:en] For example, when a type [`T] names a type [`T1&], the type
    [`add_rvalue_reference_t<T>] is not an rvalue reference.
    [:zh_CN] 例如，当某类型 [`T] 指名某类型 [`T1&] 时，类型
    [`add_rvalue_reference_t<T>] 并不是右值引用。
    [end:note]
[-]
[table:end]
