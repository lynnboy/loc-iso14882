[section#tuple.swap
    [:en] [`swap]
    [:zh_CN] [`swap]
]

[%@lib@member swap[!tuple]]
[codeblock:declaration]
constexpr void swap(tuple& rhs) noexcept([[redoc("[=seebelow]")]]);
constexpr void swap(const tuple& rhs) const noexcept([[redoc("[=seebelow]")]]);
[codeblock:end]

[div:description]
[para:mandates]
[list]
[item]
[:en] For the first overload, [`(is_swappable_v<Types> && ...)] is [`true].
[:zh_CN] 对于第一个重载，[`(is_swappable_v<Types> && ...)] 为 [`true]。
[item]
[:en] For the second overload, [`(is_swappable_v<const Types> && ...)] is [`true].
[:zh_CN] 对于第二个重载，[`(is_swappable_v<const Types> && ...)] 为 [`true]。
[list:end]

[para:expects]
[:en] Each element in [`*this] is swappable with ([#swappable.requirements])
the corresponding element in [`rhs].
[:zh_CN] [`*this] 中的每个类型均应当与 [`rhs] 中的对应元素之间可互相交换
（[#swappable.requirements]）。

[para:effects]
[:en] Calls [`swap] for each element in [`*this] and its corresponding element
in [`rhs].
[:zh_CN] 为 [`*this] 中的每个元素与其在 [`rhs] 中的对应元素调用 [`swap]。

[para:throws]
[:en] Nothing unless one of the element-wise [`swap] calls throws an exception.
[:zh_CN] 除非按元素调用的 [`swap] 中有一个抛出异常，否则不抛出异常。

[para:remarks]
[:en] The exception specification is equivalent to
[:zh_CN] 其异常说明等价于
[list]
[item]
[:en@~] [`(is_nothrow_swappable_v<Types> && ...)] for the first overload and
[:zh_CN@~] 对于第一个重载为 [`(is_nothrow_swappable_v<Types> && ...)]，而
[item]
[:en@~] [`(is_nothrow_swappable_v<const Types> && ...)] for the second overload.
[:zh_CN@~] 对于第而个重载为 [`(is_nothrow_swappable_v<const Types> && ...)]。
[list:end]
[div:end]
