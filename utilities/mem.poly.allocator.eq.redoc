[section#mem.poly.allocator.eq
    [:en] [`polymorphic_allocator] equality
    [:zh_CN] [`polymorphic_allocator] 的相等性
]

[%@library operator==[!polymorphic_allocator]]
[%@library polymorphic_allocator[!operator==]]
[codeblock:declaration]
template<class T1, class T2>
  bool operator==(const polymorphic_allocator<T1>& a,
                  const polymorphic_allocator<T2>& b) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`*a.resource() == *b.resource()].
[:zh_CN] [`*a.resource() == *b.resource()]。
[exit:description]

[%@library operator!=[!polymorphic_allocator]]
[%@library polymorphic_allocator[!operator!=]]
[codeblock:declaration]
template<class T1, class T2>
  bool operator!=(const polymorphic_allocator<T1>& a,
                  const polymorphic_allocator<T2>& b) noexcept;
[codeblock:end]

[enter:description]
[para:returns]
[:en] [`!(a == b)].
[:zh_CN] [`!(a == b)]。
[exit:description]
