[section#stacktrace.basic.cmp
    [:en] Comparisons
    [:zh_CN] 比较
]

[%@lib@member operator==[!basic_stacktrace]]
[codeblock:declaration]
template<class Allocator2>
friend bool operator==(const basic_stacktrace& x, const basic_stacktrace<Allocator2>& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`equal(x.begin(), x.end(), y.begin(), y.end())].
[:zh_CN] [`equal(x.begin(), x.end(), y.begin(), y.end())]。
[div:end]

[%@lib@member operator<=>[!basic_stacktrace]]
[codeblock:declaration]
template<class Allocator2>
friend strong_ordering
  operator<=>(const basic_stacktrace& x, const basic_stacktrace<Allocator2>& y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`x.size() <=> y.size()] if [`x.size() != y.size()];
[`lexicographical_compare_three_way(x.begin(), x.end(), y.begin(), y.end())]
otherwise.
[:zh_CN] 当 [`x.size() != y.size()] 时返回 [`x.size() <=> y.size()]；否则返回
[`lexicographical_compare_three_way(x.begin(), x.end(), y.begin(), y.end())]。
[div:end]
