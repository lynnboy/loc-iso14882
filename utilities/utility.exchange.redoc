[section#utility.exchange
    [:en] [`exchange]
    [:zh_CN] [`exchange]
]

[%@lib exchange]
[codeblock:declaration]
template<class T, class U = T>
  constexpr T exchange(T& obj, U&& new_val) noexcept([[redoc("[=seebelow]")]]);
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to:
[:zh_CN] 等价于：

[codeblock]
T old_val = std::move(obj);
obj = std::forward<U>(new_val);
return old_val;
[codeblock:end]

[para:remarks]
[:en] The exception specification is equivalent to:
[:zh_CN] 其异常说明等价于：
[codeblock]
is_nothrow_move_constructible_v<T> && is_nothrow_assignable_v<T&, U>
[codeblock:end]
[div:end]
