[section#expected.syn
    [:en] Header [`<expected>] synopsis
    [:zh_CN] 头文件 [`<expected>] 纲要
]

[%@hdr@def expected]
[%@lib unexpect_t]
[%@lib unexpect]
[codeblock:synopsis]
namespace std {
  // [:en] [#expected.unexpected], class template [`unexpected] \
  [:zh_CN] [#expected.unexpected]，类模板 [`unexpected]
  template<class E> class unexpected;

  // [:en] [#expected.bad], class template [`bad_expected_access] \
  [:zh_CN] [#expected.bad]，类模板 [`bad_expected_access]
  template<class E> class bad_expected_access;

  // [:en] [#expected.bad.void], specialization for [`void] \
  [:zh_CN] [#expected.bad.void]，针对 [`void] 的特化式
  template<> class bad_expected_access<void>;

  // [:en] in-place construction of unexpected values \
  [:zh_CN] 非预期值的就地构造
  struct unexpect_t {
    explicit unexpect_t() = default;
  };
  inline constexpr unexpect_t unexpect{};

  // [:en] [#expected.expected], class template [`expected] \
  [:zh_CN] [#expected.expected]，类模板 [`expected]
  template<class T, class E> class expected;

  // [:en] [#expected.void], partial specialization of [`expected] for [`void] types \
  [:zh_CN] [#expected.void]，[`expected] 针对各 [`void] 类型的部分特化式
  template<class T, class E> requires is_void_v<T> class expected<T, E>;
}
[codeblock:end]
