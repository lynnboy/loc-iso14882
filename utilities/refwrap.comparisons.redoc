[section#refwrap.comparisons
    [:en] Comparisons
    [:zh_CN] 比较
]

[codeblock:declaration]
friend constexpr bool operator==(reference_wrapper x, reference_wrapper y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] The expression [`x.get() == y.get()] is well-formed and its result is
convertible to [`bool].
[:zh_CN] 表达式 [`x.get() == y.get()] 良构且其结果可转换为 [`bool]。

[para:returns]
[:en] [`x.get() == y.get()].
[:zh_CN] [`x.get() == y.get()]。
[div:end]

[codeblock:declaration]
friend constexpr bool operator==(reference_wrapper x, const T& y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] The expression [`x.get() == y] is well-formed and its result is
convertible to [`bool].
[:zh_CN] 表达式 [`x.get() == y] 良构且其结果可转换为 [`bool]。

[para:returns]
[:en] [`x.get() == y].
[:zh_CN] [`x.get() == y]。
[div:end]

[codeblock:declaration]
friend constexpr bool operator==(reference_wrapper x, reference_wrapper<const T> y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_const_v<T>] is [`false] and the expression [`x.get() == y.get()] is
well-formed and its result is convertible to [`bool].
[:zh_CN] [`is_const_v<T>] 为 [`false]，且表达式 [`x.get() == y.get()] 良构且其结果
可转换为 [`bool]。

[para:returns]
[:en] [`x.get() == y.get()].
[:zh_CN] [`x.get() == y.get()]。
[div:end]

[codeblock:declaration]
friend constexpr auto operator<=>(reference_wrapper x, reference_wrapper y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] The expression [`[*synth-three-way](x.get(), y.get())] is well-formed.
[:zh_CN] 表达式 [`[*synth-three-way](x.get(), y.get())] 良构。

[para:returns]
[:en] [`[*synth-three-way](x.get(), y.get())].
[:zh_CN] [`[*synth-three-way](x.get(), y.get())]。
[div:end]

[codeblock:declaration]
friend constexpr auto operator<=>(reference_wrapper x, const T& y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] The expression [`[*synth-three-way](x.get(), y)] is well-formed.
[:zh_CN] 表达式 [`[*synth-three-way](x.get(), y)] 良构。

[para:returns]
[:en] [`[*synth-three-way](x.get(), y)].
[:zh_CN] [`[*synth-three-way](x.get(), y)]。
[div:end]

[codeblock:declaration]
friend constexpr auto operator<=>(reference_wrapper x, reference_wrapper<const T> y);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`is_const_v<T>] is [`false].
[:zh_CN] [`is_const_v<T>] 为 [`false]。

[:en] The expression [`[*synth-three-way](x.get(), y.get())] is well-formed.
[:zh_CN] 表达式 [`[*synth-three-way](x.get(), y.get())] 良构。

[para:returns]
[:en] [`[*synth-three-way](x.get(), y.get())].
[:zh_CN] [`[*synth-three-way](x.get(), y.get())]。
[div:end]
