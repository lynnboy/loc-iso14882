[section#variant.visit
    [:en] Visitation
    [:zh_CN] 值的探访
]

[%@library visit]
[%@library variant[!visit]]
[codeblock:declaration [!:mark SeeBelow] ]
template<class Visitor, class... Variants>
  constexpr [=SeeBelow] visit(Visitor&& vis, Variants&&... vars);
[codeblock:end]

[enter:description]
[para:requires]
[:en] The expression in the [=Effects] element shall be a valid expression of
the same type and value category, for all combinations of alternative types of
all variants.
[:zh_CN] 对于所有变体的候选类型的全部组合，[=Effects] 条目中的表达式都应当是具有
相同类型和值类别的有效表达式。

[:en] Otherwise, the program is ill-formed.
[:zh_CN] 否则，程序非良构。

[para:effects]
[:en] Let [`is...] be [`vars.index()...].
[:zh_CN] 令 [`is...] 为 [`vars.index()...]。

[:en] Returns
[`[*INVOKE](forward<Visitor>(vis), get<is>(forward<Variants>(vars))...);]
([#func.require]).
[:zh_CN] 返回
[`[*INVOKE](forward<Visitor>(vis), get<is>(forward<Variants>(vars))...);]
（[#func.require]）。

[para:remarks]
[:en] The return type is the common type of all possible [`[*INVOKE]]
expressions of the [=Effects] element.
[:zh_CN] 其返回类型为 [=Effects] 条目中的所有可能的 [`[*INVOKE]] 表达式的公共
类型。

[para:throws]
[:en] [`bad_variant_access] if any [`variant] in [`vars] is
[`valueless_by_exception()].
[:zh_CN] 当 [`vars] 中的任何 [`variant] 为 [`valueless_by_exception()] 时抛出
[`bad_variant_access]。

[para:complexity]
[:en] For [`sizeof...(Variants) <= 1], the invocation of the callable object is
implemented in constant time, i.e., it does not depend on [`sizeof...(Types)].
[:zh_CN] 当 [`sizeof...(Variants) <= 1] 时，对可调用对象的调用操作时以常量时间
实现的，亦即不取决于 [`sizeof...(Types)]。

[:en] For [`sizeof...(Variants) > 1], the invocation of the callable object has
no complexity requirements.
[:zh_CN] 当 [`sizeof...(Variants) > 1] 时，对可调用对象的调用操作没有复杂度规定。
[exit:description]
