[section#func.not.fn
    [:en] Function template [`not_fn]
    [:zh_CN] 函数模板 [`not_fn]
]

[%@library not_fn]
[codeblock:declaration]
template<class F> constexpr [[redoc("=unspec")]] not_fn(F&& f);
[codeblock:end]

[begin:description]
[para]
[:en] In the text that follows:
[:zh_CN] 以下文本中：
[list]
[item]
[:en@~] [`g] is a value of the result of a [`not_fn] invocation,
[:zh_CN@~] [`g] 为一次 [`not_fn] 调用的结果值，
[item]
[:en@~] [`FD] is the type [`decay_t<F>],
[:zh_CN@~] [`FD] 为类型 [`decay_t<F>]，
[item]
[:en@~] [`fd] is the target object of [`g] ([#func.def]) of type [`FD],
direct-non-list-initialized with [`(std::forward<F>(f))],
[:zh_CN@~] [`fd] 为 [`g] 的目标对象（[#func.def]），类型为 [`FD]，并以
[`(std::forward<F>(f))] 进行直接非列表初始化，
[item]
[:en@~] [`call_args] is an argument pack used in a function call expression
([#expr.call]) of [`g].
[:zh_CN@~] [`call_args] 为在 [`g] 的函数调用表达式（[#expr.call]）中所使用的
实参包组。
[list:end]

[para:mandates]
[:en] [`is_constructible_v<FD, F> && is_move_constructible_v<FD>] shall be true.
[:zh_CN] [`is_constructible_v<FD, F> && is_move_constructible_v<FD>] 应当为
[`true]。

[para:expects]
[:en] [`FD] meets the [^:oc MoveConstructible] requirements.
[:zh_CN] [`FD] 满足 [^:oc MoveConstructible] 的规定。

[para:returns]
[:en] A perfect forwarding call wrapper [`g] with call pattern
[`!invoke(fd, call_args...)].
[:zh_CN] 调用模式为 [`!invoke(fd, call_args...)] 的完美转发调用包装器 [`g]。

[para:throws]
[:en] Any exception thrown by the initialization of [`fd].
[:zh_CN] 任何由 [`fd] 的初始化所抛出的异常。
[end:description]
