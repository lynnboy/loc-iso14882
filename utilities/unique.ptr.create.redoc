[section#unique.ptr.create
    [:en] Creation
    [:zh_CN] 创建
]

[%@lib make_unique]
[codeblock:declaration]
template<class T, class... Args> unique_ptr<T> make_unique(Args&&... args);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This function shall not participate in overload resolution unless [`T] is
not an array.
[:zh_CN] 除非 [`T] 不是数组，否则这个函数不能参与重载决议。

[para:returns]
[:en] [`unique_ptr<T>(new T(std::forward<Args>(args)...))].
[:zh_CN] [`unique_ptr<T>(new T(std::forward<Args>(args)...))]。
[div:end]

[%@lib make_unique]
[codeblock:declaration]
template<class T> unique_ptr<T> make_unique(size_t n);
[codeblock:end]

[div:description]
[para:remarks]
[:en] This function shall not participate in overload resolution unless [`T] is
an array of unknown bound.
[:zh_CN] 除非 [`T] 是未知边界的数组，否则这个函数不能参与重载决议。

[para:returns]
[:en] [`unique_ptr<T>(new remove_extent_t<T>`[n`]())].
[:zh_CN] [`unique_ptr<T>(new remove_extent_t<T>`[n`]())]。
[div:end]

[%@lib make_unique]
[codeblock:declaration]
template<class T, class... Args> [[redoc("[=unspec]")]] make_unique(Args&&...) = delete;
[codeblock:end]

[div:description]
[para:remarks]
[:en] This function shall not participate in overload resolution unless [`T] is
an array of known bound.
[:zh_CN] 除非 [`T] 是未知边界的数组，否则这个函数不能参与重载决议。
[div:end]

[%@lib make_unique]
[codeblock:declaration]
template<class T> unique_ptr<T> make_unique_default_init();
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`T] is not an array.
[:zh_CN] [`T] 不是数组。

[para:returns]
[:en] [`unique_ptr<T>(new T)].
[:zh_CN] [`unique_ptr<T>(new T)]。
[div:end]

[%@lib make_unique]
[codeblock:declaration]
template<class T> unique_ptr<T> make_unique_default_init(size_t n);
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`T] is an array of unknown bound.
[:zh_CN] [`T] 是未知边界的数组。

[para:returns]
[:en] [`unique_ptr<T>(new remove_extent_t<T>`[n`])].
[:zh_CN] [`unique_ptr<T>(new remove_extent_t<T>`[n`])]。
[div:end]

[%@lib make_unique]
[codeblock:declaration]
template<class T, class... Args> [[redoc("[=unspec]")]] make_unique_default_init(Args&&...) = delete;
[codeblock:end]

[div:description]
[para:constraints]
[:en] [`T] is an array of known bound.
[:zh_CN] [`T] 是已知边界的数组。
[div:end]
