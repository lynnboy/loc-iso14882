[section#any.class
    [:en] Class [`any]
    [:zh_CN] 类 [`any]
]

[codeblock:synopsis]
namespace std {
  class any {
  public:
    // [:en] [#any.cons], construction and destruction
    // [|:zh_CN] [#any.cons]，构造与销毁
    constexpr any() noexcept;

    any(const any& other);
    any(any&& other) noexcept;

    template<class T>
      any(T&& value);

    template<class T, class... Args>
      explicit any(in_place_type_t<T>, Args&&...);
    template<class T, class U, class... Args>
      explicit any(in_place_type_t<T>, initializer_list<U>, Args&&...);

    ~any();

    // [:en] [#any.assign], assignments
    // [|:zh_CN] [#any.assign]，赋值
    any& operator=(const any& rhs);
    any& operator=(any&& rhs) noexcept;

    template<class T>
      any& operator=(T&& rhs);

    // [:en] [#any.modifiers], modifiers
    // [|:zh_CN] [#any.modifiers]，改动函数
    template<class T, class... Args>
      decay_t<T>& emplace(Args&& ...);
    template<class T, class U, class... Args>
      decay_t<T>& emplace(initializer_list<U>, Args&&...);
    void reset() noexcept;
    void swap(any& rhs) noexcept;

    // [:en] [#any.observers], observers
    // [|:zh_CN] [#any.observers]，探察函数
    bool has_value() const noexcept;
    const type_info& type() const noexcept;
  };
}
[codeblock:end]

[para]
[:en] An object of class [`any] stores an instance of any type that meets the
constructor requirements or it has no value, and this is referred to as the
[+state] of the class [`any] object.
[:zh_CN] 类 [`any] 的对象存储一个任意满足其对构造函数要求的类型的实例，或者没有
值，这被称为这个类 [`any] 对象的[+状态]。

[:en] The stored instance is called the [+contained value[%contained value
[![`any]]]].
[:zh_CN] 其所存储的实例被称为其所[+包含的值[%包含的值[![`any]]]]。

[:en] Two states are equivalent if either they both have no value, or they both
have a value and the contained values are equivalent.
[:zh_CN] 当两个状态要么都没有值，要么都有值且所包含的值等价时，这两个状态等价。

[para]
[:en] The non-member [`any_cast] functions provide type-safe access to the
contained value.
[:zh_CN] 非成员的 [`any_cast] 函数提供了一种安全地访问所包含的值的方法。

[para]
[:en] Implementations should avoid the use of dynamically allocated memory for
a small contained value.
[:zh_CN] 实现应当避免为小型的包含的值使用动态分配的内存。

[:en] However, any such small-object optimization shall only be applied to types
[`T] for which [`is_nothrow_move_constructible_v<T>] is [`true].
[:zh_CN] 然而，任何这样的小对象优化都应当仅适用于使得
[`is_nothrow_move_constructible_v<T>] 为 [`true] 的类型 [`T]。

[enter:example]
[:en] A contained value of type [`int] could be stored in an internal buffer,
not in separately-allocated memory.
[:zh_CN] [`int] 类型的包含值可以被存储到内部缓冲区中而不是分开分配的内存中。
[exit:example]

[include any.cons]

[include any.assign]

[include any.modifiers]

[include any.observers]
