[section#atomics.types.memop
    [:en] Member operators common to integers and pointers to objects
    [:zh_CN] 整数和对象指针通用的成员运算符
]

[%@lib@member operator++[!atomic<T*>]]
[%@lib@member operator++[!atomic<[^integral]>]]
[codeblock:declaration]
T operator++(int) volatile noexcept;
T operator++(int) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return fetch_add(1);]
[:zh_CN] 等价于：[`return fetch_add(1);]
[div:end]

[%@lib@member operator--[!atomic<T*>]]
[%@lib@member operator--[!atomic<[^integral]>]]
[codeblock:declaration]
T operator--(int) volatile noexcept;
T operator--(int) noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return fetch_sub(1);]
[:zh_CN] 等价于：[`return fetch_sub(1);]
[div:end]

[%@lib@member operator++[!atomic<T*>]]
[%@lib@member operator++[!atomic<[^integral]>]]
[codeblock:declaration]
T operator++() volatile noexcept;
T operator++() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return fetch_add(1) + 1;]
[:zh_CN] 等价于：[`return fetch_add(1) + 1;]
[div:end]

[%@lib@member operator--[!atomic<T*>]]
[%@lib@member operator--[!atomic<[^integral]>]]
[codeblock:declaration]
T operator--() volatile noexcept;
T operator--() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to: [`return fetch_sub(1) - 1;]
[:zh_CN] 等价于：[`return fetch_sub(1) - 1;]
[div:end]
