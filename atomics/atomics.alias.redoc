[section#atomics.alias
    [:en] Type aliases
    [:zh_CN] 类型别名
]

[%@library atomic_bool]
[%@library atomic_char]
[%@library atomic_schar]
[%@library atomic_uchar]
[%@library atomic_short]
[%@library atomic_ushort]
[%@library atomic_int]
[%@library atomic_uint]
[%@library atomic_long]
[%@library atomic_ulong]
[%@library atomic_llong]
[%@library atomic_ullong]
[%@library atomic_char8_t]
[%@library atomic_char16_t]
[%@library atomic_char32_t]
[%@library atomic_wchar_t]
[%@library atomic_int8_t]
[%@library atomic_uint8_t]
[%@library atomic_int16_t]
[%@library atomic_uint16_t]
[%@library atomic_int32_t]
[%@library atomic_uint32_t]
[%@library atomic_int64_t]
[%@library atomic_uint64_t]
[%@library atomic_int_least8_t]
[%@library atomic_uint_least8_t]
[%@library atomic_int_least16_t]
[%@library atomic_uint_least16_t]
[%@library atomic_int_least32_t]
[%@library atomic_uint_least32_t]
[%@library atomic_int_least64_t]
[%@library atomic_uint_least64_t]
[%@library atomic_int_fast8_t]
[%@library atomic_uint_fast8_t]
[%@library atomic_int_fast16_t]
[%@library atomic_uint_fast16_t]
[%@library atomic_int_fast32_t]
[%@library atomic_uint_fast32_t]
[%@library atomic_int_fast64_t]
[%@library atomic_uint_fast64_t]
[%@library atomic_intptr_t]
[%@library atomic_uintptr_t]
[%@library atomic_size_t]
[%@library atomic_ptrdiff_t]
[%@library atomic_intmax_t]
[%@library atomic_uintmax_t]
[para]
[:en] The type aliases [`atomic_int[$N]_t], [`atomic_uint[$N]_t],
[`atomic_intptr_t], and [`atomic_uintptr_t] are defined if and only if
[`int[$N]_t], [`uint[$N]_t], [`intptr_t], and [`uintptr_t] are defined,
respectively.
[:zh_CN] 当且仅当 [`int[$N]_t]，[`uint[$N]_t]，[`intptr_t] 和 [`uintptr_t] 有
定义时，类型别名 [`atomic_int[$N]_t]，[`atomic_uint[$N]_t]，[`atomic_intptr_t]
和 [`atomic_uintptr_t] 分别有定义。

[para]
[%@library atomic_signed_lock_free]
[%@library atomic_unsigned_lock_free]
[:en] The type aliases [`atomic_signed_lock_free] and
[`atomic_unsigned_lock_free] name specializations of [`atomic] whose template
arguments are integral types, respectively signed and unsigned, and whose
[`is_always_lock_free] property is [`true].
[:zh_CN] 类型别名 [`atomic_signed_lock_free] 和 [`atomic_unsigned_lock_free]
指名了 [`atomic] 的特例中模板实参为整型类型，分别为有符号和无符号的，且其
[`is_always_lock_free] 属性为 [`true] 的特例。

[enter:note]
[:en] These aliases are optional in freestanding implementations ([#compliance]).
[:zh_CN] 这些别名在自立式实现中是可选的（[#compliance]）。
[exit:note]

[:en] Implementations should choose for these aliases the integral
specializations of [`atomic] for which the atomic waiting and notifying
operations ([#atomics.wait]) are most efficient.
[:zh_CN] 各实现应当为这些别名选择具有最高效的等待和通知操作（[#atomics.wait]）的
那些 [`atomic] 的整型特例。
