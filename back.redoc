[section:back#back ]

[section:ref#bibliograpy
	[:en] Bibliography
	[:zh_CN] 参考文献
]

[list:bibliograpy]
[item#iso4217]
[:en] ISO 4217:2015, [cite Codes for the representation of currencies]
[:zh_CN] ISO 4217:2015，[cite 《货币表示代码》]

[item#iso10967-1]
[:en] ISO/IEC 10967-1:2012, [cite Information technology [=--]
Language independent arithmetic [=--] Part 1: Integer and floating point arithmetic]
[:zh_CN] ISO/IEC 10967-1:2012，[cite 《信息技术——语言无关的算术——第 1 部分：整数和浮点算术》]

[item#iso14882:2023]
[:en] ISO 14882:2023, [cite Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2023，[cite 《程序设计语言——[=Cpp]》]

[item#iso14882:2020]
[:en] ISO 14882:2020, [cite Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2020，[cite 《程序设计语言——[=Cpp]》]

[item#iso14882:2017]
[:en] ISO 14882:2017, [cite Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2017，[cite 《程序设计语言——[=Cpp]》]

[item#iso14882:2014]
[:en] ISO 14882:2014, [cite Information Technology [=--] Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2014，[cite 《信息技术——程序设计语言——[=Cpp]》]

[item#iso14882:2011]
[:en] ISO 14882:2011, [cite Information Technology [=--] Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2011，[cite 《信息技术——程序设计语言——[=Cpp]》]

[item#iso14882:2003]
[:en] ISO 14882:2003, [cite Programming Languages [=--] [=Cpp]]
[:zh_CN] ISO 14882:2003，[cite 《程序设计语言——[=Cpp]》]

[item#iso18661-3]
[:en] ISO/IEC TS 18661-3:2015, [cite Information Technology [=--]
Programming languages, their environments, and system software interfaces [=--]
Floating-point extensions for C [=--] Part 3: Interchange and extended types]
[:zh_CN]
ISO/IEC TS 18661-3:2015，[cite 《信息技术——程序设计语言，其环境和系统软件接口——
C 的浮点扩展——第 3 部分：交换和扩展类型》]

[item#iana-charset]
[:en] IANA Character Sets Database.
[:zh_CN] IANA 字符集数据库。

[:en] Available from: [url https://www.iana.org/assignments/character-sets/], 2021-04-01
[:zh_CN] 获取地址：[url https://www.iana.org/assignments/character-sets]，于 2021-04-01

[item#iana-tz]
[:en] IANA Time Zone Database.
[:zh_CN] IANA 时区数据库。

[:en] Available from: [url https://www.iana.org/time-zones]
[:zh_CN] 获取地址：[url https://www.iana.org/time-zones]

[item#unicode-charmap]
[:en] Unicode Character Mapping Markup Language [online].
[:zh_CN] Unicode 字符映射标记语言【在线版】。

[:en] Edited by Mark Davis and Markus Scherer. Revision 5.0.1; 2017-05-31
[:zh_CN] Mark Davis 和 Markus Scherer 编著。版本 5.0.1；2017-05-31

[:en] Available from: [url https://www.unicode.org/reports/tr22/tr22-8.html]
[:zh_CN] 获取地址：[url https://www.unicode.org/reports/tr22/tr22-8.html]

[item#cpp-r]
[:en] Bjarne Stroustrup, [cite The [=Cpp] Programming Language, second edition], Chapter R.
[:zh_CN] Bjarne Stroustrup 著，[cite 《[=Cpp] 程序设计语言》，第二版]，章节 R。

[:en] Addison-Wesley Publishing Company, ISBN 0-201-53992-6, copyright [=Copy]1991 AT&T
[:zh_CN] Addison-Wesley 出版公司，ISBN 0-201-53992-6，版权所有 [=Copy]1991 AT&T

[item#kr]
[:en] Brian W. Kernighan and Dennis M. Ritchie, [cite The C Programming Language], Appendix A.
[:zh_CN] Brian W. Kernighan 和 Dennis M. Ritchie 著，[cite 《C 程序设计语言》]，附录 A。

[:en] Prentice-Hall, 1978, ISBN 0-13-110163-3, copyright [=Copy]1978 AT&T
[:zh_CN] Prentice-Hall，1978，ISBN 0-13-110163-3，版权所有 [=Copy]1978 AT&T

[item#cpp-lib]
[:en] P.J. Plauger, [cite The Draft Standard [=Cpp] Library].
[:zh_CN] P.J. Plauger 著，[cite 《[=Cpp] 标准程序库草案》]。

[:en] Prentice-Hall, ISBN 0-13-117003-1, copyright [=Copy]1995 P.J. Plauger
[:zh_CN] Prentice-Hall, ISBN 0-13-117003-1，版权所有 [=Copy]1995 P.J. Plauger

[item#linalg-stable]
[:en] J. Demmel, I. Dumitriu, and O. Holtz,
[cite Fast linear algebra is stable], Numerische Mathematik 108 (59--91), 2007.
[:zh_CN] J. Demmel，I. Dumitriu 和 O. Holtz 著，[cite 《Fast linear algebra is stable》]，
Numerische Mathematik 第 108 期（59 到 91 页），2007 年出版。

[item#blas1]
[:en] C.,L. Lawson, R.,J. Hanson, D. Kincaid, and F.,T. Krogh,
[cite Basic linear algebra subprograms for Fortran usage].
[:zh_CN] C.,L. Lawson，R.,J. Hanson，D. Kincaid，和 F.,T. Krogh 著，
[cite 《Basic linear algebra subprograms for Fortran usage》]。

[:en] ACM Trans. Math. Soft., Vol. 5, pp. 308--323, 1979.
[:zh_CN] ACM Trans. Math. Soft.，第 5 卷，第 308 到 323 页，1979 年出版。

[item#blas2]
[:en] Jack J. Dongarra, Jeremy Du Croz, Sven Hammarling, and Richard J. Hanson,
[cite An Extended Set of FORTRAN Basic Linear Algebra Subprograms].
[:zh_CN] Jack J. Dongarra，Jeremy Du Croz，Sven Hammarling，和 Richard J. Hanson 著，
[cite 《An Extended Set of FORTRAN Basic Linear Algebra Subprograms》]。

[:en] ACM Trans. Math. Soft., Vol. 14, No. 1, pp. 1--17, Mar. 1988.
[:zh_CN] ACM Trans. Math. Soft.，第 14 卷，第 1 号，第 1 到 17 页，1988 年三月出版。

[item#blas3]
[:en] Jack J. Dongarra, Jeremy Du Croz, Sven Hammarling, and Iain Duff,
[cite A Set of Level 3 Basic Linear Algebra Subprograms].
[:en] Jack J. Dongarra，Jeremy Du Croz，Sven Hammarling，和 Iain Duff 著，
[cite 《A Set of Level 3 Basic Linear Algebra Subprograms》]。

[:en] ACM Trans. Math. Soft., Vol. 16, No. 1, pp. 1--17, Mar. 1990.
[:zh_CN] ACM Trans. Math. Soft.，第 16 卷，第 1 号，第 1 到 17 页，1990 年三月出版。

[item#lapack]
[:en] E. Anderson, Z. Bai, C. Bischof, S. Blackford, J. Demmel, J. Dongarra,
J. Du Croz, A. Greenbaum, S. Hammarling, A. McKenney, and D. Sorensen
[=cite LAPACK Users[='] Guide, Third Edition].
[:zh_CN] E. Anderson，Z. Bai，C. Bischof，S. Blackford，J. Demmel，J. Dongarra，
J. Du Croz，A. Greenbaum，S. Hammarling，A. McKenney，和 D. Sorensen 著，
[=cite 《LAPACK 用户指南，第三版》]。

[:en] SIAM, Philadelphia, PA, USA, 1999.
[:zh_CN] SIAM, Philadelphia, PA, USA, 1999 年出版。

[item#blas-std]
[:en] L. Susan Blackford, Ames Demmel, Jack Dongarra, Iain Duff, Sven Hammarling,
Greg Henry, Michael Heroux, Linda Kaufman, Andrew Lumbsdaine, Antoine Petitet,
Roldan Pozo, Karin Remington, and R. Client Whaley
[cite An Updated Set of Basic Linear Algebra Subprograms (BLAS)].
[:zh_CN] L. Susan Blackford，Ames Demmel，Jack Dongarra，Iain Duff，
Sven Hammarling，Greg Henry，Michael Heroux，Linda Kaufman，Andrew Lumbsdaine，
Antoine Petitet，Roldan Pozo，Karin Remington，和 R. Client Whaley 著，
[cite 《An Updated Set of Basic Linear Algebra Subprograms (BLAS)》].

[:en] ACM Trans. Math. Soft., Vol. 28, Issue 2, 2002.
[:zh_CN] ACM Trans. Math. Soft.，第 28 卷，第 2 号，2002 年出版。

[item#flynn-taxonomy]
[:en] Michael J. Flynn, [cite Very High-speed Computing Systems].
[:zh_CN] Michael J. Flynn 著，[cite 《甚高速计算系统》]

[:en] Proceedings of the IEEE, Vol. 54, Issue 12, 1966.
[:zh_CN] IEEE 会议论文集，第 54 卷，第 12 期，1966 年。
[list:end]

[section:end]

[section:ref#xrefindex
	[:en] Cross-references
	[:zh_CN] 交叉引用
]

[:en] Each clause and subclause label is listed below along with the
corresponding clause or subclause number and page number, in alphabetical order
by label.
[:zh_CN] 以下列出了每个条款和子条款的标签，以及其对应的条款或子条款号码和页码，
以标签的字典序列出。

[include:index@ref]

[section:end]

[section:ref#xrefdelta
	[:en] Cross-references from ISO [=CppXVII]
	[:zh_CN] ISO [=CppXVII] 的交叉引用
]

[:en] All clause and subclause labels from ISO [=CppXVII] (ISO/IEC 14882:2017,
[cite Programming Languages [=--] [=Cpp]]) are present in this document, with
the exceptions described below.
[:zh_CN] ISO [=CppXVII]（ISO/IEC 14882:2017，[cite 《程序设计语言——[=Cpp]》]）中的
所有条款和子条款标签，除了以下所列出之外，都在本文档中出现。

[/% Removed features./]
[/ [%:ref@removed removed.label] /]

[%:ref res.on.expects[%structure.specifications]]
[%:ref@removed variant.traits]

[/% [facets.examples] was removed./]
[%:ref@removed facets.examples]

[/% P0588 replaced function prototype scope with function parameter scope./]
[%:ref basic.scope.proto[%basic.scope.param]]

[%:ref expr.pseudo[%expr.prim.id.dtor]]

[%:ref utility.from.chars[%charconv.from.chars]]
[%:ref utility.to.chars[%charconv.to.chars]]

[/% [fs.definitions] and its contents were integrated into the main text./]
[/% Note that ISO C++17 does not contain the [fs.def.*] subclauses./]
[%:ref fs.definitions
  [%fs.class.path]
  [%fs.conform.os]
  [%fs.general]
  [%fs.path.fmt.cvt]
  [%fs.path.generic]
  [%fs.race.behavior]]

[/% Single-item array subclauses were dissolved./]
[%:ref array.size[%array.members]]
[%:ref array.data[%array.members]]
[%:ref array.fill[%array.members]]
[%:ref array.swap[%array.members]]

[/% Contents of [util.smartptr] was integrated into the parent./]
[%:ref@removed util.smartptr]

[/% Avoid duplication with synopsis./]
[%:ref re.regex.const[%re.regex]]

[/% Single-item [insert.iterators] subclauses were dissolved./]
[%:ref back.insert.iter.cons[%back.insert.iter.ops]]
[%:ref back.insert.iter.op=[%back.insert.iter.ops]]
[%:ref back.insert.iter.op*[%back.insert.iter.ops]]
[%:ref back.insert.iter.op++[%back.insert.iter.ops]]

[%:ref front.insert.iter.cons[%front.insert.iter.ops]]
[%:ref front.insert.iter.op=[%front.insert.iter.ops]]
[%:ref front.insert.iter.op*[%front.insert.iter.ops]]
[%:ref front.insert.iter.op++[%front.insert.iter.ops]]

[%:ref insert.iter.cons[%insert.iter.ops]]
[%:ref insert.iter.op=[%insert.iter.ops]]
[%:ref insert.iter.op*[%insert.iter.ops]]
[%:ref insert.iter.op++[%insert.iter.ops]]

[/% Single-item [reverse.iterators] subclauses were dissolved./]
[%:ref reverse.iter.op=[%reverse.iter.cons]]

[%:ref reverse.iter.op==[%reverse.iter.cmp]]
[%:ref reverse.iter.op<[%reverse.iter.cmp]]
[%:ref reverse.iter.op!=[%reverse.iter.cmp]]
[%:ref reverse.iter.op>[%reverse.iter.cmp]]
[%:ref reverse.iter.op>=[%reverse.iter.cmp]]
[%:ref reverse.iter.op<=[%reverse.iter.cmp]]

[%:ref reverse.iter.op.star[%reverse.iter.elem]]
[%:ref reverse.iter.opref[%reverse.iter.elem]]
[%:ref reverse.iter.opindex[%reverse.iter.elem]]

[%:ref reverse.iter.op+[%reverse.iter.nav]]
[%:ref reverse.iter.op-[%reverse.iter.nav]]
[%:ref reverse.iter.op++[%reverse.iter.nav]]
[%:ref reverse.iter.op+=[%reverse.iter.nav]]
[%:ref reverse.iter.op--[%reverse.iter.nav]]
[%:ref reverse.iter.op-=[%reverse.iter.nav]]

[%:ref reverse.iter.opdiff[%reverse.iter.nonmember]]
[%:ref reverse.iter.opsum[%reverse.iter.nonmember]]
[%:ref reverse.iter.make[%reverse.iter.nonmember]]

[%:ref@removed reverse.iter.ops]

[/% Single-item [move.iterators] subclauses were dissolved./]
[%:ref move.iter.op=[%move.iter.cons]]
[%:ref move.iter.op.const[%move.iter.cons]]

[%:ref move.iter.op.star[%move.iter.elem]]
[%:ref move.iter.op.ref[%move.iter.elem]]
[%:ref move.iter.op.index[%move.iter.elem]]

[%:ref move.iter.op.+[%move.iter.nav]]
[%:ref move.iter.op.-[%move.iter.nav]]
[%:ref move.iter.op.incr[%move.iter.nav]]
[%:ref move.iter.op.+=[%move.iter.nav]]
[%:ref move.iter.op.decr[%move.iter.nav]]
[%:ref move.iter.op.-=[%move.iter.nav]]

[%:ref@removed move.iter.ops]

[/% Individual swap sections were removed./]
[%:ref@removed deque.special]
[%:ref@removed forwardlist.spec]
[%:ref@removed list.special]
[%:ref@removed vector.special]
[%:ref@removed map.special]
[%:ref@removed multimap.special]
[%:ref@removed set.special]
[%:ref@removed multiset.special]
[%:ref@removed unord.map.swap]
[%:ref@removed unord.multimap.swap]
[%:ref@removed unord.set.swap]
[%:ref@removed unord.multiset.swap]
[%:ref re.regex.nmswap[%re.regex.nonmemb]]

[/% Deprecated features were removed./]
[%:ref@removed depr.except.spec]
[%:ref@removed depr.cpp.headers]
[%:ref@removed depr.uncaught]
[%:ref@removed depr.func.adaptor.binding]
[%:ref@removed depr.weak.result_type]
[%:ref@removed depr.func.adaptor.typedefs]
[%:ref@removed depr.negators]
[%:ref@removed depr.default.allocator]
[%:ref@removed depr.storage.iterator]
[%:ref@removed depr.temporary.buffer]
[%:ref@removed depr.util.smartptr.shared.obs]

[/% Deprecated <cfoo> headers were removed for some <foo.h> headers/]
[%:ref@removed depr.ccomplex.syn]
[%:ref@removed depr.cstdalign.syn]
[%:ref@removed depr.cstdbool.syn]
[%:ref@removed depr.ctgmath.syn]

[%:ref class.copy[%class.mem]]

[/% Top-level clause merging caused some Annex A subclauses to vanish./]
[%:ref gram.decl[%gram.dcl]]
[%:ref gram.derived[%gram.class]]
[%:ref gram.special[%gram.class]]

[/% Top-level clause merging caused some Annex C subclauses to vanish, too./]
[%:ref diff.conv[%diff.expr]]
[%:ref diff.decl[%diff.dcl]]
[%:ref diff.special[%diff.class]]
[%:ref diff.cpp03.conv[%diff.cpp03.expr]]
[%:ref diff.cpp03.dcl.decl[%diff.cpp03.dcl.dcl]]
[%:ref diff.cpp03.special[%diff.cpp03.class]]
[%:ref diff.cpp11.dcl.decl[%diff.cpp11.dcl.dcl]]
[%:ref diff.cpp14.decl[%diff.cpp14.dcl.dcl]]
[%:ref diff.cpp14.special[%diff.cpp14.class]]

[/% P1148R0 consolidated some Clause 20 subclauses./]
[%:ref string.rfind[%string.find]]
[%:ref string.find.first.of[%string.find]]
[%:ref string.find.last.of[%string.find]]
[%:ref string.find.first.not.of[%string.find]]
[%:ref string.find.last.not.of[%string.find]]
[%:ref string.op+=[%string.op.append]]
[%:ref string.op+[%string.op.plus]]
[%:ref string.operator==[%string.cmp]]
[%:ref string.op!=[%string.cmp]]
[%:ref string.op<[%string.cmp]]
[%:ref string.op>[%string.cmp]]
[%:ref string.op<=[%string.cmp]]
[%:ref string.op>=[%string.cmp]]

[%:ref istream::sentry[%istream.sentry]]
[%:ref ostream::sentry[%ostream.sentry]]
[%:ref ios::failure[%ios.failure]]
[%:ref ios::fmtflags[%ios.fmtflags]]
[%:ref ios::iostate[%ios.iostate]]
[%:ref ios::openmode[%ios.openmode]]
[%:ref ios::seekdir[%ios.seekdir]]
[%:ref ios::Init[%ios.init]]

[%:ref@removed thread.decaycopy]

[%:ref iterator.container[%iterator.range]]

[/% Remove underscores in stable labels./]
[%:ref alg.all_of[%alg.all.of]]
[%:ref alg.any_of[%alg.any.of]]
[%:ref alg.is_permutation[%alg.is.permutation]]
[%:ref alg.none_of[%alg.none.of]]
[%:ref any.bad_any_cast[%any.bad.any.cast]]
[%:ref char.traits.specializations.char16_t[%char.traits.specializations.char16.t]]
[%:ref char.traits.specializations.char32_t[%char.traits.specializations.char32.t]]
[%:ref comparisons.equal_to[%comparisons.equal.to]]
[%:ref comparisons.greater_equal[%comparisons.greater.equal]]
[%:ref comparisons.less_equal[%comparisons.less.equal]]
[%:ref comparisons.not_equal_to[%comparisons.not.equal.to]]
[%:ref condition_variable.syn[%condition.variable.syn]]
[%:ref depr.static_constexpr[%depr.static.constexpr]]
[%:ref forward_list.syn[%forward.list.syn]]
[%:ref fs.class.directory_entry[%fs.class.directory.entry]]
[%:ref fs.class.directory_iterator[%fs.class.directory.iterator]]
[%:ref fs.class.file_status[%fs.class.file.status]]
[%:ref fs.class.filesystem_error[%fs.class.filesystem.error]]
[%:ref fs.enum.file_type[%fs.enum.file.type]]
[%:ref fs.file_status.cons[%fs.file.status.cons]]
[%:ref fs.file_status.mods[%fs.file.status.mods]]
[%:ref fs.file_status.obs[%fs.file.status.obs]]
[%:ref fs.filesystem_error.members[%fs.filesystem.error.members]]
[%:ref fs.op.copy_file[%fs.op.copy.file]]
[%:ref fs.op.copy_symlink[%fs.op.copy.symlink]]
[%:ref fs.op.create_directories[%fs.op.create.directories]]
[%:ref fs.op.create_directory[%fs.op.create.directory]]
[%:ref fs.op.create_dir_symlk[%fs.op.create.dir.symlk]]
[%:ref fs.op.create_hard_lk[%fs.op.create.hard.lk]]
[%:ref fs.op.create_symlink[%fs.op.create.symlink]]
[%:ref fs.op.current_path[%fs.op.current.path]]
[%:ref fs.op.file_size[%fs.op.file.size]]
[%:ref fs.op.hard_lk_ct[%fs.op.hard.lk.ct]]
[%:ref fs.op.is_block_file[%fs.op.is.block.file]]
[%:ref fs.op.is_char_file[%fs.op.is.char.file]]
[%:ref fs.op.is_directory[%fs.op.is.directory]]
[%:ref fs.op.is_empty[%fs.op.is.empty]]
[%:ref fs.op.is_fifo[%fs.op.is.fifo]]
[%:ref fs.op.is_other[%fs.op.is.other]]
[%:ref iosfs.op.is_regular_file[%fs.op.is.regular.file]]
[%:ref fs.op.is_socket[%fs.op.is.socket]]
[%:ref fs.op.is_symlink[%fs.op.is.symlink]]
[%:ref fs.op.last_write_time[%fs.op.last.write.time]]
[%:ref fs.op.read_symlink[%fs.op.read.symlink]]
[%:ref fs.op.remove_all[%fs.op.remove.all]]
[%:ref fs.op.resize_file[%fs.op.resize.file]]
[%:ref fs.op.status_known[%fs.op.status.known]]
[%:ref fs.op.symlink_status[%fs.op.symlink.status]]
[%:ref fs.op.temp_dir_path[%fs.op.temp.dir.path]]
[%:ref fs.op.weakly_canonical[%fs.op.weakly.canonical]]
[%:ref func.not_fn[%func.not.fn]]
[%:ref futures.future_error[%futures.future.error]]
[%:ref futures.shared_future[%futures.shared.future]]
[%:ref futures.unique_future[%futures.unique.future]]
[%:ref initializer_list.syn[%initializer.list.syn]]
[%:ref optional.comp_with_t[%optional.comp.with.t]]
[%:ref sf.cmath.assoc_laguerre[%sf.cmath.assoc.laguerre]]
[%:ref sf.cmath.assoc_legendre[%sf.cmath.assoc.legendre]]
[%:ref sf.cmath.comp_ellint_1[%sf.cmath.comp.ellint.1]]
[%:ref sf.cmath.comp_ellint_2[%sf.cmath.comp.ellint.2]]
[%:ref sf.cmath.comp_ellint_3[%sf.cmath.comp.ellint.3]]
[%:ref sf.cmath.cyl_bessel_i[%sf.cmath.cyl.bessel.i]]
[%:ref sf.cmath.cyl_bessel_j[%sf.cmath.cyl.bessel.j]]
[%:ref sf.cmath.cyl_bessel_k[%sf.cmath.cyl.bessel.k]]
[%:ref sf.cmath.cyl_neumann[%sf.cmath.cyl.neumann]]
[%:ref sf.cmath.ellint_1[%sf.cmath.ellint.1]]
[%:ref sf.cmath.ellint_2[%sf.cmath.ellint.2]]
[%:ref sf.cmath.ellint_3[%sf.cmath.ellint.3]]
[%:ref sf.cmath.riemann_zeta[%sf.cmath.riemann.zeta]]
[%:ref sf.cmath.sph_bessel[%sf.cmath.sph.bessel]]
[%:ref sf.cmath.sph_legendre[%sf.cmath.sph.legendre]]
[%:ref sf.cmath.sph_neumann[%sf.cmath.sph.neumann]]
[%:ref shared_mutex.syn[%shared.mutex.syn]]
[%:ref system_error.syn[%system.error.syn]]
[%:ref time.traits.duration_values[%time.traits.duration.values]]
[%:ref time.traits.is_fp[%time.traits.is.fp]]
[%:ref utility.as_const[%utility.as.const]]

[/% Dissolved subclause./]
[%:ref func.wrap.badcall.const[%func.wrap.badcall]]

[/% Shortened label/]
[%:ref language.support[%support]]

[/% Other fixes/]
[%:ref@removed intro.ack]

[%:ref conversions[%locale.convenience]]

[/% CD and DIS C++20/]
[%:ref@removed fs.norm.ref]
[%:ref definitions[%intro.defs]]
[%:ref@removed defns.arbitrary.stream]
[%:ref@removed defns.comparison]
[%:ref@removed defns.default.behavior.func]
[%:ref@removed defns.iostream.templates]
[%:ref@removed defns.repositional.stream]

[/% Fix solitary subclauses/]
[%:ref unreachable.sentinels[%unreachable.sentinel]]
[%:ref default.sentinels[%default.sentinel]]
[%:ref depr.iterator.primitives[%depr.iterator]]
[%:ref depr.iterator.basic[%depr.iterator]]

[%:ref re.def[%intro.defs]]
[%:ref basic.scope.declarative[%basic.scope.scope]]
[%:ref basic.funscope[%stmt.label]]
[%:ref basic.scope.hiding[%basic.lookup]]
[%:ref basic.lookup.classref[%basic.lookup.qual]]
[%:ref namespace.memdef[%namespace.def]]
[%:ref class.this[%expr.prim.this]]
[%:ref class.mfct.non-static.general[%class.mfct.non.static]]
[%:ref class.nested.type[%diff.basic]]
[%:ref over.load[%basic.scope.scope]]
[%:ref over.dcl[%basic.link]]
[%:ref temp.nondep[%temp.res]]
[%:ref temp.inject[%temp.friend]]

[/% P2096R2 Generalized wording for partial specializations/]
[%:ref temp.class.spec[%temp.spec.partial]]
[%:ref temp.class.spec.general[%temp.spec.partial.general]]
[%:ref temp.class.spec.match[%temp.spec.partial.match]]
[%:ref temp.class.order[%temp.spec.partial.order]]
[%:ref temp.class.spec.mfunc[%temp.spec.partial.member]]

[%:ref forwardlist[%forward.list]]
[%:ref forwardlist.overview[%forward.list.overview]]
[%:ref forwardlist.cons[%forward.list.cons]]
[%:ref forwardlist.iter[%forward.list.iter]]
[%:ref forwardlist.access[%forward.list.access]]
[%:ref forwardlist.modifiers[%forward.list.modifiers]]
[%:ref forwardlist.ops[%forward.list.ops]]

[/% P2186R2 Removing Garbage Collection Support/]
[%:ref@removed basic.stc.dynamic.safety]
[%:ref@removed util.dynamic.safety]
[%:ref@removed res.on.pointer.storage]

[/% LWG2818 "::std::" everywhere rule needs tweaking/]
[%:ref@removed fs.req.namespace]
[%:ref fs.req.general[%fs.req]]

[/% P2325R3 Views should not be required to be default constructible/]
[/% P2494R2 Relaxing range adaptors to allow for move only types/]
[/% range.semi.wrap => range.copy.wrap => range.move.wrap/]
[%:ref range.semi.wrap[%range.move.wrap]]

[/% P2210R2 Superior String Splitting/]
[%:ref range.split.outer[%range.lazy.split.outer]]
[%:ref range.split.outer.value[%range.lazy.split.outer.value]]
[%:ref range.split.inner[%range.lazy.split.inner]]

[/% P2128R6 Multidimensional subscript operator/]
[%:ref@removed depr.comma.subscript]

[/% P2340R1 Clarifying the status of the "C headers"/]
[%:ref depr.c.headers[%support.c.headers]]
[%:ref depr.c.headers.general[%support.c.headers.general]]
[%:ref depr.c.headers.other[%support.c.headers.other]]
[%:ref depr.complex.h.syn[%complex.h.syn]]
[%:ref depr.iso646.h.syn[%iso646.h.syn]]
[%:ref depr.stdalign.h.syn[%stdalign.h.syn]]
[%:ref depr.stdbool.h.syn[%stdbool.h.syn]]
[%:ref depr.tgmath.h.syn[%tgmath.h.syn]]

[%:ref istringstream.assign[%istringstream.swap]]
[%:ref ostringstream.assign[%ostringstream.swap]]
[%:ref stringstream.assign[%stringstream.swap]]
[%:ref ifstream.assign[%ifstream.swap]]
[%:ref ofstream.assign[%ofstream.swap]]
[%:ref fstream.assign[%fstream.swap]]

[/% P2387R3 Pipe support for user-defined range adaptors/]
[%:ref func.bind.front[%func.bind.partial]]

[%:ref class.mfct.non-static[%class.mfct.non.static]]
[%:ref defns.direct-non-list-init[%dcl.init.list]]
[%:ref defns.expression-equivalent[%defns.expression.equivalent]]

[/% P1467R9 Extended floating-point types and standard names/]
[%:ref complex.special[%complex.members]]
[%:ref cstdint[%support.arith.types]]
[%:ref@removed cstdint.general]

[/% LWG3659 Consider ATOMIC_FLAG_INIT undeprecation/]
[%:ref@removed depr.atomics.flag]

[/% LWG3818 Exposition-only concepts are not described in library intro/]
[%:ref expos.only.func[%expos.only.entity]]
[%:ref@removed expos.only.types]

[/% P2614R2 Deprecate numeric_limits::has_denorm/]
[%:ref denorm.style[%depr.numeric.limits.has.denorm]]
[%:ref@removed fp.style]

[/% CD and DIS C++2023/]
[%:ref defns.multibyte[%multibyte.strings]]

[/% P2864R2 Remove deprecated arithmetic conversions/]
[%:ref@removed depr.arith.conv.enum]

[/% P2866R5 Remove deprecated array comparisons/]
[%:ref@removed depr.array.comp]

[/% P2871R3 Remove deprecated <codecvt> header/]
[%:ref@removed depr.codecvt.syn]
[%:ref@removed depr.locale.stdcvt]
[%:ref@removed depr.locale.stdcvt.general]
[%:ref@removed depr.locale.stdcvt.req]

[/% P2870R3 Remove deprecated typedef from `std::allocator`/]
[%:ref@removed depr.default.allocator]

[/% P2874R2 Mandating Annex D/]
[%:ref@removed depr.res.on.required]

[/% P2870R3 Remove `basic_string::reserve()` with no parameters/]
[%:ref@removed depr.string.capacity]

[/% P2867R2 Remove deprecated strstreams/]
[%:ref@removed depr.istrstream]
[%:ref@removed depr.istrstream.cons]
[%:ref@removed depr.istrstream.general]
[%:ref@removed depr.istrstream.members]
[%:ref@removed depr.ostrstream]
[%:ref@removed depr.ostrstream.cons]
[%:ref@removed depr.ostrstream.general]
[%:ref@removed depr.ostrstream.members]
[%:ref@removed depr.str.strstreams]
[%:ref@removed depr.strstream]
[%:ref@removed depr.strstream.cons]
[%:ref@removed depr.strstream.dest]
[%:ref@removed depr.strstream.general]
[%:ref@removed depr.strstream.oper]
[%:ref@removed depr.strstream.syn]
[%:ref@removed depr.strstreambuf]
[%:ref@removed depr.strstreambuf.cons]
[%:ref@removed depr.strstreambuf.general]
[%:ref@removed depr.strstreambuf.members]
[%:ref@removed depr.strstreambuf.virtuals]

[/% P2869R4 Remove deprecated shared_ptr atomic access/]
[%:ref@removed depr.util.smartptr.shared.atomic]

[/% P2872R3 Remove wstring_convert/]
[%:ref@removed depr.conversions]
[%:ref@removed depr.conversions.buffer]
[%:ref@removed depr.conversions.general]
[%:ref@removed depr.conversions.string]

[/% Clause restructuring/]
[%:ref@removd type.index.overview]
[%:ref@removd type.index.members]
[%:ref@removd type.index.hash]

[/% CWG 2843 removed [uaxid.def.rfmt]/]
[%:ref@removd uaxid.def.rfmt]

[/% Renamed sections./]
[/ [%:ref old.label[%new.label]] /]
[/ [%:ref old.label[%new.label.1][%new.label.2]] /]
[/ [%:ref old.label[%new.label.1][%new.label.2}][%new.label.3]] /]
[/ [%:ref old.label[%new place (eg [#:tab#blah])]] /]

[/% https://github.com/cplusplus/draft/pull/6255/]
[%:ref container.gen.reqmts[%container.requirements.general]]

[/% P2875R4 Undeprecate polymorphic_allocator::destroy/]
[%:ref depr.mem.poly.allocator.mem[%mem.poly.allocator.mem]]

[/% https://github.com/cplusplus/draft/pull/6653/]
[%:ref mismatch[%alg.mismatch]]

[/% P2300R10 std::execution/]
[%:ref stopsource.nonmembers[%stopsource]]
[%:ref stoptoken.cons[%stopsource]]
[%:ref stoptoken.nonmembers[%stopsource]]

[/% https://github.com/cplusplus/draft/pull/7276/]
[%:ref except.uncaught[%except.throw]]

[/% https://github.com/cplusplus/draft/pull/7345/]
[%:ref basic.stc.inherit[%basic.stc.general]]

[/% https://github.com/cplusplus/draft/pull/7524/]
[%:ref expr.ass[%expr.assign]]
[%:ref over.ass[%over.assign]]

[/% CWG 2024-11-20 in Wroclaw; https://github.com/cplusplus/draft/pull/7485/]
[%:ref stmt.stmt[%stmt]]
[%:ref dcl.dcl[%dcl]]

[/% P1494R5 added more to this section and expanded its scope/]
[%:ref utility.unreachable[%utility.undefined]]

[/% Deprecated features./]
[/ [%:ref@depr old.label] (if moved to depr.old.label, otherwise use [%:ref]) /]

[%:ref@removd util.smartptr.shared.atomic]
[%:ref@removd res.on.required]
[%:ref@depr fs.path.factory]
[%:ref operators[%depr.relops]]

[/% P3475R2 Defang and deprecate memory_order::consume/]
[%:ref@removd dcl.attr.depend]

[/% P3348R3 C++26 should refer to C23 not C17/]
[%:ref@removd diff.header.assert.h]
[%:ref@removd diff.header.stdalign.h]
[%:ref@removd diff.header.stdbool.h]

[include:index@xrefdelta]

[section:end]

[section:ref#generalindex
	[:en] Index
	[:zh_CN] 索引
]

[:en] Constructions whose name appears in [*monospaced italics] are for
exposition only.
[:zh_CN] 以 [*等宽斜体] 格式出现的语言构造的名字仅用于阐释目的。

[include:index@general@defn]

[section:end]

[section:ref#grammarindex
	[:en] Index of grammar productions
	[:zh_CN] 文法产生式索引
]

[:en] The first bold page number for each entry is the page in the general text
where the grammar production is defined.
[:zh_CN] 每个条目的第一个粗体页码是普通文本中定义该文法产生式的页码。

[:en] The second bold page number is the corresponding page in the Grammar
summary ([#gram]).
[:zh_CN] 第二个粗体页码是在“文法总结”（[#gram]）中的相应页码。

[:en] Other page numbers refer to pages where the grammar production is
mentioned in the general text.
[:zh_CN] 其他页码则代表在普通文本中提及了这个文法产生式的页面。

[include:index@grammar]

[section:end]

[section:ref#headerindex
	[:en] Index of library headers
	[:zh_CN] 程序库头文件索引
]

[:en] The bold page number for each entry refers to the page where the synopsis
of the header is shown.
[:zh_CN] 每个条目的粗体页码为给出该头文件的纲要的页码。

[include:index@header]

[section:end]

[section:ref#libraryindex
	[:en] Index of library names
	[:zh_CN] 程序库名字索引
]

[:en] Constructions whose name appears in [*italics] are for exposition only.
[:zh_CN] 以 [*斜体] 格式出现的语言构造的名字仅用于阐释目的。

[include:index@library]

[section:end]

[section:ref#conceptindex
	[:en] Index of library concepts
	[:zh_CN] 程序库概念索引
]

[:en] The bold page number for each entry is the page where the concept is
defined.
[:zh_CN] 每个条目的粗体页码为定义了该概念的页码。

[:en] Other page numbers refer to pages where the concept is mentioned in the
general text.
[:zh_CN] 其他页码则代表在普通文本中提及了这个概念的页面。

[:en] Constructions whose name appears in [*italics] are for exposition only.
[:zh_CN] 以 [*斜体] 格式出现的语言构造的名字仅用于阐释目的。

[include:index@impldef]

[section:end]

[section:ref#impldefindex
	[:en] Index of implementation-defined behavior
	[:zh_CN] 由实现定义的行为索引
]

[:en] The entries in this index are rough descriptions; exact specifications
are at the indicated page in the general text.
[:zh_CN] 本索引中的各个条目都是粗略的描述；常规文本的指定页码中有其确切的规范。

[include:index@impldef]

[section:end]
