[section#ptr.launder
    [:en] Pointer optimization barrier
    [:zh_CN] 指针优化屏障
]

[%@lib launder]
[codeblock:declaration]
template<class T> constexpr T* launder(T* p) noexcept;
[codeblock:end]

[div:description]
[para:mandates]
[:en] [`!is_function_v<T> && !is_void_v<T>] is [`true].
[:zh_CN] [`!is_function_v<T> && !is_void_v<T>] 为 [`true]。

[para:expects]
[:en] [`p] represents the address [^A] of a byte in memory.
[:zh_CN] [`p] 表示内存中某个字节的地址 [^A]。

[:en] An object [^X] that is within its lifetime ([#basic.life]) and whose type
is similar ([#conv.qual]) to [`T] is located at the address [^A].
[:zh_CN] 某个处于生存期（[#basic.life]）之内的，并具有与 [`T] 相似的类型（[#conv.qual]）
的对象 [^X]，位于地址 [^A]。

[:en] All bytes of storage that would be reachable through ([#basic.compound])
the result are reachable through [`p].
[:zh_CN] 能够通过其结果可达（[#basic.compound]）的存储字节，都应当能够通过 [`p] 可达。

[para:returns]
[:en] A value of type [`T*] that points to [^X].
[:zh_CN] 一个 [`T*] 类型的指向 [^X] 的值。

[para:remarks]
[:en] An invocation of this function may be used in a core constant expression
if and only if the (converted) value of its argument may be used in place of the
function invocation.
[:zh_CN] 当且仅当这个函数的某次调用的实参的（经转换的）值可以在函数调用所在的位置
使用时，该调用可以用在核心常量表达式中。

[para]
[begin:note]
[:en] If a new object is created in storage occupied by an existing object of
the same type, a pointer to the original object can be used to refer to the new
object unless its complete object is a const object or it is a base class
subobject; in the latter cases, this function can be used to obtain a usable
pointer to the new object.
[:zh_CN] 如果在相同类型的现存对象所占据的存储中创建了一个新对象，则指向原对象的指针
可以被用于指代新对象，但其完整对象不能是 [`const] 对象或者是基类子对象；后一种情况下，
可以使用本函数来获得新对象的可用指针。

[:en] See [#basic.life].
[:zh_CN] 参见 [#basic.life]。
[end:note]

[para]
[begin:example]
[codeblock]
struct X { int n; };
const X *p = new const X{3};
const int a = p->n;
new (const_cast<X*>(p)) const X{5}; // [:en] [`p] does not point to new object ([#basic.life]) because its type is [`:key const] \
                                    [:zh_CN] [`p] 并未指向新对象（[#basic.life]），因为其类型为 [`:key const]
const int b = p->n;                 // [:en] undefined behavior [:zh_CN] 未定义行为
const int c = std::launder(p)->n;   // OK
[codeblock:end]
[end:example]
[div:end]
