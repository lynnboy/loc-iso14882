[section#cstdint.syn
    [:en] Header [`<cstdint>] synopsis
    [:zh_CN] 头文件 [`<cstdint>] 纲要
]

[%@hdr@def cstdint]

[%@lib int8_t]
[%@lib int16_t]
[%@lib int32_t]
[%@lib int64_t]
[%@lib int_fast8_t]
[%@lib int_fast16_t]
[%@lib int_fast32_t]
[%@lib int_fast64_t]
[%@lib int_least8_t]
[%@lib int_least16_t]
[%@lib int_least32_t]
[%@lib int_least64_t]
[%@lib intmax_t]
[%@lib intptr_t]
[%@lib uint8_t]
[%@lib uint16_t]
[%@lib uint32_t]
[%@lib uint64_t]
[%@lib uint_fast8_t]
[%@lib uint_fast16_t]
[%@lib uint_fast32_t]
[%@lib uint_fast64_t]
[%@lib uint_least8_t]
[%@lib uint_least16_t]
[%@lib uint_least32_t]
[%@lib uint_least64_t]
[%@lib uintmax_t]
[%@lib uintptr_t]

[codeblock:synopsis]
// [:en] all freestanding \
[:zh_CN] 全自立式
namespace std {
  using int8_t         = [[redoc("[*signed integer type]", "_")]]_;   // [:en] optional \
                                                                      [:zh_CN] 可选的
  using int16_t        = [[redoc("[*signed integer type]", "_")]]_;   // [:en] optional \
                                                                      [:zh_CN] 可选的
  using int32_t        = [[redoc("[*signed integer type]", "_")]]_;   // [:en] optional \
                                                                      [:zh_CN] 可选的
  using int64_t        = [[redoc("[*signed integer type]", "_")]]_;   // [:en] optional \
                                                                      [:zh_CN] 可选的
  using intN[[redoc("^<1c")]]_t         = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using int_fast8_t    = [[redoc("[*signed integer type]")]];
  using int_fast16_t   = [[redoc("[*signed integer type]")]];
  using int_fast32_t   = [[redoc("[*signed integer type]")]];
  using int_fast64_t   = [[redoc("[*signed integer type]")]];
  using int_fastN[[redoc("^<1c")]]_t    = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using int_least8_t   = [[redoc("[*signed integer type]")]];
  using int_least16_t  = [[redoc("[*signed integer type]")]];
  using int_least32_t  = [[redoc("[*signed integer type]")]];
  using int_least64_t  = [[redoc("[*signed integer type]")]];
  using int_leastN[[redoc("^<1c")]]_t   = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using intmax_t       = [[redoc("[*signed integer type]")]];
  using intptr_t       = [[redoc("[*signed integer type]", "_")]]_;   // [:en] optional \
                                                                      [:zh_CN] 可选的

  using uint8_t        = [[redoc("[*unsigned integer type]", "_")]]_; // [:en] optional \
                                                                      [:zh_CN] 可选的
  using uint16_t       = [[redoc("[*unsigned integer type]", "_")]]_; // [:en] optional \
                                                                      [:zh_CN] 可选的
  using uint32_t       = [[redoc("[*unsigned integer type]", "_")]]_; // [:en] optional \
                                                                      [:zh_CN] 可选的
  using uint64_t       = [[redoc("[*unsigned integer type]", "_")]]_; // [:en] optional \
                                                                      [:zh_CN] 可选的
  using uint[[redoc("^<1c")]]_t         = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using uint_fast8_t   = [[redoc("[*unsigned integer type]")]];
  using uint_fast16_t  = [[redoc("[*unsigned integer type]")]];
  using uint_fast32_t  = [[redoc("[*unsigned integer type]")]];
  using uint_fast64_t  = [[redoc("[*unsigned integer type]")]];
  using uint_fastN[[redoc("^<1c")]]_t   = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using uint_least8_t  = [[redoc("[*unsigned integer type]")]];
  using uint_least16_t = [[redoc("[*unsigned integer type]")]];
  using uint_least32_t = [[redoc("[*unsigned integer type]")]];
  using uint_least64_t = [[redoc("[*unsigned integer type]")]];
  using uint_leastN[[redoc("^<1c")]]_t  = [[redoc("[=seebelow]")]];             // [:en] optional \
                                                                                [:zh_CN] 可选的

  using uintmax_t      = [[redoc("[*unsigned integer type]")]];
  using uintptr_t      = [[redoc("[*unsigned integer type]", "_")]]_; // [:en] optional \
                                                                      [:zh_CN] 可选的
}

#define INTN[[redoc("^<1c")]]_MIN         [[redoc("[=seebelow]")]]
#define INTN[[redoc("^<1c")]]_MAX         [[redoc("[=seebelow]")]]
#define UINTN[[redoc("^<1c")]]_MAX        [[redoc("[=seebelow]")]]

#define INT_FASTN[[redoc("^<1c")]]_MIN    [[redoc("[=seebelow]")]]
#define INT_FASTN[[redoc("^<1c")]]_MAX    [[redoc("[=seebelow]")]]
#define UINT_FASTN[[redoc("^<1c")]]_MAX   [[redoc("[=seebelow]")]]

#define INT_LEASTN[[redoc("^<1c")]]_MIN   [[redoc("[=seebelow]")]]
#define INT_LEASTN[[redoc("^<1c")]]_MAX   [[redoc("[=seebelow]")]]
#define UINT_LEASTN[[redoc("^<1c")]]_MAX  [[redoc("[=seebelow]")]]

#define INTMAX_MIN       [[redoc("[=seebelow]")]]
#define INTMAX_MAX       [[redoc("[=seebelow]")]]
#define UINTMAX_MAX      [[redoc("[=seebelow]")]]

#define INTPTR_MIN       [[redoc("[=seebelow]")]]              // [:en] optional \
                                                               [:zh_CN] 可选的
#define INTPTR_MAX       [[redoc("[=seebelow]")]]              // [:en] optional \
                                                               [:zh_CN] 可选的
#define UINTPTR_MAX      [[redoc("[=seebelow]")]]              // [:en] optional \
                                                               [:zh_CN] 可选的

#define PTRDIFF_MIN      [[redoc("[=seebelow]")]]
#define PTRDIFF_MAX      [[redoc("[=seebelow]")]]
#define SIZE_MAX         [[redoc("[=seebelow]")]]

#define SIG_ATOMIC_MIN   [[redoc("[=seebelow]")]]
#define SIG_ATOMIC_MAX   [[redoc("[=seebelow]")]]

#define WCHAR_MIN        [[redoc("[=seebelow]")]]
#define WCHAR_MAX        [[redoc("[=seebelow]")]]

#define WINT_MIN         [[redoc("[=seebelow]")]]
#define WINT_MAX         [[redoc("[=seebelow]")]]

#define INTN[[redoc("^<1c")]]_C(value)    [[redoc("[=seebelow]")]]
#define UINTN[[redoc("^<1c")]]_C(value)   [[redoc("[=seebelow]")]]
#define INTMAX_C(value)  [[redoc("[=seebelow]")]]
#define UINTMAX_C(value) [[redoc("[=seebelow]")]]
[codeblock:end]

[para]
[:en]
The header defines all types and macros the same as the C standard library
header [?libheader stdint.h].
[:zh_CN]
该头文件定义与 C 标准库头文件 [?libheader stdint.h] 的所有类型和宏相同。

[para:xref@c] 7.20

[para]
[:en]
All types that use the placeholder [^N] are optional when [^N] is not [`8], [`16],
[`32], or [`64].
[:zh_CN]
当 [^N] 不是 [`8]，[`16]，[`32]，或 [`64] 时，所有使用占位符 [^N] 的类型都是可选
的。

[:en]
The exact-width types [`int[^N]_t] and [`uint[^N]_t] for [^N] = [`8], [`16],
[`32], and [`64] are also optional; however, if an implementation defines
integer types with the corresponding width and no padding bits, it defines the
corresponding [~typedef-name]s.
[:zh_CN]
精确宽度类型 [`int[^N]_t] 和 [`uint[^N]_t] 对于 [^N] = [`8]、[`16]、[`32] 和 [`64] 
时也是可选的；不过，如果实现定义了具有对应宽度且没有填充位的整数类型，则它会定义
对应的 [~typedef-名]。

[:en]
Each of the macros listed in this subclause is defined if and only if the
implementation defines the corresponding [~typedef-name].
[:zh_CN]
本子条款中列出的各个宏，当且仅当实现定义了对应的 [~typedef-名]时被定义。

[begin:note]
[:en]
The macros [`INT[^N]_C] and [`UINT[^N]_C] correspond to the [~typedef-name]s
[`int_least[^N]_t] and [`uint_least[^N]_t], respectively.
[:zh_CN]
宏 [`INT[^N]_C] 和 [`UINT[^N]_C] 分别对应于 [~typedef-名] [`int_least[^N]_t] 和
[`uint_least[^N]_t]。
[end:note]
