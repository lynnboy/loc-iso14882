[section#cstdint.syn
    [:en] Header [`<cstdint>] synopsis
    [:zh_CN] 头文件 [`<cstdint>] 纲要
]

[%@hdr@def cstdint]

[%@lib int8_t]
[%@lib int16_t]
[%@lib int32_t]
[%@lib int64_t]
[%@lib int_fast8_t]
[%@lib int_fast16_t]
[%@lib int_fast32_t]
[%@lib int_fast64_t]
[%@lib int_least8_t]
[%@lib int_least16_t]
[%@lib int_least32_t]
[%@lib int_least64_t]
[%@lib intmax_t]
[%@lib intptr_t]
[%@lib uint8_t]
[%@lib uint16_t]
[%@lib uint32_t]
[%@lib uint64_t]
[%@lib uint_fast8_t]
[%@lib uint_fast16_t]
[%@lib uint_fast32_t]
[%@lib uint_fast64_t]
[%@lib uint_least8_t]
[%@lib uint_least16_t]
[%@lib uint_least32_t]
[%@lib uint_least64_t]
[%@lib uintmax_t]
[%@lib uintptr_t]

[codeblock:synopsis [!:mark [$:var signed integer type] [$:var unsigned integer type] ] ]
namespace std {
  using int8_t         = [*signed integer type];  // [:en] optional \
                                                     [:zh_CN] 可选的
  using int16_t        = [*signed integer type];  // [:en] optional \
                                                     [:zh_CN] 可选的
  using int32_t        = [*signed integer type];  // [:en] optional \
                                                     [:zh_CN] 可选的
  using int64_t        = [*signed integer type];  // [:en] optional \
                                                     [:zh_CN] 可选的

  using int_fast8_t    = [*signed integer type];
  using int_fast16_t   = [*signed integer type];
  using int_fast32_t   = [*signed integer type];
  using int_fast64_t   = [*signed integer type];

  using int_least8_t   = [*signed integer type];
  using int_least16_t  = [*signed integer type];
  using int_least32_t  = [*signed integer type];
  using int_least64_t  = [*signed integer type];

  using intmax_t       = [*signed integer type];
  using intptr_t       = [*signed integer type];   // [:en] optional \
                                                      [:zh_CN] 可选的

  using uint8_t        = [*unsigned integer type]; // [:en] optional \
                                                      [:zh_CN] 可选的
  using uint16_t       = [*unsigned integer type]; // [:en] optional \
                                                      [:zh_CN] 可选的
  using uint32_t       = [*unsigned integer type]; // [:en] optional \
                                                      [:zh_CN] 可选的
  using uint64_t       = [*unsigned integer type]; // [:en] optional \
                                                      [:zh_CN] 可选的

  using uint_fast8_t   = [*unsigned integer type];
  using uint_fast16_t  = [*unsigned integer type];
  using uint_fast32_t  = [*unsigned integer type];
  using uint_fast64_t  = [*unsigned integer type];

  using uint_least8_t  = [*unsigned integer type];
  using uint_least16_t = [*unsigned integer type];
  using uint_least32_t = [*unsigned integer type];
  using uint_least64_t = [*unsigned integer type];

  using uintmax_t      = [*unsigned integer type];
  using uintptr_t      = [*unsigned integer type]; // [:en] optional \
                                                      [:zh_CN] 可选的
}
[codeblock:end]

[para]
[:en]
The header also defines numerous macros of the form:
[:zh_CN]
该头文件还定义了如下形式的宏：

[codeblock:synopsis]
  INT_[FAST LEAST]{8 16 32 64}_MIN
  [U]INT_[FAST LEAST]{8 16 32 64}_MAX
  INT{MAX PTR}_MIN
  [U]INT{MAX PTR}_MAX
  {PTRDIFF SIG_ATOMIC WCHAR WINT}{_MAX _MIN}
  SIZE_MAX
[codeblock:end]

[:en@~]
plus function macros of the form:
[:zh_CN·~]
以及如下形式的函数宏：

[codeblock:synopsis]
  [U]INT{8 16 32 64 MAX}_C
[codeblock:end]

[para]
[:en]
The header defines all types and macros the same as the C standard library
header [?libheader stdint.h].
[:zh_CN]
该头文件定义与 C 标准库头文件 [?libheader stdint.h] 的所有类型和宏相同。

[para:xref@c] 7.20
