[section#coroutine.handle.con
    [:en] Construct/reset
    [:zh_CN] 构造/重置
]

[%@library coroutine_handle[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
constexpr coroutine_handle() noexcept;
constexpr coroutine_handle(nullptr_t) noexcept;
[codeblock:end]

[div:description]
[para:ensures]
[:en] [`address() == nullptr].
[:zh_CN] [`address() == nullptr]。
[div:end]

[%@library coroutine_handle[!from_promise]]
[%@library from_promise[!coroutine_handle]]
[codeblock:declaration]
static coroutine_handle from_promise(Promise& p);
[codeblock:end]

[div:description]
[para:requires]
[:en] [`p] is a reference to a promise object of a coroutine.
[:zh_CN] [`p] 是到某个协程的承诺对象的引用。

[para:returns]
[:en] A coroutine handle [`h] referring to the coroutine.
[:zh_CN] 指代该协程的协程句柄 [`h]。

[para:ensures]
[:en] [`addressof(h.promise()) == addressof(p)].
[:zh_CN] [`addressof(h.promise()) == addressof(p)]。
[div:end]

[%@library coroutine_handle[!operator=]]
[%@library operator=[!coroutine_handle]]
[codeblock:declaration]
coroutine_handle& operator=(nullptr_t) noexcept;
[codeblock:end]

[div:description]
[para:ensures]
[:en] [`address() == nullptr].
[:zh_CN] [`address() == nullptr]。

[para:returns]
[:en] [`this].
[:zh_CN] [`this]。
[div:end]
