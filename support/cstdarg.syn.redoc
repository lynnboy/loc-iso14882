[section#cstdarg.syn
    [:en] Header [`<cstdarg>] synopsis
    [:zh_CN] 头文件 [`<cstdarg>] 纲要
]

[%@hdr@def cstdarg]
[%@lib va_list]
[%@lib va_start]
[%@lib va_copy]
[%@lib va_end]
[%@lib va_arg]
[codeblock:synopsis]
// [:en] all freestanding \
[:zh_CN] 全自立式
namespace std {
  using va_list = [[redoc("[=seebelow]")]];
}

#define va_arg(V, P) [[redoc("[=seebelow]")]]
#define va_copy(VDST, VSRC) [[redoc("[=seebelow]")]]
#define va_end(V) [[redoc("[=seebelow]")]]
#define va_start(V, P) [[redoc("[=seebelow]")]]
[codeblock:end]

[para]
[:en] The contents of the header [?libheader@def cstdarg] are the same as the C
standard library header [?libheader stdarg.h], with the following changes:
[:zh_CN] 头文件 [?libheader@def cstdarg] 的内容和 C 标准程序库头文件
[?libheader stdarg.h] 相同，但有以下改变：

[list]
[item]
[:en] In lieu of the default argument promotions specified [=IsoC] 6.5.2.2,
the definition in [#expr.call] applies.
[:zh_CN] 适用 [#expr.call] 中的定义，以取代 [=IsoC] 6.5.2.2 对默认实参提升的规定。

[item]
[:en] The restrictions that C places on the second parameter to the
[%@lib va_start] [`va_start] macro in header [?libheader stdarg.h] are
different in this document.
[:zh_CN] C 施加于头文件 [?libheader stdarg.h] 中的宏 [%@lib va_start] [`va_start]
的第二个形参上的限制与本文档不同。

[:en] The parameter [`parmN] is the rightmost parameter in the variable
parameter list of the function definition (the one just before the [`...]).[#:fn]
[:zh_CN] 形参 [`parmN] 是函数定义式的可变形参列表中最右边的形参（就是 [`...] 之前的形参）[#:fn]。

[note:foot]
[:en] Note that [`va_start] is required to work as specified even if unary
[`operator&] is overloaded for the type of [`parmN].
[:zh_CN] 注意，即使对 [`parmN] 的类型重载了一元 [`operator&]，仍要求 [`va_start]
按照规定工作。
[note:end]

[:en] If the parameter [`parmN] is a pack expansion ([#temp.variadic]) or an
entity resulting from a lambda capture ([#expr.prim.lambda]), the program is
ill-formed, no diagnostic required.
[:zh_CN] 若形参 [`parmN] 是包组展开式（[#temp.variadic]），或者是由 lambda 俘获
（[#expr.prim.lambda]）所产生的实体，则程序非良构，无须诊断。

[:en] If the parameter [`parmN] is of a reference type, or of a type that is not
compatible with the type that results when passing an argument for which there
is no parameter, the behavior is undefined.
[:zh_CN] 若形参 [`parmN] 为引用类型，或者其类型与当没有形参时传递实参所产生的类型
不兼容，则其行为是未定义的。
[list:end]

[para:xref@c] 7.16.1.1
