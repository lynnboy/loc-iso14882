[section#exception.syn
    [:en] Header [`<exception>] synopsis
    [:zh_CN] 头文件 [`<exception>] 纲要
[:][%[`<exception>][@exception]] [%@library <exception>[@exception]]
]

[codeblock:synopsis [!:mark Unspec] ]
namespace std {
  class exception;
  class bad_exception;
  class nested_exception;

  using terminate_handler = void (*)();
  terminate_handler get_terminate() noexcept;
  terminate_handler set_terminate(terminate_handler f) noexcept;
  [[noreturn]] void terminate() noexcept;

  int uncaught_exceptions() noexcept;

  using exception_ptr = [=Unspec];

  exception_ptr current_exception() noexcept;
  [[noreturn]] void rethrow_exception(exception_ptr p);
  template<class E> exception_ptr make_exception_ptr(E e) noexcept;

  template <class T> [[noreturn]] void throw_with_nested(T&& t);
  template <class E> void rethrow_if_nested(const E& e);
}
[codeblock:end]

[para:xref]
[:en] [#except.special].
[:zh_CN] [#except.special]。
