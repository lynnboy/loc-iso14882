[section#cmp.object
    [:en] Class [`compare_three_way]
    [:zh_CN] 类 [`compare_three_way]
]

[para]
[:en] In this subclause, [`[*BUILTIN-PTR-THREE-WAY](T, U)] for types [`T] and
[`U] is a boolean constant expression.
[:zh_CN] 本子条款中，[`[*BUILTIN-PTR-THREE-WAY](T, U)] 对于类型 [`T] 和 [`U] 是
布尔常量表达式。

[:en] [`[*BUILTIN-PTR-THREE-WAY](T, U)] is [`true] if and only if [`<=>] in the
expression
[:zh_CN] 当且仅当表达式

[codeblock:notation]
declval<T>() <=> declval<U>()
[codeblock:end]

[:en@~] resolves to a built-in operator comparing pointers.
[:zh_CN@~] 中的 [`<=>] 被解决为比较指针的内建运算符时，
[`[*BUILTIN-PTR-THREE-WAY](T, U)] 为 [`true]。

[para]
[:en] In addition to being available via inclusion of the [`<compare>] header,
the class [`compare_three_way] is available when the header [`<functional>] is
included.
[:zh_CN] 除了通过包含头文件 [`<compare>] 外，包含头文件 [`<functional>] 后也可以
使用类 [`compare_three_way]。

[codeblock:declaration]
template<class T, class U>
  requires three_way_comparable_with<T, U> || [*BUILTIN-PTR-THREE-WAY](T, U)
constexpr auto operator()(T&& t, U&& u) const;
[codeblock:end]

[enter:description]
[para:expects]
[:en] If the expression [`std::forward<T>(t) <=> std::forward<U>(u)] results in
a call to a built-in operator [`<=>] comparing pointers of type [`P], the
conversion sequences from both [`T] and [`U] to [`P] are equality-preserving
([#concepts.equality]).
[:zh_CN] 如果表达式 [`std::forward<T>(t) <=> std::forward<U>(u)] 导致对比较 [`P]
类型的指针的内建 [`<=>] 运算符的调用，则从 [`T] 和 [`U] 到 [`P] 的转换序列都应是
维持相等性的（[#concepts.equality]）。

[para:effects]
[list]
[item]
[:en] If the expression [`std::forward<T>(t) <=> std::forward<U>(u)] results in
a call to a built-in operator [`<=>] comparing pointers of type [`P], returns
[`strong_ordering::less] if (the converted value of) [`t] precedes [`u] in the
implementation-defined strict total order ([#range.cmp]) over pointers of type
[`P], [`strong_ordering::greater] if [`u] precedes [`t], and otherwise
[`strong_ordering::equal].
[:zh_CN] 如果表达式 [`std::forward<T>(t) <=> std::forward<U>(u)] 导致对比较 [`P]
类型的指针的内建 [`<=>] 运算符的调用，则当在某个类型 [`P] 的指针上的由实现定义的
严格全序（[#range.cmp]）中 [`t]（的经转换后的值）先于 [`u] 时，返回
[`strong_ordering::less]，当 [`u] 先于 [`t] 时返回 [`strong_ordering::greater]，
否则返回 [`strong_ordering::equal]。

[item]
[:en] Otherwise, equivalent to:
[`return std::forward<T>(t) <=> std::forward<U>(u);]
[:zh_CN] 否则，等价于：
[`return std::forward<T>(t) <=> std::forward<U>(u);]
[list:end]
[exit:description]
