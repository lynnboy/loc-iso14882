[section#coroutine.trivial.awaitables
    [:en] Trivial awaitables
    [:zh_CN] 平凡的可等待体
]

[%@library suspend_never]
[%@library suspend_never[!await_ready]]
[%@library suspend_never[!await_suspend]]
[%@library suspend_never[!await_resume]]
[%@library await_ready[!suspend_never]]
[%@library await_suspend[!suspend_never]]
[%@library await_resume[!suspend_never]]
[%@library suspend_always]
[%@library suspend_always[!await_ready]]
[%@library suspend_always[!await_suspend]]
[%@library suspend_always[!await_resume]]
[%@library await_ready[!suspend_always]]
[%@library await_suspend[!suspend_always]]
[%@library await_resume[!suspend_always]]
[codeblock:synopsis]
namespace std {
  struct suspend_never {
    constexpr bool await_ready() const noexcept { return true; }
    constexpr void await_suspend(coroutine_handle<>) const noexcept {}
    constexpr void await_resume() const noexcept {}
  };
  struct suspend_always {
    constexpr bool await_ready() const noexcept { return false; }
    constexpr void await_suspend(coroutine_handle<>) const noexcept {}
    constexpr void await_resume() const noexcept {}
  };
}
[codeblock:end]

[para]
[enter:note]
[:en]
The types [`suspend_never] and [`suspend_always] can be used to indicate that an
[~await-expression] should either never suspend or always suspend, and in either
case not produce a value.
[:zh_CN]
类型 [`suspend_never] 和 [`suspend_always] 可以用于指定一个[~等待表达式]要么永远
不会暂停，要么总是会暂停，并在任何情况下都不产生值。
[exit:note]
