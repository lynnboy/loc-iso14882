[section#limits.syn
    [:en] Header [`<limits>] synopsis
    [:zh_CN] 头文件 [`<limits>] 纲要

[%[`<limits>] [@limits]] [%@library <limits> [@limits]]
[%[`numeric_limits]] [%@library numeric_limits]
[%@library float_round_style]
[%@library float_denorm_style]
]

[codeblock:synopsis]
namespace std {
  // [:en] [#fp.style], floating-point type properties
  // [|:zh_CN] [#fp.style]，浮点类型的性质
  enum float_round_style;
  enum float_denorm_style;

  // [:en] [#numeric.limits], class template [`numeric_limits]
  // [|:zh_CN] [#numeric.limits]，类模板 [`numeric_limits]
  template<class T> class numeric_limits;

  template<> class numeric_limits<bool>;

  template<> class numeric_limits<char>;
  template<> class numeric_limits<signed char>;
  template<> class numeric_limits<unsigned char>;
  template<> class numeric_limits<char16_t>;
  template<> class numeric_limits<char32_t>;
  template<> class numeric_limits<wchar_t>;

  template<> class numeric_limits<short>;
  template<> class numeric_limits<int>;
  template<> class numeric_limits<long>;
  template<> class numeric_limits<long long>;
  template<> class numeric_limits<unsigned short>;
  template<> class numeric_limits<unsigned int>;
  template<> class numeric_limits<unsigned long>;
  template<> class numeric_limits<unsigned long long>;

  template<> class numeric_limits<float>;
  template<> class numeric_limits<double>;
  template<> class numeric_limits<long double>;
}
[codeblock:end]
