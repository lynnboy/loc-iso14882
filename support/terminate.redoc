[section#terminate
    [:en] [`terminate]
    [:zh_CN] [`terminate]
]

[%@lib terminate]
[codeblock:declaration]
[[noreturn]] void terminate() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en]
Calls a [`terminate_handler] function.
[:zh_CN]
调用一个 [`terminate_handler] 函数。

[:en]
It is unspecified which [`terminate_handler] function will be called if an
exception is active during a call to [`set_terminate].
[:zh_CN]
当调用 [`set_terminate] 的过程中有异常被激活时，调用哪个 [`terminate_handler]
函数是未指明的。

[:en]
Otherwise calls the current [`terminate_handler] function.
[:zh_CN]
否则就调用当前的 [`terminate_handler] 函数。

[begin:note]
[:en]
A default [`terminate_handler] is always considered a callable handler in this
context.
[:zh_CN]
这种语境下，预置 [`terminate_handler] 总是当做是可调用的处理函数。
[end:note]

[para:remarks]
[:en]
Called by the implementation when exception handling must be abandoned for any
of several reasons ([#except.terminate]).
[:zh_CN]
当由于几种原因而必须放弃异常处理时由实现调用（[#except.terminate]）。

[:en]
May also be called directly by the program.
[:zh_CN]
也可以被程序直接调用。
[div:end]
