[section#support.srcloc.class
    [:en] Class [`source_location]
    [:zh_CN] 类 [`source_location]
]

[% [`<source_location>] [@source_location]]
[%@library source_location]
[codeblock:synopsis]
namespace std {
  struct source_location {
    // [:en] source location construction
    // [|:zh_CN] [`source_location] 构造
    static consteval source_location current() noexcept;
    constexpr source_location() noexcept;

    // [:en] source location field access
    // [|:zh_CN] [`source_location] 字段访问
    constexpr uint_least32_t line() const noexcept;
    constexpr uint_least32_t column() const noexcept;
    constexpr const char* file_name() const noexcept;
    constexpr const char* function_name() const noexcept;

  private:
    uint_least32_t line_;               // [=Expos]
    uint_least32_t column_;             // [=Expos]
    const char* file_name_;             // [=Expos]
    const char* function_name_;         // [=Expos]
  };
}
[codeblock:end]

[para]
[:en] The type [`source_location] meets the [*Cpp17DefaultConstructible],
[*Cpp17CopyConstructible], [*Cpp17CopyAssignable], and [*Cpp17Destructible]
requirements ([#utility.arg.requirements]).
[:zh_CN] 类型 [`source_location] 满足 [*Cpp17DefaultConstructible]，
[*Cpp17CopyConstructible]，[*Cpp17CopyAssignable] 和 [*Cpp17Destructible] 的规定
（[#utility.arg.requirements]）。

[:en] Lvalues of type [`source_location] are swappable ([#swappable.requirements]).
[:zh_CN] [`source_location] 类型的左值可以交换（[#swappable.requirements]）。

[:en] All of the following conditions are [`true]:
[:zh_CN] 以下各条件全部为 [`true]：

[list]
[item] [`is_nothrow_move_constructible_v<source_location>]
[item] [`is_nothrow_move_assignable_v<source_location>]
[item] [`is_nothrow_swappable_v<source_location>]
[list:end]

[enter:note]
[:en] The intent of [`source_location] is to have a small size and efficient
copying.
[:zh_CN] [`source_location] 的意图是大小很小且能高效复制。
[exit:note]

[para]
[:en] The data members [`file_name_] and [`function_name_] always each refer to
an [=ntbs].
[:zh_CN] 数据成员 [`file_name_] 和 [`function_name_] 总是各自指代一个 [=ntbs]。

[para]
[:en] The copy/move constructors and the copy/move assignment operators of
[`source_location] meet the following postconditions:
[:zh_CN] [`source_location] 的复制/移动构造函数和复制/移动赋值运算符满足以下各项
后条件：

[:en] Given two objects [`lhs] and [`rhs] of type [`source_location], where
[`lhs] is a copy/move result of [`rhs], and where [`rhs_p] is a value denoting
the state of [`rhs] before the corresponding copy/move operation, then each of
the following conditions is [`true]:
[:zh_CN] 给定 [`source_location] 类型的两个对象 [`lhs] 和 [`rhs]，其中 [`lhs] 为
[`rhs] 的复制/移动结果，且 [`rhs_p] 为代表 [`rhs] 在相应复制/移动操作之前的状态，
则以下各项条件均为 [`true]：

[list]
[item] [`strcmp(lhs.file_name(), rhs_p.file_name()) == 0]
[item] [`strcmp(lhs.function_name(), rhs_p.function_name()) == 0]
[item] [`lhs.line() == rhs_p.line()]
[item] [`lhs.column() == rhs_p.column()]
[list:end]

[include support.srcloc.cons]

[include support.srcloc.obs]
