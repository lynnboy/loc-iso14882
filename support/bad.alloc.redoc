[section#bad.alloc
    [:en] Class [`bad_alloc]
    [:zh_CN] 类 [`bad_alloc]
[:][%@library bad_alloc]
]

[codeblock:synopsis]
namespace std {
  class bad_alloc : public exception {
  public:
    bad_alloc() noexcept;
    bad_alloc(const bad_alloc&) noexcept;
    bad_alloc& operator=(const bad_alloc&) noexcept;
    const char* what() const noexcept override;
  };
}
[codeblock:end]

[para]
[:en]
The class [`bad_alloc] defines the type of objects thrown as exceptions by the
implementation to report a failure to allocate storage.
[:zh_CN]
[`bad_alloc] 类定义了当实现报告分配存储失败时所抛出的异常对象的类型。

[%@library bad_alloc[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
bad_alloc() noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Constructs an object of class [`bad_alloc].
[:zh_CN]
构造类 [`bad_alloc] 的对象。
[exit:description]

[%@library bad_alloc[![:en]constructor[:zh_CN]构造函数]]
[%@library operator=[!bad_alloc]]
[%@library bad_alloc[!operator=]]
[codeblock:declaration]
bad_alloc(const bad_alloc&) noexcept;
bad_alloc& operator=(const bad_alloc&) noexcept;
[codeblock:end]

[enter:description]
[para:effects]
[:en]
Copies an object of class [`bad_alloc].
[:zh_CN]
复制类 [`bad_alloc] 的对象。
[exit:description]

[%@library what[!bad_alloc]]
[%@library bad_alloc[!what]]
[codeblock:declaration]
const char* what() const noexcept override;
[codeblock:end]

[enter:description]
[para:returns]
[:en]
An [%@impldef return value of [`bad_alloc::what]] implementation-defined
[$:sc ntbs].
[:zh_CN]
一个[%@impldef [`bad_alloc::what]的返回值]由实现定义的 [$:sc ntbs]。

[para:remarks]
[:en]
The message may be a null-terminated multibyte string ([#multibyte.strings]),
suitable for conversion and display as a [`wstring] ([#string.classes],
[#locale.codecvt]).
[:zh_CN]
该消息可能是个空终结多字节字符串（[#multibyte.strings]），且适于转换并显示为一个
[`wstring]（[#string.classes]，[#locale.codecvt]）。
[exit:description]
