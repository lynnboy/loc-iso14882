[section#bad.exception
    [:en] Class [`bad_exception]
    [:zh_CN] 类 [`bad_exception]
]

[%@library bad_exception]
[%@library bad_exception[![:en]constructor[:zh_CN]构造函数]]
[codeblock:synopsis]
namespace std {
  class bad_exception : public exception {
  public:
    bad_exception() noexcept;
    bad_exception(const bad_exception&) noexcept;
    bad_exception& operator=(const bad_exception&) noexcept;
    const char* what() const noexcept override;
  };
}
[codeblock:end]

[para]
[:en]
The class [`bad_exception] defines the type of object referenced by the
[`exception_ptr] returned from a call to [`current_exception] ([#propagation])
when the current active exception object fails to copy.
[:zh_CN]
[`bad_exception] 类定义了当当前活跃的异常对象无法复制时，对 [`current_exception]
（[#propagation]）的调用所返回的 [`exception_ptr] 所指代的对象的类型。

[%@library what[!bad_exception]]
[%@library bad_exception[!what]]
[codeblock:declaration]
const char* what() const noexcept override;
[codeblock:end]

[enter:description]
[para:returns]
[:en]
An [%@impldef return value of [`bad_exception::what]] implementation-defined
[$:sc ntbs].
[:zh_CN]
一个[%@impldef [`bad_exception::what]的返回值]由实现定义的 [$:sc ntbs]。

[para:remarks]
[:en]
The message may be a null-terminated multibyte string ([#multibyte.strings]),
suitable for conversion and display as a [`wstring] ([#string.classes],
[#locale.codecvt]).
[:zh_CN]
该消息可能是个空终结多字节字符串（[#multibyte.strings]），且适于转换并显示为一个
[`wstring]（[#string.classes]，[#locale.codecvt]）。
[exit:description]
