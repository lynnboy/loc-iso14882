[section#climits.syn
    [:en] Header [`<climits>] synopsis
    [:zh_CN] 头文件 [`<climits] 纲要
]

[%@hdr@def climits]
[codeblock:synopsis]
// [:en] all freestanding \
[:zh_CN] 全自立式
#define BOOL_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define CHAR_BIT[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define CHAR_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SCHAR_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define UCHAR_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define USHRT_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SHRT_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define UINT_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define INT_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define ULONG_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LONG_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define ULLONG_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LLONG_WIDTH[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SCHAR_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SCHAR_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define UCHAR_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define CHAR_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define CHAR_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define MB_LEN_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SHRT_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define SHRT_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define USHRT_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define INT_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define INT_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define UINT_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LONG_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LONG_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define ULONG_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LLONG_MIN[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define LLONG_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
#define ULLONG_MAX[[redoc("`:lib@macro<")]] [[redoc("[=seebelow]")]]
[codeblock:end]

[para]
[:en] The header [?libheader climits] defines all macros the same as the
C standard library header [?libheader limits.h], except that it does not define
the macro [`BITINT_MAXWIDTH].
[:zh_CN] 头文件 [?libheader climits] 中定义了与 C 标准程序库头文件 [?libheader limits.h]
相同的全部宏，但它不定义宏 [`BITINT_MAXWIDTH]。

[begin:note]
[:en] Except for the [`WIDTH] macro, [`CHAR_BIT] and [`MB_LEN_MAX], a macro
referring to an integer type [`T] defines a constant whose type is the
promoted type of [`T] ([#conv.prom]).
[:zh_CN] 除了 [`WIDTH] 宏、[`CHAR_BIT] 和 [`MB_LEN_MAX] 以外，代表整数类型 [`T]
的宏所定义的常量的类型是 [`T] 的提升后的类型（[#conv.prom]）。
[end:note]

[para:xref@c] 5.2.4.2.1
