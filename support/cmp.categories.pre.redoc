[section#cmp.categories.pre
    [:en] Preamble
    [:zh_CN] 导言
]

[para]
[:en]
The types [`weak_equality], [`strong_equality], [`partial_ordering],
[`weak_ordering], and [`strong_ordering] are collectively termed the
[+comparison category types].
[:zh_CN]
类型 [`weak_equality]、[`strong_equality]、[`partial_ordering]、
[`weak_ordering] 和 [`strong_ordering] 统称为[+比较类别类型]。

[:en]
Each is specified in terms of an exposition-only data member named [`value]
whose value typically corresponds to that of an enumerator from one of the
following exposition-only enumerations:
[:zh_CN]
它们每个都是依照一个仅为阐释目的的名为 [`value] 的数据成员来指定的，其值通常都
对应于以下的仅为阐释目的的枚举之一的一个枚举符：

[codeblock:notation]
enum class [^eq] { [^equal] = 0, [^equivalent] = [^equal],
                [^nonequal] = 1, [^nonequivalent] = [^nonequal] };   // [=expos]
enum class [^ord] { [^less] = -1, [^greater] = 1 };                  // [=expos]
enum class [^ncmp] { [^unordered] = -127 };                       // [=expos]
[codeblock:end]

[para]
[begin:note]
[:en]
The types [`strong_ordering] and [`weak_equality] correspond, respectively, to
the terms total ordering and equivalence in mathematics.
[:zh_CN]
类型 [`strong_ordering] 和 [`weak_equality] 分别对应于数学中的全序和等价概念。
[end:note]

[para]
[:en]
The relational and equality operators for the comparison category types are
specified with an anonymous parameter of unspecified type.
[:zh_CN]
这些比较类别类型的关系和相等性运算符，被指定为具有一个未指明类型的匿名形参。

[:en]
This type shall be selected by the implementation such that these parameters can
accept literal [`0] as a corresponding argument.
[:zh_CN]
实现选择这个类型时应当使得这些形参可以接受字面量 [`0] 作为其对应实参。

[begin:example]
[:en] [`nullptr_t] meets this requirement.
[:zh_CN] [`nullptr_t] 满足这项规定。
[end:example]

[:en]
In this context, the behavior of a program that supplies an argument other than
a literal [`0] is undefined.
[:zh_CN]
在这种语境中，程序如果提供除了字面量 [`0] 之外的实参，则其行为未定义。

[para]
[:en]
For the purposes of this subclause, [+substitutability] is the property that
[`f(a) == f(b)] is [`true] whenever [`a == b] is true, where [`f] denotes a
function that reads only comparison-salient state that is accessible via the
argument[=']s public const members.
[:zh_CN]
对于本子条款来说，[+可替代性]是指，每当 [`a == b] 为真时 [`f(a) == f(b)] 就为
[`true]，其中 [`f] 代表某个仅读取从实参的公开 const 成员可以访问到的那些对于比较
有意义的状态的函数。
