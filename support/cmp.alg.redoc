[section#cmp.alg
    [:en] Comparison algorithms
    [:zh_CN] 比较算法
]

[%@library strong_order]
[codeblock:declaration]
template<class T> constexpr strong_ordering strong_order(const T& a, const T& b);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two values and produces a result of type [`strong_ordering]:
[:zh_CN] 比较两个值并产生 [`strong_ordering] 类型的结果。

[list]
[item]
[:en] If [`numeric_limits<T>::is_iec559] is [`true], returns a result of type
[`strong_ordering] that is consistent with the [`totalOrder] operation as
specified in ISO/IEC/IEEE 60559.
[:zh_CN] 如果 [`numeric_limits<T>::is_iec559] 为 [`true]，则返回与 ISO/IEC/IEEE
60559 所指定的 [`totalOrder] 操作相一致的 [`strong_ordering] 类型的结果。

[item]
[:en] Otherwise, returns [`a <=> b] if that expression is well-formed and
convertible to [`strong_ordering].
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构且可以转换为 [`strong_ordering]，则返回
该表达式。

[item]
[:en] Otherwise, if the expression [`a <=> b] is well-formed, then the function
is defined as deleted.
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构，则函数被定义为弃置的。

[item]
[:en] Otherwise, if the expressions [`a == b] and [`a < b] are each well-formed
and convertible to [`bool], then
[:zh_CN] 否则，如果表达式 [`a == b] 和 [`a < b] 都良构且都可以转换为 [`bool] 则

[list]
[item]
[:en] if [`a == b] is [`true], returns [`strong_ordering::equal];
[:zh_CN] 如果 [`a == b] 为 [`true]，则返回 [`strong_ordering::equal]；
[item]
[:en] otherwise, if [`a < b] is [`true], returns [`strong_ordering::less];
[:zh_CN] 否则，如果 [`a < b] 为 [`true]，则返回 [`strong_ordering::less]；
[item]
[:en] otherwise, returns [`strong_ordering::greater].
[:zh_CN] 否则，返回 [`strong_ordering::greater]。
[list:end]

[item]
[:en] Otherwise, the function is defined as deleted.
[:zh_CN] 否则，函数被定义为弃置的。
[list:end]
[exit:description]

[%@library weak_order]
[codeblock:declaration]
template<class T> constexpr weak_ordering weak_order(const T& a, const T& b);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two values and produces a result of type [`weak_ordering]:
[:zh_CN] 比较两个值并产生 [`weak_ordering] 类型的结果。

[list]
[item]
[:en] Returns [`a <=> b] if that expression is well-formed and convertible to
[`weak_ordering].
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构且可以转换为 [`weak_ordering]，则返回
该表达式。

[item]
[:en] Otherwise, if the expression [`a <=> b] is well-formed, then the function
is defined as deleted.
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构，则函数被定义为弃置的。

[item]
[:en] Otherwise, if the expressions [`a == b] and [`a < b] are each well-formed
and convertible to [`bool], then
[:zh_CN] 否则，如果表达式 [`a == b] 和 [`a < b] 都良构且都可以转换为 [`bool] 则

[list]
[item]
[:en] if [`a == b] is [`true], returns [`weak_ordering::equivalent];
[:zh_CN] 如果 [`a == b] 为 [`true]，则返回 [`weak_ordering::equivalent]；
[item]
[:en] otherwise, if [`a < b] is [`true], returns [`weak_ordering::less];
[:zh_CN] 否则，如果 [`a < b] 为 [`true]，则返回 [`weak_ordering::less]；
[item]
[:en] otherwise, returns [`weak_ordering::greater].
[:zh_CN] 否则，返回 [`weak_ordering::greater]。
[list:end]

[item]
[:en] Otherwise, the function is defined as deleted.
[:zh_CN] 否则，函数被定义为弃置的。
[list:end]
[exit:description]

[%@library partial_order]
[codeblock:declaration]
template<class T> constexpr partial_ordering partial_order(const T& a, const T& b);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two values and produces a result of type [`partial_ordering]:
[:zh_CN] 比较两个值并产生 [`partial_ordering] 类型的结果。

[list]
[item]
[:en] Returns [`a <=> b] if that expression is well-formed and convertible to
[`partial_ordering].
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构且可以转换为 [`partial_ordering]，则
返回该表达式。

[item]
[:en] Otherwise, if the expression [`a <=> b] is well-formed, then the function
is defined as deleted.
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构，则函数被定义为弃置的。

[item]
[:en] Otherwise, if the expressions [`a == b] and [`a < b] are each well-formed
and convertible to [`bool], then
[:zh_CN] 否则，如果表达式 [`a == b] 和 [`a < b] 都良构且都可以转换为 [`bool] 则

[list]
[item]
[:en] if [`a == b] is [`true], returns [`partial_ordering::equivalent];
[:zh_CN] 如果 [`a == b] 为 [`true]，则返回 [`partial_ordering::equivalent]；
[item]
[:en] otherwise, if [`a < b] is [`true], returns [`partial_ordering::less];
[:zh_CN] 否则，如果 [`a < b] 为 [`true]，则返回 [`partial_ordering::less]；
[item]
[:en] otherwise, returns [`partial_ordering::greater].
[:zh_CN] 否则，返回 [`partial_ordering::greater]。
[list:end]

[item]
[:en] Otherwise, the function is defined as deleted.
[:zh_CN] 否则，函数被定义为弃置的。
[list:end]
[exit:description]

[%@library strong_equal]
[codeblock:declaration]
template<class T> constexpr strong_equality strong_equal(const T& a, const T& b);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two values and produces a result of type [`strong_equality]:
[:zh_CN] 比较两个值并产生 [`strong_equality] 类型的结果。

[list]
[item]
[:en] Returns [`a <=> b] if that expression is well-formed and convertible to
[`strong_equality].
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构且可以转换为 [`strong_equality]，则
返回该表达式。

[item]
[:en] Otherwise, if the expression [`a <=> b] is well-formed, then the function
is defined as deleted.
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构，则函数被定义为弃置的。

[item]
[:en] Otherwise, if the expressions [`a == b] is well-formed and convertible to
[`bool], then
[:zh_CN] 否则，如果表达式 [`a == b] 良构且可以转换为 [`bool] 则

[list]
[item]
[:en] if [`a == b] is [`true], returns [`strong_equality::equal];
[:zh_CN] 如果 [`a == b] 为 [`true]，则返回 [`strong_equality::equal]；
[item]
[:en] otherwise, returns [`strong_equality::nonequal].
[:zh_CN] 否则，返回 [`strong_equality::nonequal]。
[list:end]

[item]
[:en] Otherwise, the function is defined as deleted.
[:zh_CN] 否则，函数被定义为弃置的。
[list:end]
[exit:description]

[%@library weak_equal]
[codeblock:declaration]
template<class T> constexpr weak_equality weak_equal(const T& a, const T& b);
[codeblock:end]

[enter:description]
[para:effects]
[:en] Compares two values and produces a result of type [`weak_equality]:
[:zh_CN] 比较两个值并产生 [`weak_equality] 类型的结果。

[list]
[item]
[:en] Returns [`a <=> b] if that expression is well-formed and convertible to
[`strong_equality].
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构且可以转换为 [`strong_equality]，则
返回该表达式。

[item]
[:en] Otherwise, if the expression [`a <=> b] is well-formed, then the function
is defined as deleted.
[:zh_CN] 否则，如果表达式 [`a <=> b] 良构，则函数被定义为弃置的。

[item]
[:en] Otherwise, if the expressions [`a == b] is well-formed and convertible to
[`bool], then
[:zh_CN] 否则，如果表达式 [`a == b] 良构且可以转换为 [`bool] 则

[list]
[item]
[:en] if [`a == b] is [`true], returns [`weak_equality::equivalent];
[:zh_CN] 如果 [`a == b] 为 [`true]，则返回 [`weak_equality::equivalent]；
[item]
[:en] otherwise, returns [`weak_equality::nonequivalent].
[:zh_CN] 否则，返回 [`weak_equality::nonequivalent]。
[list:end]

[item]
[:en] Otherwise, the function is defined as deleted.
[:zh_CN] 否则，函数被定义为弃置的。
[list:end]
[exit:description]
