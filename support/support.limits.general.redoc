[section#support.limits.general
    [:en] General
    [:zh_CN] 综述
]

[para]
[:en]
The headers [`<limits>] ([#limits.syn]), [`<climits>] ([#climits.syn]), and
[`<cfloat>] ([#cfloat.syn]) supply characteristics of [%implementatin-dependent]
implementation-dependent arithmetic types ([#basic.fundamental]).
[:zh_CN]
头文件 [`<limits>]（[#limits.syn]），[`<climits>]（[#climits.syn]），和
[`<cfloat>]（[#cfloat.syn]）提供了[%特定于实现]特定于实现的算术类型的特征
（[#basic.fundamental]）。

[para]
[:en]
The header [`<version>] supplies implementation-dependent information about the
C++ standard library (e.g., version number and release date).
[:zh_CN]
头文件 [`<version>] 提供有关 C++ 标准程序库的特定于实现的信息（例如版本号和发布
日期）。

[para]
[:en]
The macros in [#support.ft] are defined after inclusion of the header
[`<version>] or one of the corresponding headers specified in the table.
[:zh_CN]
包含头文件 [`<version>] 或者下表中指定的相应头文件之一之后，[#support.ft] 中的
各个宏将被定义。

[enter:note]
[:en]
Future versions of this International Standard might replace the values of these
macros with greater values.
[:zh_CN]
本国际标准的未来版本可能会将这些宏的值替换为更大的值。
[exit:note]

[table:grid#tab:support.ft
    [:en] Standard library feature-test macros
    [:zh_CN] 标准程序库功能特性检查宏
    [|@code
        [:en] Macro name
        [:zh_CN] 宏名 ]
    [|@code
        [:en] Value
        [:zh_CN] 值 ]
    [|@code
        [:en] Header(s)
        [:zh_CN] 头文件 ]
]

[%@library __cpp_lib_addressof_constexpr]
[|] __cpp_lib_addressof_constexpr
[|] 201603L
[|] <memory>
[-]

[%@library __cpp_lib_allocator_traits_is_always_equal]
[|] __cpp_lib_allocator_traits_is_always_equal
[|] 201411L
[|] <memory> <scoped_allocator> <string> <deque> <forward_list> <list> <vector>
    <map> <set> <unordered_map> <unordered_set>
[-]

[%@library __cpp_lib_any]
[|] __cpp_lib_any
[|] 201606L
[|] <any>
[-]

[%@library __cpp_lib_apply]
[|] __cpp_lib_apply
[|] 201603L
[|] <tuple>
[-]

[%@library __cpp_lib_array_constexpr]
[|] __cpp_lib_array_constexpr
[|] 201603L
[|] <iterator> <array>
[-]

[%@library __cpp_lib_as_const]
[|] __cpp_lib_as_const
[|] 201510L
[|] <utility>
[-]

[%@library __cpp_lib_atomic_is_always_lock_free]
[|] __cpp_lib_atomic_is_always_lock_free
[|] 201603L
[|] <atomic>
[-]

[%@library __cpp_lib_atomic_ref]
[|] __cpp_lib_atomic_ref
[|] 201806L
[|] <atomic>
[-]

[%@library __cpp_lib_bit_cast]
[|] __cpp_lib_bit_cast
[|] 201806L
[|] <bit>
[-]

[%@library __cpp_lib_bind_front]
[|] __cpp_lib_bind_front
[|] 201811L
[|] <functional>
[-]

[%@library __cpp_lib_bool_constant]
[|] __cpp_lib_bool_constant
[|] 201505L
[|] <type_traits>
[-]

[%@library __cpp_lib_boyer_moore_searcher]
[|] __cpp_lib_boyer_moore_searcher
[|] 201603L
[|] <functional>
[-]

[%@library __cpp_lib_byte]
[|] __cpp_lib_byte
[|] 201603L
[|] <cstddef>
[-]

[%@library __cpp_lib_char8_t]
[|] __cpp_lib_char8_t
[|] 201811L
[|] <atomic> <filesystem> <istream> <limits> <locale> <ostream> <string>
    <string_view>
[-]

[%@library __cpp_lib_chrono]
[|] __cpp_lib_chrono
[|] 201611L
[|] <chrono>
[-]

[%@library __cpp_lib_chrono_udls]
[|] __cpp_lib_chrono_udls
[|] 201304L
[|] <chrono>
[-]

[%@library __cpp_lib_clamp]
[|] __cpp_lib_clamp
[|] 201603L
[|] <algorithm>
[-]

[%@library __cpp_lib_complex_udls]
[|] __cpp_lib_complex_udls
[|] 201309L
[|] <complex>
[-]

[%@library __cpp_lib_concepts]
[|] __cpp_lib_concepts
[|] 201806L
[|] <concepts>
[-]

[%@library __cpp_lib_constexpr_misc]
[|] __cpp_lib_constexpr_misc
[|] 201811L
[|] <array> <functional> <iterator> <string_view> <tuple> <utility>
[-]

[%@library __cpp_lib_constexpr_swap_algorithms]
[|] __cpp_lib_constexpr_swap_algorithms
[|] 201806L
[|] <algorithm>
[-]

[%@library __cpp_lib_destroying_delete]
[|] __cpp_lib_destroying_delete
[|] 201811L
[|] <new>
[-]

[%@library __cpp_lib_enable_shared_from_this]
[|] __cpp_lib_enable_shared_from_this
[|] 201603L
[|] <memory>
[-]

[%@library __cpp_lib_erase_if]
[|] __cpp_lib_erase_if
[|] 201811L
[|] <string> <deque> <forward_list> <list> <vector> <map> <set> <unordered_map>
    <unordered_set>
[-]

[%@library __cpp_lib_exchange_function]
[|] __cpp_lib_exchange_function
[|] 201304L
[|] <utility>
[-]

[%@library __cpp_lib_execution]
[|] __cpp_lib_execution
[|] 201603L
[|] <execution>
[-]

[%@library __cpp_lib_filesystem]
[|] __cpp_lib_filesystem
[|] 201703L
[|] <filesystem>
[-]

[%@library __cpp_lib_gcd_lcm]
[|] __cpp_lib_gcd_lcm
[|] 201606L
[|] <numeric>
[-]

[%@library __cpp_lib_generic_associative_lookup]
[|] __cpp_lib_generic_associative_lookup
[|] 201304L
[|] <map> <set>
[-]

[%@library __cpp_lib_generic_unordered_lookup]
[|] __cpp_lib_generic_unordered_lookup
[|] 201811L
[|] <unordered_map> <unordered_set>
[-]

[%@library __cpp_lib_hardware_interference_size]
[|] __cpp_lib_hardware_interference_size
[|] 201703L
[|] <new>
[-]

[%@library __cpp_lib_has_unique_object_representations]
[|] __cpp_lib_has_unique_object_representations
[|] 201606L
[|] <type_traits>
[-]

[%@library __cpp_lib_hypot]
[|] __cpp_lib_hypot
[|] 201603L
[|] <cmath>
[-]

[%@library __cpp_lib_incomplete_container_elements]
[|] __cpp_lib_incomplete_container_elements
[|] 201505L
[|] <forward_list> <list> <vector>
[-]

[%@library __cpp_lib_integer_sequence]
[|] __cpp_lib_integer_sequence
[|] 201304L
[|] <utility>
[-]

[%@library __cpp_lib_integral_constant_callable]
[|] __cpp_lib_integral_constant_callable
[|] 201304L
[|] <type_traits>
[-]

[%@library __cpp_lib_invoke]
[|] __cpp_lib_invoke
[|] 201411L
[|] <functional>
[-]

[%@library __cpp_lib_is_aggregate]
[|] __cpp_lib_is_aggregate
[|] 201703L
[|] <type_traits>
[-]

[%@library __cpp_lib_is_constant_evaluated]
[|] __cpp_lib_is_constant_evaluated
[|] 201811L
[|] <type_traits>
[-]

[%@library __cpp_lib_is_final]
[|] __cpp_lib_is_final
[|] 201402L
[|] <type_traits>
[-]

[%@library __cpp_lib_is_invocable]
[|] __cpp_lib_is_invocable
[|] 201703L
[|] <type_traits>
[-]

[%@library __cpp_lib_is_null_pointer]
[|] __cpp_lib_is_null_pointer
[|] 201309L
[|] <type_traits>
[-]

[%@library __cpp_lib_is_swappable]
[|] __cpp_lib_is_swappable
[|] 201603L
[|] <type_traits>
[-]

[%@library __cpp_lib_launder]
[|] __cpp_lib_launder
[|] 201606L
[|] <new>
[-]

[%@library __cpp_lib_list_remove_return_type]
[|] __cpp_lib_list_remove_return_type
[|] 201806L
[|] <forward_list> <list>
[-]

[%@library __cpp_lib_logical_traits]
[|] __cpp_lib_logical_traits
[|] 201510L
[|] <type_traits>
[-]

[%@library __cpp_lib_make_from_tuple]
[|] __cpp_lib_make_from_tuple
[|] 201606L
[|] <tuple>
[-]

[%@library __cpp_lib_make_reverse_iterator]
[|] __cpp_lib_make_reverse_iterator
[|] 201402L
[|] <iterator>
[-]

[%@library __cpp_lib_make_unique]
[|] __cpp_lib_make_unique
[|] 201304L
[|] <memory>
[-]

[%@library __cpp_lib_map_try_emplace]
[|] __cpp_lib_map_try_emplace
[|] 201411L
[|] <map>
[-]

[%@library __cpp_lib_math_special_functions]
[|] __cpp_lib_math_special_functions
[|] 201603L
[|] <cmath>
[-]

[%@library __cpp_lib_memory_resource]
[|] __cpp_lib_memory_resource
[|] 201603L
[|] <memory_resource>
[-]

[%@library __cpp_lib_node_extract]
[|] __cpp_lib_node_extract
[|] 201606L
[|] <map> <set> <unordered_map> <unordered_set>
[-]

[%@library __cpp_lib_nonmember_container_access]
[|] __cpp_lib_nonmember_container_access
[|] 201411L
[|] <iterator> <array> <deque> <forward_list> <list> <map> <regex> <set>
    <string> <unordered_map> <unordered_set> <vector>
[-]

[%@library __cpp_lib_not_fn]
[|] __cpp_lib_not_fn
[|] 201603L
[|] <functional>
[-]

[%@library __cpp_lib_null_iterators]
[|] __cpp_lib_null_iterators
[|] 201304L
[|] <iterator>
[-]

[%@library __cpp_lib_optional]
[|] __cpp_lib_optional
[|] 201606L
[|] <optional>
[-]

[%@library __cpp_lib_parallel_algorithm]
[|] __cpp_lib_parallel_algorithm
[|] 201603L
[|] <algorithm> <numeric>
[-]

[%@library __cpp_lib_quoted_string_io]
[|] __cpp_lib_quoted_string_io
[|] 201304L
[|] <iomanip>
[-]

[%@library __cpp_lib_ranges]
[|] __cpp_lib_ranges
[|] 201811L
[|] <algorithm> <functional> <iterator> <memory> <ranges>
[-]

[%@library __cpp_lib_raw_memory_algorithms]
[|] __cpp_lib_raw_memory_algorithms
[|] 201606L
[|] <memory>
[-]

[%@library __cpp_lib_result_of_sfinae]
[|] __cpp_lib_result_of_sfinae
[|] 201210L
[|] <functional> <type_traits>
[-]

[%@library __cpp_lib_robust_nonmodifying_seq_ops]
[|] __cpp_lib_robust_nonmodifying_seq_ops
[|] 201304L
[|] <algorithm>
[-]

[%@library __cpp_lib_sample]
[|] __cpp_lib_sample
[|] 201603L
[|] <algorithm>
[-]

[%@library __cpp_lib_scoped_lock]
[|] __cpp_lib_scoped_lock
[|] 201703L
[|] <mutex>
[-]

[%@library __cpp_lib_shared_mutex]
[|] __cpp_lib_shared_mutex
[|] 201505L
[|] <shared_mutex>
[-]

[%@library __cpp_lib_shared_ptr_arrays
[|] __cpp_lib_shared_ptr_arrays
[|] 201611L
[|] <memory>
[-]

[%@library __cpp_lib_shared_ptr_weak_type]
[|] __cpp_lib_shared_ptr_weak_type
[|] 201606L
[|] <memory>
[-]

[%@library __cpp_lib_shared_timed_mutex]
[|] __cpp_lib_shared_timed_mutex
[|] 201402L
[|] <shared_mutex>
[-]

[%@library __cpp_lib_string_udls]
[|] __cpp_lib_string_udls
[|] 201304L
[|] <string>
[-]

[%@library __cpp_lib_string_view]
[|] __cpp_lib_string_view
[|] 201606L
[|] <string> <string_view>
[-]

[%@library __cpp_lib_three_way_comparison]
[|] __cpp_lib_three_way_comparison
[|] 201711L
[|] <compare>
[-]

[%@library __cpp_lib_to_chars]
[|] __cpp_lib_to_chars
[|] 201611L
[|] <charconv>
[-]

[%@library __cpp_lib_transformation_trait_aliases]
[|] __cpp_lib_transformation_trait_aliases
[|] 201304L
[|] <type_traits>
[-]

[%@library __cpp_lib_transparent_operators]
[|] __cpp_lib_transparent_operators
[|] 201510L
[|] <memory> <functional>
[-]

[%@library __cpp_lib_tuple_element_t]
[|] __cpp_lib_tuple_element_t
[|] 201402L
[|] <tuple>
[-]

[%@library __cpp_lib_tuples_by_type]
[|] __cpp_lib_tuples_by_type
[|] 201304L
[|] <utility> <tuple>
[-]

[%@library __cpp_lib_type_trait_variable_templates]
[|] __cpp_lib_type_trait_variable_templates
[|] 201510L
[|] <type_traits>
[-]

[%@library __cpp_lib_uncaught_exceptions]
[|] __cpp_lib_uncaught_exceptions
[|] 201411L
[|] <exception>
[-]

[%@library __cpp_lib_unordered_map_try_emplace]
[|] __cpp_lib_unordered_map_try_emplace
[|] 201411L
[|] <unordered_map>
[-]

[%@library __cpp_lib_variant]
[|] __cpp_lib_variant
[|] 201606L
[|] <variant>
[-]

[%@library __cpp_lib_void_t]
[|] __cpp_lib_void_t
[|] 201411L
[|] <type_traits>
[-]

[table:end]
