[section#expr.arith.conv
    [:en] Usual arithmetic conversions
    [:zh_CN] 一般算术转换
]

[para]
[:en]
Many binary operators that expect operands of arithmetic or enumeration type
cause conversions and yield result types in a similar way.
[:zh_CN]
许多预期其操作数为算术或枚举类型的二元运算符，都以相似方式引发转换和产生其结果
类型。

[:en]
The purpose is to yield a common type, which is also the type of the result.
[:zh_CN]
其目标是生成一个公共类型，同时也是其结果类型。

[:en]
This pattern is called the [+usual arithmetic conversions[%conversion
[!usual arithmetic]]], which are defined as follows:
[:zh_CN]
这种模式被称为[+一般算术转换[%转换[!一般算术～]]]，其定义如下：

[list]
[item]
[:en]
If either operand is of scoped enumeration type ([#dcl.enum]), no conversions
are performed; if the other operand does not have the same type, the expression
is ill-formed.
[:zh_CN]
如果任何操作数是有作用域枚举类型（[#dcl.enum]），则不进行任何转换；若有另一个
操作数具有不同的类型，则表达式非良构。

[item]
[:en] Otherwise, if either operand is of floating-point type, the following
rules are applied:
[:zh_CN] 否则，如果任何操作数为浮点类型，则应用如下规则：

[list]
[item]
[:en] If both operands have the same type, no further conversion is needed.
[:zh_CN] 如果两个操作数类型相同，则无需进一步的转换。

[item]
[:en] Otherwise, if one of the operands is of a non-floating-point type, that
operand is converted to the type of the operand with the floating-point type.
[:zh_CN] 否则，如果操作数之一是非浮点类型，则将该操作数转换为具有浮点类型的
操作数的类型。

[item]
[:en] Otherwise, if the floating-point conversion ranks ([#conv.rank]) of
the types of the operands are ordered but not equal, then the operand of the
type with the lesser floating-point conversion rank is converted to the type of
the other operand.
[:zh_CN] 否则，如果各操作数的类型的浮点转换等级（[#conv.rank]）有序且不相等，则
将具有较小浮点转换等级的类型的操作数转换为另一个操作数的类型。

[item]
[:en] Otherwise, if the floating-point conversion ranks of the types of the
operands are equal, then the operand with the lesser floating-point conversion
subrank ([#conv.rank]) is converted to the type of the other operand.
[:zh_CN] 否则，如果各操作数的类型的浮点转换等级相等，则将具有较小浮点转换子等级
（[#conv.rank]）的操作数转换为另一个操作数的类型。

[item]
[:en] Otherwise, the expression is ill-formed.
[:zh_CN] 否则，该表达式非良构。
[list:end]

[item]
[:en]
Otherwise, the integral promotions ([#conv.prom]) are performed on both
operands.[#:fn]
[:zh_CN]
否则，对两个操作数实施整型提升（[#conv.prom]）[#:fn]。

[note:foot]
[:en]
As a consequence, operands of type [`:key bool], [`:key char8_t],
[`:key char16_t], [`:key char32_t], [`:key wchar_t], or of enumeration type are
converted to some integral type.
[:zh_CN]
其结果是，类型 [`:key bool]，[`:key char8_t]，[`:key char16_t]，[`:key char32_t]，
[`:key wchar_t]，或枚举类型的操作数都被转换为某种整型类型。
[note:end]

[:en]
Then the following rules are applied to the promoted operands:
[:zh_CN]
然后对提升后的操作数应用如下规则：

[list]

[item]
[:en]
If both operands have the same type, no further conversion is needed.
[:zh_CN]
如果两个操作数具有相同类型，则不作进一步转换。

[item]
[:en]
Otherwise, if both operands have signed integer types or both have unsigned
integer types, the operand with the type of lesser integer conversion rank is
converted to the type of the operand with greater rank.
[:zh_CN]
否则，若两个操作数都具有有符号整数类型或都具有无符号整数类型，则将具有更小整数
转换等级的类型的操作数转换为具有更大等级的类型。

[item]
[:en]
Otherwise, if the operand that has unsigned integer type has rank greater than
or equal to the rank of the type of the other operand, the operand with signed
integer type is converted to the type of the operand with unsigned integer type.
[:zh_CN]
否则，若具有无符号整数类型的操作数的等级大于等于另一个操作数的类型的等级，则将
具有有符号整数类型的操作数转换为具有无符号整数类型的操作数的类型。

[item]
[:en]
Otherwise, if the type of the operand with signed integer type can represent all
of the values of the type of the operand with unsigned integer type, the operand
with unsigned integer type is converted to the type of the operand with signed
integer type.
[:zh_CN]
否则，若具有有符号整数类型的操作数的类型，能够表示具有无符号整数类型的操作数的
类型的全部值，则将具有无符号整数类型的操作数转换为具有有符号整数类型的操作数的
类型。

[item]
[:en]
Otherwise, both operands are converted to the unsigned integer type
corresponding to the type of the operand with signed integer type.
[:zh_CN]
否则，将两个操作数都转换为与具有有符号整数类型的操作数的类型相对应的无符号
整数类型。
[list:end]
[list:end]

[para]
[:en]
If one operand is of enumeration type and the other operand is of a different
enumeration type or a floating-point type, this behavior is deprecated
([#depr.arith.conv.enum]).
[:zh_CN]
如果一个操作数具有某个枚举类型而另一个操作数具有不同的枚举类型或浮点类型，则
该行为被摒弃（[#depr.arith.conv.enum]）。
