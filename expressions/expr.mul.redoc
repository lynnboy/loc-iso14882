[section#expr.mul
    [:en] Multiplicative operators
    [:zh_CN] 乘性运算符

[%  [:en] expression[!multiplicative operators]
    [:zh_CN] 表达式[!乘性运算符～] ]
[%  [:en] operator[!multiplicative]
    [:zh_CN] 运算符[!乘性～] ]
]

[para]
[:en]
The multiplicative operators [`*], [`/], and [`%] group left-to-right.
[:zh_CN]
乘性运算符 [`*]、[`/] 和 [`%] 按从左向右组合。

[:en]
[%operator[!multiplication]] [%[`*][%operator[!multiplication]]]
[%operator[!division]] [%[`/][%operator[!division]]]
[%operator[!remainder]] [%[`%][%operator[!remainder]]]
[%remainder operator[%operator[!remainder]]]
[:zh_CN]
[%运算符[!乘法～]] [%[`*][%运算符[!乘法～]]]
[%运算符[!除法～]] [%[`/][%运算符[!除法～]]]
[%运算符[!求余～]] [%[`%][%运算符[!求余～]]]
[%求余运算符[%运算符[!求余～]]]

[syntax]
[rule multiplicative-expression [:zh_CN] 乘性表达式 ]
    [| pm-expression ]
    [| multiplicative-expression [`*] pm-expression ]
    [| multiplicative-expression [`/] pm-expression ]
    [| multiplicative-expression [`%] pm-expression ]
[rule:end]
[syntax:end]

[para]
[:en]
The operands of [`*] and [`/] shall have arithmetic or unscoped enumeration type;
the operands of [`%] shall have integral or unscoped enumeration type.
[:zh_CN]
[`*] 和 [`/] 的操作数应当具有算术或无作用域枚举类型；[`%] 的操作数应当具有整型或
无作用域枚举类型。

[:en]
The usual arithmetic conversions ([#expr.arith.conv]) are performed on the
operands and determine the type of the result.
[:zh_CN]
对操作数实施一般算术转换（[#expr.arith.conv]）并确定结果的类型。

[para]
[:en]
The binary [`*] operator indicates multiplication.
[:zh_CN]
二元 [`*] 运算符表示乘法。

[para]
[:en]
The binary [`/] operator yields the quotient, and the binary [`%] operator
yields the remainder from the division of the first expression by the second.
[:zh_CN]
二元 [`/] 运算符产生由第一个表达式除以第二个的商，而二元 [`%] 运算符产生其余数。

[:en]
[%zero[!undefined division by]]
If the second operand of [`/] or [`%] is zero, the behavior is undefined.
[:zh_CN]
[%零[!未定义的除以～]]
若 [`/] 或 [`%] 的第二个操作数为零，则其行为是未定义的。

[:en]
For integral operands, the [`/] operator yields the algebraic quotient with any
fractional part discarded;[#:fn]
[:zh_CN]
对于整型操作数，[`/] 运算符产生算术商，并丢弃小数部分[#:fn]；

[note:foot]
[:en]
This is often called truncation towards zero.
[:zh_CN]
这通常被称为向零截断。
[note:end]

[:en@~]
if the quotient [`a/b] is representable in the type of the result,
[`(a/b)*b + a%b] is equal to [`a]; otherwise, the behavior of both [`a/b] and
[`a%b] is undefined.
[:zh_CN@~]
若 [`a/b] 的商可以由结果类型表示，则 [`(a/b)*b + a%b] 等于 [`a]；否则 [`a/b] 和
[`a%b] 的行为都是未定义的。
