[section#expr.prim.id
    [:en] Names
    [:zh_CN] 名字
]

[syntax]
[rule id-expression [:zh_CN] 标识表达式 ]
    [| unqualified-id ]
    [| qualified-id ]
[rule:end]
[syntax:end]

[para]
[:en]
[%name] [%id-expression]
An [~id-expression] is a restricted form of a [~primary-expression].
[:zh_CN]
[%名字] [%标识表达式]
[~标识表达式]是[~初等表达式]的一种受限形式。

[enter:note]
[:en]
An [~id-expression] can appear after [`.] and [`->] operators ([#expr.ref]).
[:zh_CN]
[~标识表达式]可处于 [`.] 和 [`->] 运算符（[#expr.ref]）之后。
[exit:note]

[para]
[:en]
An [~id-expression] that denotes a non-static data member or non-static member
function of a class can only be used:
[:zh_CN]
代表类的非静态数据成员或非静态成员函数的[~标识表达式]，仅可按如下方式使用：

[list]
[item]
[:en]
as part of a class member access ([#expr.ref]) in which the object expression
refers to the member[=']s class[#:note#fn:$section.1] or a class derived from
that class, or
[:zh_CN]
作为类成员访问（[#expr.ref]）的一部分，其中的对象表达式涉指该成员所在类
[#:note#fn:$section.1]或从这个类派生的类，或者

[note:foot#fn:$section.1]
[:en]
This also applies when the object expression is an implicit [`(*this)]
([#class.mfct.non-static]).
[:zh_CN]
这在以隐含的 [`(*this)] 作为对象表达式（[#class.mfct.non-static]）时同样适用。
[note:end]

[item]
[:en]
to form a pointer to member ([#expr.unary.op]), or
[:zh_CN]
用以构成成员指针（[#expr.unary.op]），或者

[item]
[:en]
if that [~id-expression] denotes a non-static data member and it appears in an
unevaluated operand.
[:zh_CN]
该[~标识表达式]代表某个非静态数据成员，并且它出现于某个免求值操作数之中。

[enter:example]
[codeblock]
struct S {
  int m;
};
int i = sizeof(S::m);           // OK
int j = sizeof(S::m + 42);      // OK
[codeblock:end]
[exit:example]
[list:end]

[include expr.prim.id.unqual]

[include expr.prim.id.qual]
