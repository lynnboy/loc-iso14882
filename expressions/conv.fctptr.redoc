[section:chapter#conv.mem
    [:en] Function pointer conversions
    [:zh_CN] 函数指针转换
]

[para]
[:en]
[%conversion[!function pointer]]
A prvalue of type ["pointer to [`noexcept] function] can be converted to a
prvalue of type ["pointer to function].
[:zh_CN]
[%转换[!函数指针～]]
“[`noexcept] 函数的指针”类型的纯右值可以转换为“函数的指针”类型。

[:en]
The result is a pointer to the function.
[:zh_CN]
其结果是指向该函数的指针。

[:en]
A prvalue of type ["pointer to member of type [`noexcept] function] can be
converted to a prvalue of type ["pointer to member of type function].
[:zh_CN]
“[`noexcept] 函数类型的成员指针”类型的纯右值可以转换为“函数类型的成员指针”类型。

[:en]
The result designates to the member function.
[:zh_CN]
其结果代表该成员函数。

[begin:example]
[codeblock]
void (*p)();
void (**pp)() noexcept = &p;    // [:en] error: cannot convert to pointer to \tcode{noexcept} function
                                // [:zh_CN|] 错误：无法转换为 [`noexcept] 函数的指针

struct S { typedef void (*p)(); operator p(); };
void (*q)() noexcept = S();     // [:en] error: cannot convert to pointer to \tcode{noexcept} function
                                // [:zh_CN|] 错误：无法转换为 [`noexcept] 函数的指针
[codeblock:end]
[end:example]
