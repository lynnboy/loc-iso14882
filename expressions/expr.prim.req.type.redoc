[section#expr.prim.req.type
    [:en] Type requirements
    [:zh_CN] 类型规定

[%  [:en] requirement [!type]
	[:zh_CN] 规定[!类型～] ]
]

[syntax]
[rule type-requirement [:zh_CN] 类型规定 ]
    [| [`typename] [~:opt nested-name-specifier] type-name [`;] ]
[rule:end]
[syntax:end]

[para]
[:en]
A [~type-requirement] asserts the validity of a type.
[:zh_CN]
[~类型规定]断言一个类型的有效性。

[begin:note]
[:en]
The enclosing [~requires-expression] will evaluate to [`false] if substitution
of template arguments fails.
[:zh_CN]
当将模板实参替换失败时，其外围 [~requires-表达式]求值为 [`false]。
[end:note]

[begin:example]
[codeblock]
template<typename T, typename T::type = 0> struct S;
template<typename T> using Ref = T&;

template<typename T> concept C = requires {
  typename T::inner;    // [:en] required nested member name
                        // [|:zh_CN] 规定的嵌套成员名
  typename S<T>;        // [:en] required class template specialization
                        // [|:zh_CN] 规定的类模板特例
  typename Ref<T>;      // [:en] required alias template substitution, fails if [`T] is void
                        // [|:zh_CN] 规定的别名模板替换，当 [`T] 为 [`void] 时失败
};
[codeblock:end]
[end:example]

[para]
[:en]
A [~type-requirement] that names a class template specialization does not
require that type to be complete ([#basic.types]).
[:zh_CN]
指名类模板特例的[~类型规定]并不要求该类型完整（[#basic.types]）。
