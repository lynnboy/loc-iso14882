[section#expr.pre.incr
    [:en] Increment and decrement
    [:zh_CN] 增量和减量
]

[para]
[:en]
[%expression[!increment]] [%expression[!decrement]]
The operand of prefix [%operator[!increment]] [%prefix [`++]] [`++] is modified
([#defns.access]) by adding [`1].
[:zh_CN]
[%表达式[!增量～]] [%表达式[!减量～]]
前置 [`++] [%运算符[!增量～]] [%前置 [`++]] 的操作数通过加 [`1] 而改变
（[#defns.access]）。

[:en]
The operand shall be a modifiable lvalue.
[:zh_CN]
其操作数应当为可改动的左值。

[:en]
The type of the operand shall be an arithmetic type other than [=cv] [`bool], or
a pointer to a completely-defined object type.
[:zh_CN]
操作数的类型应当是 除 [=cv] [`bool] 之外的算术类型，或完整定义的对象类型的指针。

[:en]
An operand with volatile-qualified type is deprecated; see [#depr.volatile.type].
[:zh_CN]
具有 [`volatile] 限定类型的操作数已被摒弃；参见 [#depr.volatile.type]。

[:en]
The result is the updated operand; it is an lvalue, and it is a bit-field if the
operand is a bit-field.
[:zh_CN]
其结果为更新后的操作数；它是左值，且若操作数为位字段，则它也是位字段。

[:en]
The expression [`++x] is equivalent to [%operator[![`+=]]] [`x+=1].
[:zh_CN]
表达式 [`++x] 与 [%运算符[![`+=]]] [`x+=1] 等价。

[begin:note]
[:en]
See the discussions of addition ([#expr.add]) and assignment operators
([#expr.ass]) for information on conversions.
[:zh_CN]
有关类型转换的信息参见加法（[#expr.add]）和赋值运算符（[#expr.ass]）的讨论。
[end:note]

[para]
[:en]
The operand of prefix [%operator[!decrement]] [%prefix [`--]] [`--] is modified
([#defns.access]) by subtracting [`1].
[:zh_CN]
前置 [%运算符[!减量]] [%前置 [`--]] [`--] 的操作数通过减 [`1] 而改变
（[#defns.access]）。

[:en]
The requirements on the operand of prefix [`--] and the properties of its result
are otherwise the same as those of prefix [`++].
[:zh_CN]
对前置 [`--] 的操作数和其结果的其他属性的规定与前置 [`++] 相同。

[begin:note]
[:en]
For postfix increment and decrement, see [#expr.post.incr].
[:zh_CN]
关于后置增量和减量，参见 [#expr.post.incr]。
[end:note]
