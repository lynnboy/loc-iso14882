[section#expr.prim.id.qual
    [:en] Qualified names
    [:zh_CN] 限定的名字
]

[syntax]
[%  [:en] operator [!scope resolution]
    [:zh_CN] 运算符 [!作用域解析～] ]
[%  [:en] [`::] [%operator[!scope resolution]]
    [:zh_CN] [`::] [%运算符[!作用域解析]] ]
[rule qualified-id [:zh_CN] 限定标识 ]
    [| nested-name-specifier [`:opt template] unqualified-id ]
[rule:end]

[%  [:en] operator [!scope resolution]
    [:zh_CN] 运算符 [!作用域解析～] ]
[%  [:en] name hiding
    [:zh_CN] 名字隐藏 ]
[rule nested-name-specifier [:zh_CN] 嵌套名说明符 ]
    [| [`::] ]
    [| type-name [`::] ]
    [| namespace-name [`::] ]
    [| decltype-specifier [`::] ]
    [| nested-name-specifier identifier [`::] ]
    [| nested-name-specifier [`:opt template] simple-template-id [`::] ]
[rule:end]
[syntax:end]

[:en]
The type denoted by a [~decltype-specifier] in a [~nested-name-specifier] shall
be a class or enumeration type.
[:zh_CN]
[~嵌套名说明符]中的[~decltype-说明符]所代表的类型应当是类或枚举类型。

[para]
[:en]
A [~nested-name-specifier] that denotes a class, optionally followed by the
keyword [`template] ([#temp.names]), and then followed by the name of a member
of either that class ([#class.mem]) or one of its base classes
([#class.derived]), is a [%id[!qualified]] [~qualified-id]; [#class.qual]
describes name lookup for class members that appear in [~qualified-id]s.
[:zh_CN]
代表某个类的[~嵌套名说明符]，可选地跟着关键字 [`template]（[#temp.names]），再
跟着该类或其基类（[#class.derived]）之一的某个成员（[#class.mem]）的名字，构成
[%标识[!限定～]][~限定标识]；[#class.qual] 描述了对出现于[~限定标识]之中的类成员
名字所进行的查找。

[:en]
The result is the member.
[:zh_CN]
其结果是这个成员。

[:en]
The type of the result is the type of the member.
[:zh_CN]
其结果的类型是该成员的类型。

[:en]
The result is an lvalue if the member is a static member function or a data
member and a prvalue otherwise.
[:zh_CN]
如果该成员是静态的成员函数或数据成员，则结果是左值，否则为纯右值。

[enter:note]
[:en]
A class member can be referred to using a [~qualified-id] at any point in its
potential scope ([#basic.scope.class]).
[:zh_CN]
类成员可在其潜作用域（[#basic.scope.class]）的任意点处用[~限定标识]提及。
[exit:note]

[:en]
Where [~type-name] [`::~] [~type-name] is used, the two [~type-name]s shall
refer to the same type (ignoring cv-qualifications); this notation denotes the
destructor of the type so named ([#expr.prim.id.dtor]).
[:zh_CN]
一旦使用了[~类型名] [`::~] [~类型名]，这两个[~类型名]就应当涉指相同的类型（忽略
cv 限定性）；而这个记法就代表所指名的类型的析构函数（[#expr.prim.id.dtor]）。

[:en]
The [~unqualified-id] in a [~qualified-id] shall not be of the form
[`~][~decltype-specifier].
[:zh_CN]
[~限定标识]之中的[~未限定标识]不能具有“[`~] [~decltype-说明符]”的形式。

[para]
[:en]
The [~nested-name-specifier] [`::] names the global namespace.
[:zh_CN]
[~嵌套名说明符] [`::] 指名全局命名空间。

[:en]
A [~nested-name-specifier] that names a namespace ([#basic.namespace]),
optionally followed by the keyword [`template] ([#temp.names]), and then
followed by the name of a member of that namespace (or the name of a member of a
namespace made visible by a [~using-directive]), is a [%id[!qualified]]
[~qualified-id]; [#namespace.qual] describes name lookup for namespace members
that appear in [~qualified-id]s.
[:zh_CN]
指名某个命名空间（[#basic.namespace]）的[~嵌套名说明符]，可选地跟着关键字
[`template]（[#temp.names]），并跟着该命名空间的某个成员的名字（或由于
[~using-指令]而变得可见的某个命名空间的成员的名字），构成 [%标识[!限定～]][~限定
标识]；[#namespace.qual] 说明对出现于[~限定标识]之中的命名空间成员名字所进行的
查找。

[:en]
The result is the member.
[:zh_CN]
其结果是该成员。

[:en]
The type of the result is the type of the member.
[:zh_CN]
其结果的类型是该成员的类型。

[:en]
The result is an lvalue if the member is a function, a variable, or a structured
binding ([#dcl.struct.bind]) and a prvalue otherwise.
[:zh_CN]
如果该成员是函数、变量或结构化绑定（[#dcl.struct.bind]），则结果是左值，否则为
纯右值。

[para]
[:en]
A [~nested-name-specifier] that denotes an enumeration ([#dcl.enum]), followed
by the name of an enumerator of that enumeration, is a [~qualified-id] that
refers to the enumerator.
[:zh_CN]
代表某个枚举的[~嵌套名说明符]（[#dcl.enum]），后面跟着该枚举的某个枚举符的名字，
构成代表该枚举符的[~限定标识]。

[:en]
The result is the enumerator.
[:zh_CN]
其结果为该枚举符。

[:en]
The type of the result is the type of the enumeration.
[:zh_CN]
其结果的类型为该枚举的类型。

[:en]
The result is a prvalue.
[:zh_CN]
该结果为纯右值。

[para]
[:en]
In a [~qualified-id], if the [~unqualified-id] is a [~conversion-function-id],
its [~conversion-type-id] shall denote the same type in both the context in
which the entire [~qualified-id] occurs and in the context of the class denoted
by the [~nested-name-specifier].
[:zh_CN]
在[~限定标识]中，如果其[~未限定标识]是[~转换函数标识]，则该[~转换类型标识]在整个
[~限定标识]所在的语境，和由[~嵌套名说明符]所代表的类的语境中，都应当代表相同的
类型。
