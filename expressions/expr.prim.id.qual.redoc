[section#expr.prim.id.qual
    [:en] Qualified names
    [:zh_CN] 限定的名字
]

[%  [:en] operator [!scope resolution]
    [:zh_CN] 运算符 [!作用域解析～] ]
[%  [:en] [`::] [%operator[!scope resolution]]
    [:zh_CN] [`::] [%运算符[!作用域解析]] ]
[syntax]
[rule qualified-id [:zh_CN] 限定标识 ]
    [| nested-name-specifier [`:opt:key template] unqualified-id ]
[rule:end]

[%  [:en] operator [!scope resolution]
    [:zh_CN] 运算符 [!作用域解析～] ]
[%  [:en] name hiding
    [:zh_CN] 名字隐藏 ]
[rule nested-name-specifier [:zh_CN] 嵌套名说明符 ]
    [| [`::] ]
    [| type-name [`::] ]
    [| namespace-name [`::] ]
    [| decltype-specifier [`::] ]
    [| nested-name-specifier identifier [`::] ]
    [| nested-name-specifier [`:opt:key template] simple-template-id [`::] ]
[rule:end]
[syntax:end]

[para]
[:en]
[%component name]
The component names of a [~qualified-id] are those of its
[~nested-name-specifier] and [~unqualified-id].
[:zh_CN]
[%成分名]
[~限定标识]的成分名为其[~嵌套名说明符]和[~未限定标识]的成分名。

[:en]
The component names of a [~nested-name-specifier] are its [~identifier] (if any)
and those of its [~type-name], [~namespace-name], [~simple-template-id], and/or
[~nested-name-specifier].
[:zh_CN]
[~嵌套名说明符]的成分名为它的[~标识符]（如果有），以及它的[~类型名]，
[~命名空间名]，[~简单模板标识]，以及[~嵌套名说明符]的成分名。

[para]
[:en]
A [~nested-name-specifier] is [+declarative] if it is part of
[:zh_CN]
如果[~嵌套名说明符]是以下各项的一部分，则它是[+声明性]的：
[list]
[item]
[:en@~]
a [~class-head-name],
[:zh_CN@~]
[~类头名]，
[item]
[:en@~]
an [~enum-head-name],
[:zh_CN@~]
[~枚举头名]，
[item]
[:en@~]
a [~qualified-id] that is the [~id-expression] of a [~declarator-id], or
[:zh_CN@~]
作为[~声明符标识]的[~标识表达式]的[~限定标识]，或者
[item]
[:en@~]
a declarative [~nested-name-specifier].
[:zh_CN@~]
声明性[~嵌套名说明符]。
[list:end]

[:en]
A declarative [~nested-name-specifier] shall not have a [~decltype-specifier].
[:zh_CN]
声明性[~嵌套名说明符]不应当带有 [~decltype-说明符]。

[:en]
A declaration that uses a declarative [~nested-name-specifier] shall be a friend
declaration or inhabit a scope that contains the entity being redeclared or
specialized.
[:zh_CN]
使用声明性[~嵌套名说明符]的声明式应当是友元声明式，或者居于包含其所重复声明或
特化的实体的作用域。

[para]
[:en]
The [~nested-name-specifier] [`::] nominates the global namespace.
[:zh_CN]
[~嵌套名说明符] [`::] 提名全局命名空间。

[:en]
A [~nested-name-specifier] with a [~decltype-specifier] nominates the type
denoted by the [~decltype-specifier], which shall be a class or enumeration type.
[:zh_CN]
带有 [~decltype-说明符]的[~嵌套名说明符]提名该 [~decltype-说明符]所代表的类型，
它应当为类或枚举类型。

[:en]
If a [~nested-name-specifier] [$N] is declarative and has a [~simple-template-id]
with a template argument list [$A] that involves a template parameter,
let [$T] be the template nominated by [$N] without [$A].
[:zh_CN]
如果[~嵌套名说明符] [$N] 为声明性的，并带有一个[~简单模板标识]，其模板实参列表
[$A] 涉及某个模板形参，令 [$T] 为 [$N] 没有 [$A] 时所提名的模板。

[:en]
[$T] shall be a class template.
[:zh_CN]
[$T] 应当为类模板。

[list]
[item]
[:en]
If [$A] is the template argument list ([#temp.arg]) of the corresponding
[~template-head] [$H] ([#temp.mem]), [$N] nominates the primary template of [$T];
[$H] shall be equivalent to the [~template-head] of [$T] ([#temp.over.link]).
[:zh_CN]
如果 [$A] 是对应的[~模板头] [$H]（[#temp.mem]）的模板实参列表（[#temp.arg]），则
[$N] 提名 [$T] 的主模板；[$H] 应当等价于 [$T] 的[~模板头]（[#temp.over.link]）。

[item]
[:en]
Otherwise, [$N] nominates the partial specialization ([#temp.spec.partial]) of
[$T] whose template argument list is equivalent to [$A] ([#temp.over.link]);
the program is ill-formed if no such partial specialization exists.
[:zh_CN]
否则，[$N] 提名 [$T] 的模板实参列表等价于 [$A]（[#temp.over.link]）的部分特化式
（[#temp.spec.partial]）；如果不存在这种部分特化式则程序非良构。
[list:end]

[:en]
Any other [~nested-name-specifier] nominates the entity denoted by its
[~type-name], [~namespace-name], [~identifier], or [~simple-template-id].
[:zh_CN]
任何其他[~嵌套名说明符]均提名由其[~类型名]，[~命名空间名]，[~标识符]，或
[~简单模板标识]所代表的实体。

[:en]
If the [~nested-name-specifier] is not declarative, the entity shall not be a
template.
[:zh_CN]
如果[~嵌套名说明符]并非声明性的，则该实体应当不是模板。

[para]
[:en]
A [~qualified-id] shall not be of the form
[~nested-name-specifier] [`:opt:key template] [`~] [~decltype-specifier]
nor of the form [~decltype-specifier] [`::] [`~] [~type-name].
[:zh_CN]
[~限定标识]的形式不能是
“[~嵌套名说明符] [`:opt:key template] [`~] [~decltype-说明符]”，也不能是
“[~decltype-说明符] [`::] [`~] [~类型名]”。

[para]
[:en]
The result of a [~qualified-id] is the entity it denotes ([#basic.lookup.qual]).
[:zh_CN]
[~限定标识]的结果为其所代表的实体（[#basic.lookup.qual]）。

[:en]
The type of the expression is the type of the result.
[:zh_CN]
表达式的类型是结果的类型。

[:en]
The result is an lvalue if the member is a function, a variable, a structured
binding ([#dcl.struct.bind]), a static member function or a data member, and
a prvalue otherwise.
[:zh_CN]
如果成员是函数，变量，结构化绑定（[#dcl.struct.bind]），静态的成员函数或数据成员，
则结果是左值，否则为纯右值。
