[section#expr.throw
    [:en] Throwing an exception
    [:zh_CN] 异常的抛出

[%[`throw]]
[:en]
[%expression[![`throw]]]
[%exception handling[!throwing]]
[:zh_CN]
[%表达式[![`throw]]]
[%异常处理[!抛出]]
]

[syntax]
[rule throw-expression [:zh_CN] throw-表达式 ]
    [| [`:key throw] [~:opt assignment-expression] ]
[rule:end]
[syntax:end]

[para]
[:en]
A [~throw-expression] is of type [`:key void].
[:zh_CN]
[~throw-表达式]的类型为 [`:key void]。

[para]
[:en]
Evaluating a [~throw-expression] with an operand throws an exception
([#except.throw]); the type of the exception object is determined by removing
any top-level [~cv-qualifier]s from the static type of the operand and adjusting
the type from [=lq]array of [`T][=rq] or function type [`T] to [=lq]pointer to
[`T][=rq].
[:zh_CN]
具有一个操作数的 [~throw-表达式]的求值抛出一个异常（[#except.throw]）；该异常
对象的类型是通过移除操作数的静态类型的顶层 [~cv-限定符]，再将类型从“[`T] 的数组”
或函数类型 [`T] 调整为“[`T] 的指针”而确定的。

[para]
[:en]
[%exception handling[!rethrow]]
A [~throw-expression] with no operand rethrows the currently handled exception
([#except.handle]).
[:zh_CN]
[%异常处理[!重新抛出]]
没有操作数的 [~throw-表达式]重新抛出当前处理的异常（[#except.handle]）。

[:en]
The exception is reactivated with the existing exception object; no new
exception object is created.
[:zh_CN]
异常被已经存在的异常对象重新激活；不创建新的异常对象。

[:en]
The exception is no longer considered to be caught.
[:zh_CN]
异常不再当作是已被捕获的。

[begin:example]
[:en]
An exception handler that cannot completely handle the exception itself can be
written like this:
[:zh_CN]
无法完全处理异常的异常处理器，可以这样编写：

[codeblock]
try {
  // ...
} catch (...) {     // [:en] catch all exceptions \
                       [:zh_CN] 捕获所有异常
  // [:en] respond (partially) to exception \
     [:zh_CN] （部分地）响应异常
  throw;            // [:en] pass the exception to some other handler \
                       [:zh_CN] 将异常传递给某个其他处理器
}
[codeblock:end]
[end:example]

[para]
[:en]
[%exception handling[!rethrow]]
[%exception handling[![`terminate] called]]
[%[`terminate][!called]]
If no exception is presently being handled, evaluating a [~throw-expression]
with no operand calls [`std::terminate()] ([#except.terminate]).
[:zh_CN]
[%异常处理[!重新抛出]]
[%异常处理[!调用 [`terminate]]]
[%[`terminate][!调用]]
若当前没有被处理的异常，则执行没有操作数的 [~throw-表达式]将调用
[`std::terminate()]（[#except.terminate]）。
