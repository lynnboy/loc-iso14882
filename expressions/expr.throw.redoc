[section#expr.throw
    [:en] Throwing an exception
    [:zh_CN] 异常的抛出

[%[`throw]]
[:en]
[%expression[![`throw]]]
[%exception handling[!throwing]]
[:zh_CN]
[%表达式[![`throw]]]
[%异常处理[!抛出]]
]

[syntax]
[rule throw-expression [:zh_CN] throw-表达式 ]
    [| [`:key throw] [~:opt assignment-expression] ]
[rule:end]
[syntax:end]

[para]
[:en]
A [~throw-expression] is of type [`:key void].
[:zh_CN]
[~throw-表达式]的类型为 [`:key void]。

[para]
[:en] A [~throw-expression] with an operand throws an exception ([#except.throw]).
[:zh_CN] 具有一个操作数的 [~throw-表达式]抛出一个异常（[#except.throw]）。

[:en] The array-to-pointer ([#conv.array]) and function-to-pointer ([#conv.func])
standard conversions are performed on the operand.
[:zh_CN] 对其操作数实施数组向指针（[#conv.array]）和函数向指针（[#conv.func]）
标准转换。

[:en] The type of the exception object is determined by removing any top-level
[~cv-qualifier]s from the type of the (possibly converted) operand.
[:zh_CN] 异常对象的类型通过移除（可能经转换的）操作数的类型的顶层 [~cv-限定符]
而决定的。

[:en] The exception object is copy-initialized ([#dcl.init.general]) from the
(possibly converted) operand.
[:zh_CN] 该异常对象从（可能经转换的）操作数进行复制初始化（[#dcl.init.general]）。

[para]
[:en]
[%exception handling[!rethrow]]
A [~throw-expression] with no operand rethrows the currently handled exception
([#except.handle]).
[:zh_CN]
[%异常处理[!重新抛出]]
没有操作数的 [~throw-表达式]重新抛出当前处理的异常（[#except.handle]）。

[:en]
[%exception handling[![`terminate] called]]
[%[`terminate][!called]]
If no exception is presently being handled, the function [`std::terminate] is
invoked ([#except.terminate]).
[:zh_CN]
[%异常处理[!调用 [`terminate]]]
[%[`terminate][!调用]]
若当前没有被处理的异常，则调用函数 [`std::terminate]（[#except.terminate]）。

[:en]
Otherwise, the exception is reactivated with the existing exception object; no
new exception object is created.
[:zh_CN]
否则，以现存异常对象重新激活异常；不创建新的异常对象。

[:en]
The exception is no longer considered to be caught.
[:zh_CN]
异常不再当作是已被捕获的。

[begin:example]
[:en]
An exception handler that cannot completely handle the exception itself can be
written like this:
[:zh_CN]
无法完全处理异常的异常处理器，可以这样编写：

[codeblock]
try {
  // ...
} catch (...) {     // [:en] catch all exceptions \
                    [:zh_CN] 捕获所有异常
  // [:en] respond (partially) to exception \
  [:zh_CN] （部分地）响应异常
  throw;            // [:en] pass the exception to some other handler \
                    [:zh_CN] 将异常传递给某个其他处理器
}
[codeblock:end]
[end:example]
