[section#expr.shift
    [:en] Shift operators
    [:zh_CN] 移位运算符
]

[para]
[:en]
[%expression[!left-shift-operator]]
[%expression[!right-shift-operator]]
[%shift operator[!left][%operator[!left shift]]]
[%shift operator[!right][%operator[!right shift]]]
[%right shift operator[%operator [!right shift]]]
[%left shift operator[%operator [!left shift]]]
The shift operators [`<<] and [`>>] group left-to-right.
[:zh_CN]
[%表达式[!左移运算符～]]
[%表达式[!右移运算符～]]
[%移位运算符[!左～][%运算符 [!左移～]]]
[%移位运算符[!右～][%运算符 [!右移～]]]
[%右移运算符[%运算符 [!右移～]]]
[%左移运算符[%运算符 [!左移～]]]
移位运算符 [`<<] 和 [`>>] 按从左向右组合。

[:en]
[%operator [!left shift]] [%[`<<][%operator [!left shift]]]
[%operator [!left shift]] [%[`>>][%operator [!left shift]]]
[:zh_CN]
[%运算符 [!左移～]] [%[`<<][%运算符 [!左移～]]]
[%运算符 [!右移～]] [%[`>>][%运算符 [!右移～]]]

[syntax]
[rule shift-expression [:zh_CN] 移位表达式 ]
    [| additive-expression ]
    [| shift-expression [`<<] additive-expression ]
    [| shift-expression [`>>] additive-expression ]
[rule:end]
[syntax:end]

[:en]
The operands shall be of integral or unscoped enumeration type and integral
promotions are performed.
[:zh_CN]
其操作数应当为整型或无作用域枚举类型，并实施整型提升。

[:en]
The type of the result is that of the promoted left operand.
[:zh_CN]
其结果的类型为提升后的左操作数的类型。

[:en]
[%left shift[!undefined]]
The behavior is undefined if the right operand is negative, or greater than or
equal to the range exponent of the promoted left operand.
[:zh_CN]
[%左移[!未定义的～]]
当右操作数为负数，或大于等于被提升的左操作数的范围指数时，其行为是未定义的。

[para]
[:en]
The value of [`E1 << E2] is the unique value congruent to
[$[`E1] \times 2^[`E2]] modulo [$2^N], where [$N] is the range exponent of the
type of the result.
[:zh_CN]
[`E1 << E1] 的值为唯一与 [$[`E1] \times 2^[`E2]] 模 [$2^N] 同余的值，其中 [$N]
为结果的类型的范围指数。

[enter:note]
[:en]
[`E1] is left-shifted [`E2] bit positions; vacated bits are zero-filled.
[:zh_CN]
[`E1] 左移了 [`E2] 个位位置；遗留位用零填补。
[exit:note]

[para]
[:en]
The value of [`E1 >> E2] is [$[`E1] / 2^[`E2]], rounded down.
[:zh_CN]
[`E1 >> E2] 的值为 [$[`E1] / 2^[`E2]]，向下舍入。

[enter:note]
[:en]
[`E1] is right-shifted [`E2] bit positions.
[:zh_CN]
[`E1] 右移了 [`E2] 个位位置。

[:en]
Right-shift on signed integral types is an arithmetic right shift,
which performs sign-extension.
[:zh_CN]
对有符号整数类型的右移是算术右移，其中进行了符号扩展。
[exit:note]

[para]
[:en]
The expression [`E1] is sequenced before the expression [`E2].
[:zh_CN]
表达式 [`E1] 按顺序早于表达式 [`E2]。
