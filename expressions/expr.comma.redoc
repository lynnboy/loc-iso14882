[section#expr.comma
    [:en] Comma operator
    [:zh_CN] 逗号运算符

[:en]
[%expression[!comma]]
[%operator[!comma]]
[%comma operator[%operator[!comma]]]
[%[`,][%operator[!comma]]]
[%sequencing operator[%operator[!comma]]]
[:zh_CN]
[%表达式[!逗号～]]
[%运算符[!逗号～]]
[%逗号运算符[%运算符[!逗号～]]]
[%[`,][%运算符[!逗号～]]]
[%序列运算符[%运算符[!逗号～]]]
]

[para]
[:en]
The comma operator groups left-to-right.
[:zh_CN]
逗号运算符按从左向右分组。

[syntax]
[rule expression [:zh_CN] ]
    [| assignment-expression ]
    [| expression [`,] assignment-expression ]
[rule:end]
[syntax:end]

[:en]
A pair of expressions separated by a comma is evaluated left-to-right; the left
expression is a discarded-value expression ([#expr.prop]).
[:zh_CN]
一对由逗号分隔的表达式从左向右求值，其左边的表达式是弃值表达式（[#expr.prop]）。

[:en]
The left expression is sequenced before the right expression ([#intro.execution]).
[:zh_CN]
左边的表达式按顺序早于右边的表达式（[#intro.execution]）。

[:en]
The type and value of the result are the type and value of the right operand;
the result is of the same value category as its right operand, and is a
bit-field if its right operand is a bit-field.
[:zh_CN]
其结果的类型和值是右操作数的类型和值；其结果与其右操作数具有相同的值类别，若右
操作数是位字段则其结果为位字段。

[para]
[begin:note]
[:en]
In contexts where the comma token is given a special meaning (e.g. function
calls ([#expr.call]), subscript expressions ([#expr.sub]), lists of initializers
([#dcl.init]), or [~template-argument-list]s ([#temp.names])), the comma
operator as described in this subclause can appear only in parentheses.
[:zh_CN]
在逗号具有特殊含义的语境（例如，函数调用（[#expr.call]），下标表达式（[#expr.sub]），
初始化式的列表（[#dcl.init]），或[~目标实参列表]（[#temp.names]））中，本子条款
中所描述的逗号运算符只能出现在括号里。

[begin:example]
[codeblock]
f(a, (t=3, t+2), c);
[codeblock:end]

[:en]
has three arguments, the second of which has the value [`5].
[:zh_CN]
有三个实参，第二个的值是 [`5]。
[end:example]
[end:note]
