n[section#stopsource.general
    [:en] General
    [:zh_CN] 概述
]

[%@lib stop_source]
[para]
[:en] The class [`stop_source] implements the semantics of making a stop request.
[:zh_CN] 类 [`stop_source] 实现作出停止请求的语义。

[:en] A stop request made on a [`stop_source] object is visible to all
associated [`stop_source] and [`stop_token] ([#stoptoken]) objects.
[:zh_CN] 在某个 [`stop_source] 对象上做出的停止请求，对于所有关联的
[`stop_source] 和 [`stop_token]（[#stoptoken]）对象均可见。

[:en] Once a stop request has been made it cannot be withdrawn (a subsequent
stop request has no effect).
[:zh_CN] 停止请求一旦做出就无法被撤销（后续的停止请求没有效果）。

[%@lib nostopstate_t]
[%@lib nostopstate]
[codeblock:synopsis]
namespace std {
  // [:en] no-shared-stop-state indicator \
  [:zh_CN] 无共享停止状态指示器
  struct nostopstate_t {
    explicit nostopstate_t() = default;
  };
  inline constexpr nostopstate_t nostopstate{};

  class stop_source {
  public:
    // [:en] [#stopsource.cons], constructors, copy, and assignment \
    [:zh_CN] [#stopsource.cons]，构造函数，复制和赋值
    stop_source();
    explicit stop_source(nostopstate_t) noexcept;

    stop_source(const stop_source&) noexcept;
    stop_source(stop_source&&) noexcept;
    stop_source& operator=(const stop_source&) noexcept;
    stop_source& operator=(stop_source&&) noexcept;
    ~stop_source();
    void swap(stop_source&) noexcept;

    // [:en] [#stopsource.mem], stop handling \
    [:zh_CN] [#stopsource.mem]，停止处理
    [[nodiscard]] stop_token get_token() const noexcept;
    [[nodiscard]] bool stop_possible() const noexcept;
    [[nodiscard]] bool stop_requested() const noexcept;
    bool request_stop() noexcept;

    [[nodiscard]] friend bool
      operator==(const stop_source& lhs, const stop_source& rhs) noexcept;
    friend void swap(stop_source& lhs, stop_source& rhs) noexcept;
  };
}
[codeblock:end]
