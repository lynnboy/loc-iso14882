[section#thread.thread.id
    [:en] Class [`thread::id]
    [:zh_CN] 类 [`thread::id]
]

[%@lib thread::id]
[%@lib@member thread[!id]]
[codeblock:synopsis]
namespace std {
  class thread::id {
  public:
    id() noexcept;
  };

  bool operator==(thread::id x, thread::id y) noexcept;
  strong_ordering operator<=>(thread::id x, thread::id y) noexcept;

  template<class charT, class traits>
    basic_ostream<charT, traits>&
      operator<<(basic_ostream<charT, traits>& out, thread::id id);

  // [:en] hash support \
     [:zh_CN] 散列支持
  template<class T> struct hash;
  template<> struct hash<thread::id>;
}
[codeblock:end]

[para]
[:en] An object of type [`thread::id] provides a unique identifier for each
thread of execution and a single distinct value for all [`thread] objects that
do not represent a thread of execution ([#thread.thread.class]).
[:zh_CN] [`thread::id] 类型的对象为每个执行线程提供一个唯一表示，并为所有并不
表示执行线程的 [`thread] 对象提供单个独立的值。

[:en] Each thread of execution has an associated [`thread::id] object that is
not equal to the [`thread::id] object of any other thread of execution and that
is not equal to the [`thread::id] object of any [`thread] object that does not
represent threads of execution.
[:zh_CN] 每个执行线程都有一个相关联的 [`thread::id] 对象，它与任何其他执行线程
的 [`thread::id] 对象都不相等，也与任何并不表示执行线程的 [`thread] 对象的
[`thread::id] 对象不相等。

[para]
[:en] [`thread::id] is a trivially copyable class ([#class.prop]).
[:zh_CN] [`thread::id] 为可平凡复制的类（[#class.prop]）。

[:en] The library may reuse the value of a [`thread::id] of a terminated thread
that can no longer be joined.
[:zh_CN] 程序库可能会重用已经终止且不会再被合并的线程的 [`thread::id] 的值。

[para]
[begin:note]
[:en] Relational operators allow [`thread::id] objects to be used as keys in
associative containers.
[:zh_CN] 关系运算符允许将 [`thread::id] 对象用作关联容器的键。
[end:note]

[%@lib@ctor thread::id]
[codeblock:declaration]
id() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Constructs an object of type [`id].
[:zh_CN] 构造 [`id] 类型的对象。

[para:ensures]
[:en] The constructed object does not represent a thread of execution.
[:zh_CN] 所构造的对象并不表示任何执行线程。
[div:end]

[%@lib@member operator==[!thread::id]]
[codeblock:declaration]
bool operator==(thread::id x, thread::id y) noexcept;
[codeblock:end]

[div:description]
[para:returns]
[:en] [`true] only if [`x] and [`y] represent the same thread of execution or
neither [`x] nor [`y] represents a thread of execution.
[:zh_CN] 仅当 [`x] 和 [`y] 都表示相同执行线程或者 [`x] 和 [`y] 都不表示执行线程
时返回 [`true]。
[div:end]

[%@lib@member operator<=>[!thread::id]]
[codeblock:declaration]
strong_ordering operator<=>(thread::id x, thread::id y) noexcept;
[codeblock:end]

[div:description]
[para]
[:en] Let [$P([`x], [`y])] be an unspecified total ordering over [`thread::id]
as described in [#alg.sorting].
[:zh_CN] 令 [$P([`x], [`y])] 为如 [#alg.sorting] 所述的对 [`thread::id] 的某种
未指明的全序。

[para:returns]
[:en] [`strong_ordering::less] if [$P([`x], [`y])] is [`true].
[:zh_CN] 若 [$P([`x], [`y])] 为 [`true] 则返回 [`strong_ordering::less]。

[:en] Otherwise, [`strong_ordering::greater] if [$P([`y], [`x])] is [`true].
[:zh_CN] 否则，若 [$P([`y], [`x])] 为 [`true] 则返回 [`strong_ordering::greater]。

[:en] Otherwise, [`strong_ordering::equal].
[:zh_CN] 否则，返回 [`strong_ordering::equal]。
[div:end]

[%@lib@member operator<<[!thread::id]]
[codeblock:declaration]
template<class charT, class traits>
  basic_ostream<charT, traits>&
    operator<< (basic_ostream<charT, traits>& out, thread::id id);
[codeblock:end]

[div:description]
[para:effects]
[:en] Inserts an unspecified text representation of [`id] into [`out].
[:zh_CN] 将 [`id] 的某种未指明的文本表示插入到 [`out] 中。

[:en] For two objects of type [`thread::id] [`x] and [`y], if [`x == y] the
[`thread::id] objects have the same text representation and if [`x != y] the
[`thread::id] objects have distinct text representations.
[:zh_CN] 对于两个 [`thread::id] 类型的对象 [`x] 和 [`y]，当 [`x == y] 时，这些
[`thread::id] 对象具有相同的文本表示，而当 [`x != y] 时，这些 [`thread::id] 对象
具有不同的文本表示。

[para:returns]
[:en] [`out].
[:zh_CN] [`out]。
[div:end]

[%@lib@member hash[!thread::id]]
[codeblock:declaration]
template<> struct hash<thread::id>;
[codeblock:end]

[div:description]
[para]
[:en] The specialization is enabled ([#unord.hash]).
[:zh_CN] 特例被启用（[#unord.hash]）。
[div:end]
