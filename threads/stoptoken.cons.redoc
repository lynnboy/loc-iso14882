[section#stoptoken.cons
    [:en] Constructors, copy, and assignment
    [:zh_CN] 构造函数，复制和赋值
]

[%@library stop_token[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
stop_token() noexcept;
[codeblock:end]

[begin:description]
[para:ensures]
[:en] [`stop_possible()] is [`false] and [`stop_requested()] is [`false].
[:zh_CN] [`stop_possible()] 为 [`false] 且 [`stop_requested()] 为 [`false]。

[begin:note]
[:en] Because the created [`stop_token] object can never receive a stop request,
no resources are allocated for a stop state.
[:zh_CN] 由于所创建的 [`stop_token] 对象永远无法接受停止请求，因此没有为停止状态
分配资源。
[end:note]
[end:description]

[%@library stop_token[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
stop_token(const stop_token& rhs) noexcept;
[codeblock:end]

[begin:description]
[para:ensures]
[:en] [`*this == rhs] is [`true].
[:zh_CN] [`*this == rhs] 为 [`true]。

[begin:note]
[:en] [`*this] and [`rhs] share the ownership of the same stop state, if any.
[:zh_CN] [`*this] 和 [`rhs] 共享相同停止状态（如果有）的所有权。
[end:note]
[end:description]

[%@library stop_token[![:en]constructor[:zh_CN]构造函数]]
[codeblock:declaration]
stop_token(stop_token&& rhs) noexcept;
[codeblock:end]

[begin:description]
[para:ensures]
[:en] [`*this] contains the value of [`rhs] prior to the start of construction
and [`rhs.stop_possible()] is [`false].
[:zh_CN] [`*this] 包含构造开始之前的 [`rhs] 的值，且 [`rhs.stop_possible()] 为
[`false]。
[end:description]

[%@library stop_token[![:en]destructor[:zh_CN]析构函数]]
[codeblock:declaration]
~stop_token();
[codeblock:end]

[begin:description]
[para:effects]
[:en] Releases ownership of the stop state, if any.
[:zh_CN] 释放停止状态（如果有）的所有权。
[end:description]

[%@library stop_token[!operator=]]
[%@library operator=[!stop_token]]
[codeblock:declaration]
stop_token& operator=(const stop_token& rhs) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`stop_token(rhs).swap(*this)].
[:zh_CN] 等价于：[`stop_token(rhs).swap(*this)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library stop_token[!operator=]]
[%@library operator=[!stop_token]]
[codeblock:declaration]
stop_token& operator=(stop_token&& rhs) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Equivalent to: [`stop_token(std::move(rhs)).swap(*this)].
[:zh_CN] 等价于：[`stop_token(std::move(rhs)).swap(*this)]。

[para:returns]
[:en] [`*this].
[:zh_CN] [`*this]。
[end:description]

[%@library stop_token[!swap]]
[%@library swap[!stop_token]]
[codeblock:declaration]
void swap(stop_token& rhs) noexcept;
[codeblock:end]

[begin:description]
[para:effects]
[:en] Exchanges the values of [`*this] and [`rhs].
[:zh_CN] 交换 [`*this] 和 [`rhs] 的值。
[end:description]
