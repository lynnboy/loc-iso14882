[section#thread.req.lockable.shared
    [:en] [^:oc SharedLockable] requirements
    [:zh_CN] [^:oc SharedLockable] 规定
]

[para]
[:en] A type [`L] meets the [^:oc SharedLockable] requirements if the following
expressions are well-formed, have the specified semantics, and the expression
[`m.try_lock_shared()] has type [`bool] ([`m] denotes a value of type [`L]).
[:zh_CN] 当以下各表达式良构，具有所指定的语义，且表达式 [`m.try_lock_shared()]
具有类型 [`bool] 时，类型 [`L] 满足 [^:oc SharedLockable] 规定，其中 [`m] 代表
[`L] 类型的值：

[codeblock:declaration]
m.lock_shared()
[codeblock:end]

[div:description]
[para:effects]
[:en]
Blocks until a lock can be acquired for the current execution agent.
[:zh_CN]
阻塞直到在当前执行代理上可以获得一个锁。

[:en] If an exception is thrown then a lock shall not have been acquired for the
current execution agent.
[:zh_CN] 当抛出了异常时，不应当为当前执行代理获得锁。
[div:end]

[codeblock:declaration]
m.try_lock_shared()
[codeblock:end]

[div:description]
[para:effects]
[:en] Attempts to acquire a lock for the current execution agent without
blocking.
[:zh_CN] 尝试为当前执行代理获取一个锁而不造成阻塞。

[:en] If an exception is thrown then a lock shall not have been acquired for the
current execution agent.
[:zh_CN] 当抛出了异常时，不应当为当前执行代理获得锁。

[para:returns]
[:en] [`true] if the lock was acquired, [`false] otherwise.
[:zh_CN] 如果获得了锁则返回 [`true]，否则返回 [`false]。
[div:end]

[codeblock:declaration]
m.unlock_shared()
[codeblock:end]

[div:description]
[para:expects]
[:en] The current execution agent holds a shared lock on [`m].
[:zh_CN] 当前执行代理持有 [`m] 的一个共享锁。

[para:effects]
[:en] Releases a shared lock on [`m] held by the current execution agent.
[:zh_CN] 释放当前执行代理所持有的 [`m] 上的一个共享锁。

[para:throws]
[:en] Nothing.
[:zh_CN] 无。
[div:end]
