[section#thread.condition
    [:en] Condition variables
    [:zh_CN] 条件变量
]

[para]
[:en] Condition variables provide synchronization primitives used to block a
thread until notified by some other thread that some condition is met or until a
system time is reached.
[:zh_CN] 条件变量提供一种同步原语，用于阻塞一个线程，直到由某个其他线程通知某种
条件的达成，或者直到到达某个系统时间。

[:en] Class [`condition_variable] provides a condition variable that can only
wait on an object of type [`unique_lock<mutex>], allowing the implementation to
be more efficiency.
[:zh_CN] 类 [`condition_variable] 提供一种条件变量，它只能在一个
[`unique_lock<mutex>] 类型的对象上等待，这样可以允许实现做到更加高效。

[:en] Class [`condition_variable_any] provides a general condition variable that
can wait on objects of user-supplied lock types.
[:zh_CN] 类 [`condition_variable_any] 提供一种通用的条件变量，可以在用户提供的
锁类型的对象上等待。

[para]
[:en] Condition variables permit concurrent invocation of the [`wait],
[`wait_for], [`wait_until], [`notify_one] and [`notify_all] member functions.
[:zh_CN] 条件变量允许并发地进行 [`wait]、[`wait_for]、[`wait_until]、
[`notify_one] 和 [`notify_all] 等成员函数的调用。

[para]
[:en] The execution of [`notify_one] and [`notify_all] shall be atomic.
[:zh_CN] [`notify_one] 和 [`notify_all] 的执行应当是原子性的。

[:en] The execution of [`wait], [`wait_for], and [`wait_until] shall be
performed in three atomic parts:
[:zh_CN] [`wait]、[`wait_for] 和 [`wait_until] 应当分三个原子性的部分来进行：

[list]
[item]
[:en] the release of the mutex and entry into the waiting state;
[:zh_CN] 释放互斥体并引入等待状态；
[item]
[:en] the unblocking of the wait; and
[:zh_CN] 解除等待的阻塞；以及
[item]
[:en] the reacquisition of the lock.
[:zh_CN] 重新获得锁。
[list:end]

[para]
[:en] The implementation shall behave as if all executions of [`notify_one],
[`notify_all], and each part of the [`wait], [`wait_for], and [`wait_until]
executions are executed in a single unspecified total order consistent with the
[=lq]happens before[=rq] order.
[:zh_CN] 实现应当表现为如同所有对 [`notify_one]、[`notify_all]，以及执行 [`wait]、
[`wait_for] 和 [`wait_until] 中的任何部分的执行，都以一个未指明的由“发生早于”
顺序所构成的全序来执行。

[para]
[:en] Condition variable construction and destruction need not be synchronized.
[:zh_CN] 条件变量的构造和销毁不必是同步的。

[include condition.variable.syn]

[include thread.condition.nonmember]

[include thread.condition.condvar]

[include thread.condition.condvarany]
