[section#thread.syn
    [:en] Header [`<thread>] synopsis
    [:zh_CN] 头文件 [`<thread>] 纲要
]

[%@hdr@def thread]

[codeblock:synopsis]
#include <compare>              // [:en] see [#compare.syn] \
                                [:zh_CN] 参见 [#compare.syn]

namespace std {
  // [:en] [#thread.thread.class], class [`thread] \
  [:zh_CN] [#thread.thread.class]，类 [`thread]
  class thread;

  void swap(thread& x, thread& y) noexcept;

  // [:en] [#thread.jthread.class], class [`jthread] \
  [:zh_CN] [#thread.jthread.class]，类 [`jthread]
  class jthread;

  // [:en] [#thread.thread.this], namespace [`this_thread] \
  [:zh_CN] [#thread.thread.this]，命名空间 [`this_thread]
  namespace this_thread {
    thread::id get_id() noexcept;

    void yield() noexcept;
    template<class Clock, class Duration>
      void sleep_until(const chrono::time_point<Clock, Duration>& abs_time);
    template<class Rep, class Period>
      void sleep_for(const chrono::duration<Rep, Period>& rel_time);
  }
}
[codeblock:end]
