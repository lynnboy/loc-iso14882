[section#saferecl.rcu.domain.members
    [:en] Member functions
    [:zh_CN] 成员函数
]

[%@lib@member lock[!rcu_domain]]
[codeblock:declaration]
void lock() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Opens a region of RCU protection.
[:zh_CN] 打开一个 RCU 保护区。

[para:remarks]
[:en] Calls to [`lock] do not introduce a data race ([#intro.races]) involving
[`*this].
[:zh_CN] 对 [`lock] 的调用并不会引入设计 [`*this] 的数据竞争（[#intro.races]）。
[div:end]

[%@lib@member try_lock[!rcu_domain]]
[codeblock:declaration]
bool try_lock() noexcept;
[codeblock:end]

[div:description]
[para:effects]
[:en] Equivalent to [`lock()].
[:zh_CN] 等价于 [`lock()]。

[para:returns]
[:en] [`true].
[:zh_CN] [`true]。
[div:end]

[%@lib@member unlock[!rcu_domain]]
[codeblock:declaration]
void unlock() noexcept;
[codeblock:end]

[div:description]
[para:expects]
[:en] A call to [`lock] that opened an unclosed region of RCU protection
is sequenced before the call to [`unlock].
[:zh_CN] 一次打开未关闭 RCU 保护区的 [`lock] 调用按顺序早于对 [`unlock] 的调用。

[para:effects]
[:en] Closes the unclosed region of RCU protection that was most recently opened.
[:zh_CN] 关闭最近打开的未关闭 RCU 保护区。

[:en] May invoke scheduled evaluations in [`*this].
[:zh_CN] 可能调用 [`*this] 中的已规划执行。

[para]
[begin:note]
[:en] If such evaluations acquire resources held across any invocation of
[`unlock] on [`*this], deadlock can occur.
[:zh_CN] 如果这种求值所获取的资源的持有期跨越在 [`*this] 上的任何 [`unlock] 调用，
则可能发生死锁。
[end:note]

[para:remarks]
[:en] Calls to [`unlock] do not introduce a data race involving [`*this].
[:zh_CN] 对 [`unlock] 的调用并不会引入设计 [`*this] 的数据竞争。

[begin:note]
[:en] Evaluation of scheduled evaluations can still cause a data race.
[:zh_CN] 对已规划求值的求值仍可能造成数据竞争。
[end:note]
[div:end]
