[section#thread.thread.destr
    [:en] [`thread] destructor
    [:zh_CN] [`thread] 析构函数
]

[%@library thread[![:en]destructor[:zh_CN]析构函数]]
[codeblock:declaration]
~thread();
[codeblock:end]

[enter:description]
[para]
[:en] If [`joinable()], calls [`terminate()].
[:zh_CN] 如果 [`joinable()]，则调用 [`terminate()]。

[:en] Otherwise, has no effects.
[:zh_CN] 否则，没有效果。

[enter:note]
[:en] Either implicitly detaching or joining a [`joinable()] thread in its
destructor could result in difficult to debug correctness (for detach) or
performance (for join) bugs encountered only when an exception is thrown.
[:zh_CN] 在析构函数中隐式地分离线程，或者合并 [`joinable()] 线程，可能导致对只有
在抛出异常时才出现的正确性 BUG（进行分离的情况）或性能 BUG（进行合并的情况）进行
调试时出现困难。

[:en] Thus the programmer must ensure that the destructor is never executed
while the thread is still joinable.
[:zh_CN] 因此程序员必须确保永远不在线程尚可合并时执行其析构函数。
[exit:note]
[exit:description]
