[section#thread.req.lockable.general
    [:en] General
    [:zh_CN] 概述
]

[para]
[:en] An [+execution agent] is an entity such as a thread that may perform work
in parallel with other execution agents.
[:zh_CN] [+执行代理]是如线程这样可以与其他执行代理并行地实施其工作的实体。

[begin:note]
[:en] Implementations or users can introduce other kinds of agents such as
processes or thread-pool tasks.
[:zh_CN] 实现和用户可以引入其他种类的代理，比如进程或线程池任务等。
[end:note]

[:en] The calling agent is determined by context, e.g., the calling thread that
contains the call, and so on.
[:zh_CN] 调用方代理是由语境确定的，比如包含这次调用的调用方线程，等等。

[para]
[begin:note]
[:en] Some lockable objects are [=lq]agent oblivious[=rq] in that they work for
any execution agent model because they do not determine or store the agent[=']s
ID (e.g., an ordinary spin lock).
[:zh_CN] 某些可锁定对象是“代理不敏感的”，它们可以在任何执行代理模型中工作，因为
它们无须确定或存储代理的 ID（例如普通的自旋锁）。
[end:note]

[para]
[:en] The standard library templates [`unique_lock] ([#thread.lock.unique]),
[`shared_lock] ([#thread.lock.shared]), [`scoped_lock] ([#thread.lock.scoped]),
[`lock_guard] ([#thread.lock.guard]), [`lock], [`try_lock]
([#thread.lock.algorithm]), and [`condition_variable_any]
([#thread.condition.condvarany]) all operate on user-supplied lockable objects.
[:zh_CN] 标准程序库模板 [`unique_lock]（[#thread.lock.unique]），[`shared_lock]
（[#thread.lock.shared]），[`scoped_lock]（[#thread.lock.scoped]），
[`lock_guard]（[#thread.lock.guard]），[`lock]，[`try_lock]
（[#thread.lock.algorithm]），以及 [`condition_variable_any]
（[#thread.condition.condvarany]），都在用户提供的可锁定对象上进行操作。

[:en] The [^:oc BasicLockable] requirements, the [^:oc Lockable] requirements,
the [^:oc TimedLockable] requirements, the [^:oc SharedLockable] requirements,
and the [^:oc SharedTimedLockable] requirements list the requirements imposed by
these library types in order to acquire or release ownership of a [`lock] by a
given execution agent.
[:zh_CN] [^:oc BasicLockable] 规定，[^:oc Lockable] 规定，[^:oc TimedLockable]
规定，[^:oc SharedLockable] 规定，以及 [^:oc SharedTimedLockable] 规定列出了由
这些程序库类型提出以在某个给定执行代理中获取或释放一个 [`lock] 所需要的规定。

[begin:note]
[:en] The nature of any lock ownership and any synchronization it entails are
not part of these requirements.
[:zh_CN] 对任何锁的所有权性质，以及其所要求的任何同步操作，并不在这些规定的范围之内。
[end:note]

[para]
[:en] A lock on an object [`m] is said to be
[:zh_CN] 在对象 [`m] 上的锁
[list]
[item]
[:en@~] a [+:adj non-shared[!lock]] if it is acquired by a call to [`lock],
[`try_lock], [`try_lock_for], or [`try_lock_until] on [`m], or
[:zh_CN@~] 如果是通过在 [`m] 上调用 [`lock]，[`try_lock]，[`try_lock_for]，或
[`try_lock_until] 所获得的，则被称为[+:adj 非共享[!锁]]，或者
[item]
[:en@~] a [+:adj shared[!lock]] if it is acquired by a call to [`lock_shared],
[`try_lock_shared], [`try_lock_shared_for], or [`try_lock_shared_until] on [`m].
[:zh_CN@~] 如果是通过在 [`m] 上调用 [`lock_shared]，[`try_lock_shared]，
[`try_lock_shared_for]，或 [`try_lock_shared_until] 所获得的，则被称为
[+:adj 共享[!锁]]。
[list:end]

[begin:note]
[:en] Only the method of lock acquisition is considered; the nature of any lock
ownership is not part of these definitions.
[:zh_CN] 仅考虑获取锁的方法；这些定义中并不包括任何锁所有权性质。
[end:note]
