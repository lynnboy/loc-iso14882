[section#thread.lock.unique.locking
    [:en] Locking
    [:zh_CN] 锁定
]

[%@library lock[!unique_lock]]
[%@library unique_lock[!lock]]
[codeblock:declaration]
void lock();
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`pm->lock()].
[:zh_CN] 如同执行 [`pm->lock()]。

[para:ensures]
[:en] [`owns == true].
[:zh_CN] [`owns == true]。

[para:throws]
[:en] Any exception thrown by [`pm->lock()].
[:zh_CN] 由 [`pm->lock()] 所抛出的任何异常。

[:en] [`system_error] when an exception is required ([#thread.req.exception]).
[:zh_CN] 当需要异常时抛出 [`system_error]（[#thread.req.exception]）。

[para:errors]
[list]
[item]
[:en] [`operation_not_permitted] [=--] if [`pm] is [`nullptr].
[:zh_CN] [`operation_not_permitted] [=--] [`pm] 为 [`nullptr]。

[item]
[:en] [`resource_deadlock_would_occur] [=--] if on entry [`owns] is [`true].
[:zh_CN] [`resource_deadlock_would_occur] [=--] 进入时 [`owns] 为 [`true]。
[list:end]
[div:end]

[%@library try_lock[!unique_lock]]
[%@library unique_lock[!try_lock]]
[codeblock:declaration]
bool try_lock();
[codeblock:end]

[div:description]
[para:requires]
[:en] The supplied [`Mutex] shall meet the [^:oc Lockable] requirements
([#thread.req.lockable.req]).
[:zh_CN] 所提供的 [`Mutex] 应当满足 [^:oc Lockable] 规定
（[#thread.req.lockable.req]）。

[para:effects]
[:en] As if by [`pm->try_lock()].
[:zh_CN] 如同执行 [`pm->try_lock()]。

[para:returns]
[:en] The value returned by the call to [`try_lock()].
[:zh_CN] 对 [`try_lock()] 的调用所返回的值。

[para:ensures]
[:en] [`owns == res], where [`res] is the value returned by the call to
[`try_lock()].
[:zh_CN] [`owns == res]，其中 [`res] 为对 [`try_lock()] 的调用所返回的值。

[para:throws]
[:en] Any exception thrown by [`pm->try_lock()].
[:zh_CN] 由 [`pm->try_lock()] 所抛出的任何异常。

[:en] [`system_error] when an exception is required ([#thread.req.exception]).
[:zh_CN] 当需要异常时抛出 [`system_error]（[#thread.req.exception]）。

[para:errors]
[list]
[item]
[:en] [`operation_not_permitted] [=--] if [`pm] is [`nullptr].
[:zh_CN] [`operation_not_permitted] [=--] [`pm] 为 [`nullptr]。

[item]
[:en] [`resource_deadlock_would_occur] [=--] if on entry [`owns] is [`true].
[:zh_CN] [`resource_deadlock_would_occur] [=--] 进入时 [`owns] 为 [`true]。
[list:end]
[div:end]

[%@library try_lock_until[!unique_lock]]
[%@library unique_lock[!try_lock_until]]
[codeblock:declaration]
template<class Clock, class Duration>
  bool try_lock_until(const chrono::time_point<Clock, Duration>& abs_time);
[codeblock:end]

[div:description]
[para:requires]
[:en] The supplied [`Mutex] shall meet the [^:oc TimedLockable] requirements
([#thread.req.lockable.timed]).
[:zh_CN] 所提供的 [`Mutex] 应当满足 [^:oc TimedLockable] 规定
（[#thread.req.lockable.timed]）。

[para:effects]
[:en] As if by [`pm->try_lock_until(abs_time)].
[:zh_CN] 如同执行 [`pm->try_lock_until(abs_time)]。

[para:returns]
[:en] The value returned by the call to [`try_lock_until(abs_time)].
[:zh_CN] 对 [`try_lock_until(abs_time)] 的调用所返回的值。

[para:ensures]
[:en] [`owns == res], where [`res] is the value returned by the call to
[`try_lock_until(abs_time)].
[:zh_CN] [`owns == res]，其中 [`res] 为对 [`try_lock_until(abs_time)] 的调用所
返回的值。

[para:throws]
[:en] Any exception thrown by [`pm->try_lock_until()].
[:zh_CN] 由 [`pm->try_lock_until()] 所抛出的任何异常。

[:en] [`system_error] when an exception is required ([#thread.req.exception]).
[:zh_CN] 当需要异常时抛出 [`system_error]（[#thread.req.exception]）。

[para:errors]
[list]
[item]
[:en] [`operation_not_permitted] [=--] if [`pm] is [`nullptr].
[:zh_CN] [`operation_not_permitted] [=--] [`pm] 为 [`nullptr]。

[item]
[:en] [`resource_deadlock_would_occur] [=--] if on entry [`owns] is [`true].
[:zh_CN] [`resource_deadlock_would_occur] [=--] 进入时 [`owns] 为 [`true]。
[list:end]
[div:end]

[%@library try_lock_for[!unique_lock]]
[%@library unique_lock[!try_lock_for]]
[codeblock:declaration]
template<class Rep, class Period>
  bool try_lock_for(const chrono::duration<Rep, Period>& rel_time);
[codeblock:end]

[div:description]
[para:requires]
[:en] The supplied [`Mutex] shall meet the [^:oc TimedLockable] requirements
([#thread.req.lockable.timed]).
[:zh_CN] 所提供的 [`Mutex] 应当满足 [^:oc TimedLockable] 规定
（[#thread.req.lockable.timed]）。

[para:effects]
[:en] As if by [`pm->try_lock_for(rel_time)].
[:zh_CN] 如同执行 [`pm->try_lock_for(rel_time)]。

[para:returns]
[:en] The value returned by the call to [`try_lock_for(rel_time)].
[:zh_CN] 对 [`try_lock_for(rel_time)] 的调用所返回的值。

[para:ensures]
[:en] [`owns == res], where [`res] is the value returned by the call to
[`try_lock_for(rel_time)].
[:zh_CN] [`owns == res]，其中 [`res] 为对 [`try_lock_for(rel_time)] 的调用所
返回的值。

[para:throws]
[:en] Any exception thrown by [`pm->try_lock_for()].
[:zh_CN] 由 [`pm->try_lock_for()] 所抛出的任何异常。

[:en] [`system_error] when an exception is required ([#thread.req.exception]).
[:zh_CN] 当需要异常时抛出 [`system_error]（[#thread.req.exception]）。

[para:errors]
[list]
[item]
[:en] [`operation_not_permitted] [=--] if [`pm] is [`nullptr].
[:zh_CN] [`operation_not_permitted] [=--] [`pm] 为 [`nullptr]。

[item]
[:en] [`resource_deadlock_would_occur] [=--] if on entry [`owns] is [`true].
[:zh_CN] [`resource_deadlock_would_occur] [=--] 进入时 [`owns] 为 [`true]。
[list:end]
[div:end]

[%@library unlock[!unique_lock]]
[%@library unique_lock[!unlock]]
[codeblock:declaration]
void unlock();
[codeblock:end]

[div:description]
[para:effects]
[:en] As if by [`pm->unlock()].
[:zh_CN] 如同执行 [`pm->unlock()]。

[para:ensures]
[:en] [`owns == false].
[:zh_CN] [`owns == false]。

[para:throws]
[:en] [`system_error] when an exception is required ([#thread.req.exception]).
[:zh_CN] 当需要异常时抛出 [`system_error]（[#thread.req.exception]）。

[para:errors]
[list]
[item]
[:en] [`operation_not_permitted] [=--] if on entry [`owns] is [`false].
[:zh_CN] [`operation_not_permitted] [=--] 进入时 [`owns] 为 [`false]。
[list:end]
[div:end]
